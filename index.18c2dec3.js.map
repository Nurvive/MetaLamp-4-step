{"mappings":"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","sources":["src/slider/Observer.ts","src/slider/subView/HeadBubble.ts","src/slider/subView/ViewHead.ts","src/slider/subView/Scale.ts","src/slider/subView/Line.ts","src/slider/View.ts","src/slider/Presenter.ts","src/slider/Model.ts","src/slider/Slider.ts","src/slider/jquery.slider.js","src/blocks/slider-template/slider-template.ts","src/index/index.ts"],"sourcesContent":["import {NotifyData} from './types/types';\r\n\r\nclass Observer {\r\n    observers: Array<(data: NotifyData) => void>\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    subscribe(observer: (data: NotifyData) => void): void {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    unsubscribe(observer: (data: NotifyData) => void): void {\r\n        this.observers = this.observers.filter((x) => x !== observer);\r\n    }\r\n\r\n    notify(data: NotifyData): void {\r\n        this.observers.forEach((x) => x(data));\r\n    }\r\n}\r\n\r\nexport {Observer};\r\n","class HeadBubble {\r\n    element: HTMLElement | undefined;\r\n\r\n    parent: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        this.parent = parent;\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.element = document.createElement('span');\r\n        this.element.classList.add('slider__head-bubble');\r\n        this.element.setAttribute('data-type', 'bubble');\r\n        this.parent.append(this.element);\r\n    }\r\n\r\n    update(value: number): void {\r\n        if (this.element) {\r\n            this.element.textContent = String(value);\r\n        }\r\n    }\r\n\r\n    show(): void {\r\n        this.element?.classList.add('slider__head-bubble_active');\r\n    }\r\n\r\n    hide(): void {\r\n        this.element?.classList.remove('slider__head-bubble_active');\r\n    }\r\n}\r\n\r\nexport default HeadBubble;\r\n","import HeadBubble from './HeadBubble';\r\n\r\nclass ViewHead {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    bubble: HeadBubble;\r\n\r\n    constructor(parent: HTMLElement, direction: string,\r\n        value: number, bubbleValue: number) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.bubble = new HeadBubble(this.element);\r\n        this.updatePosition(value);\r\n        this.updateBubble(bubbleValue);\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.element.classList.add('slider__head');\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__head')\r\n            : this.element.classList.add('slider__head', 'slider__head_vertical');\r\n        this.parent.append(this.element);\r\n        this.element.addEventListener('mousedown', this.handleHeadStart);\r\n        this.element.addEventListener('touchstart', this.handleHeadStart);\r\n    }\r\n\r\n    handleHeadStart = (e: MouseEvent | TouchEvent): void => {\r\n        const headEvent = new CustomEvent('headStart', {\r\n            detail: {\r\n                data: e\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    removeHead(): boolean {\r\n        this.element.remove();\r\n        return true;\r\n    }\r\n\r\n    updatePosition(newPos: number): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.style.left = `${newPos * 100}%`;\r\n        } else {\r\n            this.element.style.top = `${newPos * 100}%`;\r\n        }\r\n    }\r\n\r\n    updateBubble(value: number): void {\r\n        if (this.bubble) {\r\n            this.bubble.update(value);\r\n        }\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.bubble.show();\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.bubble.hide();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n}\r\n\r\nexport default ViewHead;\r\n","class Scale {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement, direction: string, min: number, max: number) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.init(min, max);\r\n    }\r\n\r\n    init(min: number, max: number): void {\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__scale')\r\n            : this.element.classList.add('slider__scale', 'slider__scale_vertical');\r\n        this.parent.append(this.element);\r\n        const step = (max - min) / 4;\r\n        for (let i = 0; i <= 100; i += 5) {\r\n            const dash = document.createElement('div');\r\n            dash.classList.add('slider__dash');\r\n            if (i % 25 === 0) {\r\n                const scaleNumber = document.createElement('div');\r\n                scaleNumber.classList.add('slider__scale-number');\r\n                if (this.direction === 'horizontal') {\r\n                    dash.style.left = `${i}%`;\r\n                    scaleNumber.style.left = `${i}%`;\r\n                    dash.append(scaleNumber);\r\n                    this.element.append(dash);\r\n                } else {\r\n                    dash.style.top = `${i}%`;\r\n                    dash.classList.add('slider__dash_vertical');\r\n                    scaleNumber.style.top = `${i}%`;\r\n                    scaleNumber.classList.add('slider__scale-number_vertical');\r\n                    dash.append(scaleNumber);\r\n                    this.element.append(dash);\r\n                }\r\n                const numbers = this.element.querySelectorAll('.slider__scale-number');\r\n                const number = numbers[numbers.length - 1];\r\n                if (i === 0) {\r\n                    number.innerHTML = String(min);\r\n                } else {\r\n                    const dashValue = min + (i / 25) * step;\r\n                    number.innerHTML = Number.isInteger(dashValue)\r\n                        ? String(dashValue)\r\n                        : dashValue.toFixed(2);\r\n                }\r\n            } else if (this.direction === 'horizontal') {\r\n                dash.classList.add('slider__dash_small');\r\n                dash.style.left = `${i}%`;\r\n                this.element.append(dash);\r\n            } else {\r\n                dash.classList.add('slider__dash_small-vertical');\r\n                dash.style.top = `${i}%`;\r\n                this.element.append(dash);\r\n            }\r\n        }\r\n        this.element.addEventListener('click', this.handleScaleClick);\r\n    }\r\n\r\n    handleScaleClick = (e: MouseEvent | TouchEvent): void => {\r\n        const headEvent = new CustomEvent('scaleClick', {\r\n            detail: {\r\n                data: e\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    removeScale(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getLeftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get getTopCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Scale;\r\n","class Line {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    progressBar: HTMLElement;\r\n\r\n    type: string;\r\n\r\n    constructor(parent: HTMLElement, direction: string, type: string) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.type = type;\r\n        this.element = document.createElement('div');\r\n        this.progressBar = document.createElement('span');\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.classList.add('slider__line');\r\n            this.progressBar.classList.add('slider__line-progress');\r\n        } else {\r\n            this.element.classList.add('slider__line', 'slider__line_vertical');\r\n            this.progressBar.classList.add('slider__line-progress', 'slider__line-progress_vertical');\r\n        }\r\n        this.element.append(this.progressBar);\r\n        this.parent.append(this.element);\r\n        this.element.addEventListener('headStart', this.handleHeadStart);\r\n        this.element.addEventListener('scaleClick', this.handleScaleClick);\r\n    }\r\n\r\n    handleHeadStart = (e: CustomEvent): void => {\r\n        const headEvent = new CustomEvent('headStart', {\r\n            detail: {\r\n                data: e.detail.data\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    handleScaleClick = (e: CustomEvent): void => {\r\n        const headEvent = new CustomEvent('scaleClick', {\r\n            detail: {\r\n                data: e.detail.data\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    set setType(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    progressValue(to: HTMLElement, from: HTMLElement | undefined): void {\r\n        if (this.direction === 'horizontal') {\r\n            if (this.type === 'single') {\r\n                this.progressBar.style.width = to.style.left;\r\n            } else if (from !== undefined) {\r\n                this.progressBar.style.width = `${parseInt(to.style.left, 10) - parseInt(from.style.left, 10)}%`;\r\n                this.progressBar.style.left = from.style.left;\r\n            }\r\n        } else if (this.type === 'single') {\r\n            this.progressBar.style.height = to.style.top;\r\n        } else if (from !== undefined) {\r\n            this.progressBar.style.height = `${parseInt(to.style.top, 10) - parseInt(from.style.top, 10)}%`;\r\n            this.progressBar.style.top = from.style.top;\r\n        }\r\n    }\r\n\r\n    removeLine(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getLeftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get getTopCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import {Observer} from './Observer';\r\nimport ViewHead from './subView/ViewHead';\r\nimport Scale from './subView/Scale';\r\nimport Line from './subView/Line';\r\nimport {State} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass View extends Observer {\r\n    private readonly elem: HTMLElement;\r\n\r\n    private readonly state: State;\r\n\r\n    head: ViewHead;\r\n\r\n    scale: Scale;\r\n\r\n    line: Line;\r\n\r\n    head2?: ViewHead;\r\n\r\n    private handleSwipe: (event: (MouseEvent | TouchEvent)) => Array<number>;\r\n\r\n    constructor(elem: HTMLElement, options: State) {\r\n        super();\r\n        this.elem = elem;\r\n        this.handleSwipe = () => [];\r\n        this.state = Object.assign({}, options);\r\n        this.line = new Line(this.elem, this.state.direction, this.state.type);\r\n        this.scale = new Scale(this.line.element,\r\n            this.state.direction, this.state.min, this.state.max);\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead(this.line.element,\r\n            this.state.direction, headStartPos, this.state.valueTo);\r\n    }\r\n\r\n    init(): void {\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead(this.line.element,\r\n                this.state.direction, head2StartPos, this.state.valueFrom);\r\n            this.head2.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double') {\r\n                if (this.head2 !== undefined) {\r\n                    this.head2.showBubble();\r\n                }\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.setup();\r\n    }\r\n\r\n    changePosition(data: NotifyData): void {\r\n        if (data.onlyState) return;\r\n        let position = 0;\r\n        if (data.valueNumber !== undefined) {\r\n            position = data.valueNumber;\r\n        } else {\r\n            throw new Error('Новое значение не определено');\r\n        }\r\n        if (data.target === 'valueTo') {\r\n            this.head.updatePosition(position);\r\n            this.head.updateBubble(this.state.valueTo);\r\n            this.state.onChangeTo(this.state.valueTo);\r\n            this.line.progressValue(this.head.element, this.head2?.element);\r\n        } else if (data.target === 'valueFrom') {\r\n            if (this.head2 !== undefined) {\r\n                this.head2.updatePosition(position);\r\n                this.head2.updateBubble(this.state.valueFrom);\r\n                this.state.onChangeFrom(this.state.valueFrom);\r\n                this.line.progressValue(this.head.element, this.head2.element);\r\n            } else {\r\n                throw new Error('Head2 не существует');\r\n            }\r\n        }\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.updateState({\r\n            target: 'bubble',\r\n            valueBoolean: false,\r\n            onlyState: true\r\n        });\r\n        this.head.hideBubble();\r\n        this.head2?.hideBubble();\r\n        this.notify({\r\n            target: 'bubble',\r\n            valueBoolean: false,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.updateState({\r\n            target: 'bubble',\r\n            valueBoolean: true,\r\n            onlyState: true\r\n        });\r\n        this.head.showBubble();\r\n        this.head2?.showBubble();\r\n        this.notify({\r\n            target: 'bubble',\r\n            valueBoolean: true,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeOrientation(value: string) {\r\n        this.updateState({\r\n            target: 'direction',\r\n            valueString: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeType(value: string) {\r\n        this.updateState({\r\n            target: 'type',\r\n            valueString: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        delete this.head2;\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeStep(value: number) {\r\n        if (value > this.state.max - this.state.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n        this.state.step = value;\r\n    }\r\n\r\n    set changeMax(value: number) {\r\n        if (value < this.state.min) {\r\n            throw new Error('Максимум не может быть меньше минимума');\r\n        }\r\n        this.updateState({\r\n            target: 'max',\r\n            valueNumber: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeMin(value: number) {\r\n        if (value > this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше максимума');\r\n        }\r\n        this.updateState({\r\n            target: 'min',\r\n            valueNumber: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    updateState(data: NotifyData): void {\r\n        if (!data.onlyState) return;\r\n        if (typeof this.state[data.target] === 'string') {\r\n            this.state[data.target] = data.valueString;\r\n        } else if (typeof this.state[data.target] === 'number') {\r\n            this.state[data.target] = data.valueNumber;\r\n        } else {\r\n            this.state[data.target] = data.valueBoolean;\r\n        }\r\n    }\r\n\r\n    private reInit(): void {\r\n        this.line = new Line(this.elem, this.state.direction, this.state.type);\r\n        this.scale = new Scale(this.line.element,\r\n            this.state.direction, this.state.min, this.state.max);\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead(this.line.element,\r\n                this.state.direction, head2StartPos, this.state.valueFrom);\r\n            this.head2.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead(this.line.element,\r\n            this.state.direction, headStartPos, this.state.valueTo);\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double') {\r\n                if (this.head2 !== undefined) {\r\n                    this.head2.showBubble();\r\n                }\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.setup();\r\n    }\r\n\r\n    private setup(): void {\r\n        this.elem.addEventListener('headStart', this.handleHeadStart);\r\n        this.elem.addEventListener('scaleClick', this.handleScaleClick);\r\n    }\r\n\r\n    private calcHeadStartPosition(value: number): number {\r\n        return (value - this.state.min) / (this.state.max - this.state.min);\r\n    }\r\n\r\n    private static getEvent(event: MouseEvent | TouchEvent): Touch | MouseEvent {\r\n        if (event instanceof TouchEvent) {\r\n            return event.touches[0];\r\n        }\r\n        return event;\r\n    }\r\n\r\n    private handleHeadStart = (e: CustomEvent): Array<number> => {\r\n        const evt: MouseEvent | Touch = View.getEvent(e.detail.data);\r\n        // Здесь нужен каст через 'as', так как TS не знает, что target это html объект\r\n        const target = evt.target as Element;\r\n        const updatedHead: string = target.hasAttribute('data-valueFrom') ? 'valueFrom' : 'valueTo';\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(target.getBoundingClientRect().left);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(target.getBoundingClientRect().top);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        this.handleSwipe = (event: MouseEvent | TouchEvent): Array<number> => {\r\n            return this.swipeAction(event, dataArray, updatedHead);\r\n        };\r\n        document.addEventListener('touchmove', this.handleSwipe, {passive: false});\r\n        document.addEventListener('mousemove', this.handleSwipe);\r\n        document.addEventListener('touchend', this.handleSwipeEnd);\r\n        document.addEventListener('mouseup', this.handleSwipeEnd);\r\n        return dataArray;\r\n    };\r\n\r\n    private swipeAction = (event: MouseEvent | TouchEvent, dataArray: Array<number>,\r\n        updatedHead: string):\r\n        Array<number> => {\r\n        event.preventDefault();\r\n        const evtSwipe: MouseEvent | Touch = View.getEvent(event);\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.getWidth);\r\n            dataArray.push(this.line.getLeftCoordinate);\r\n            dataArray.push(evtSwipe.clientX);\r\n        } else {\r\n            dataArray.push(this.line.getHeight);\r\n            dataArray.push(this.line.getTopCoordinate);\r\n            dataArray.push(evtSwipe.clientY);\r\n        }\r\n        dataArray.push(this.head.getWidth / 2);\r\n        this.notify({\r\n            valueArray: dataArray.slice(),\r\n            target: updatedHead,\r\n            onlyState: false\r\n        });\r\n        dataArray.splice(2, dataArray.length - 2);\r\n        return dataArray;\r\n    };\r\n\r\n    private handleSwipeEnd = (): boolean => {\r\n        document.removeEventListener('touchmove', this.handleSwipe);\r\n        document.removeEventListener('mousemove', this.handleSwipe);\r\n        document.removeEventListener('touchend', this.handleSwipeEnd);\r\n        document.removeEventListener('mouseup', this.handleSwipeEnd);\r\n        return true;\r\n    };\r\n\r\n    private handleScaleClick = (event: CustomEvent): Array<number> => {\r\n        const dataArray: Array<number> = this.scaleClickData(event);\r\n\r\n        this.notify({\r\n            target: 'value',\r\n            valueArray: dataArray.slice(),\r\n            onlyState: false\r\n        });\r\n        return dataArray;\r\n    };\r\n\r\n    private scaleClickData(event: CustomEvent): Array<number> {\r\n        const evt: MouseEvent | Touch = View.getEvent(event.detail.data);\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.getWidth);\r\n            dataArray.push(this.line.getLeftCoordinate);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(this.line.getHeight);\r\n            dataArray.push(this.line.getTopCoordinate);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        return dataArray;\r\n    }\r\n}\r\n\r\nexport {View};\r\n","import {Model} from './Model';\r\nimport {View} from './View';\r\n\r\nclass Presenter {\r\n    model: Model;\r\n\r\n    view: View;\r\n\r\n    constructor(elem: HTMLElement, model: Model, view: View) {\r\n        this.model = model;\r\n        this.view = view;\r\n        this.view.subscribe(this.model.updateState.bind(this.model));\r\n        this.view.subscribe(this.model.calcPosition.bind(this.model));\r\n        this.model.subscribe(this.view.updateState.bind(this.view));\r\n        this.model.subscribe(this.view.changePosition.bind(this.view));\r\n    }\r\n}\r\n\r\nexport {Presenter};\r\n","import {Observer} from './Observer';\r\nimport {State} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass Model extends Observer {\r\n    private readonly state: State;\r\n\r\n    constructor(options: State) {\r\n        super();\r\n        this.state = Object.assign({}, options);\r\n    }\r\n\r\n    calcPosition(data: NotifyData): void {\r\n        if (data.onlyState) return;\r\n        let updatedValue: number;\r\n        let updatedProperty: string;\r\n        if (data.target === 'valueTo') {\r\n            updatedProperty = 'valueTo';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        } else if (data.target === 'value') {\r\n            updatedValue = this.calcUpdatedValueRelative(data);\r\n            if (this.state.type === 'single') {\r\n                updatedProperty = 'valueTo';\r\n            } else {\r\n                updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n            }\r\n            updatedValue = updatedProperty === 'valueFrom' ? this.validValueFrom(updatedValue) : this.validValueTo(updatedValue);\r\n        } else {\r\n            updatedProperty = 'valueFrom';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        }\r\n        updatedValue = Number(updatedValue.toFixed(2));\r\n        this.updateState({\r\n            target: updatedProperty,\r\n            valueNumber: updatedValue,\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            target: updatedProperty,\r\n            valueNumber: updatedValue,\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(updatedValue, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            target: updatedProperty,\r\n            valueNumber: position,\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    set changeOrientation(value: string) {\r\n        this.updateState({\r\n            target: 'direction',\r\n            valueString: value,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeType(value: string) {\r\n        this.updateState({\r\n            target: 'type',\r\n            valueString: value,\r\n            onlyState: true\r\n        });\r\n        if (this.state.min > this.state.valueFrom) {\r\n            this.changeFrom = this.state.min;\r\n        }\r\n        if (this.state.valueFrom > this.state.valueTo) {\r\n            this.changeFrom = this.state.valueTo;\r\n        }\r\n    }\r\n\r\n    set changeStep(value: number) {\r\n        const stepIsValid = (val: number, max: number, min: number): boolean => {\r\n            return val < max - min && val > 0;\r\n        };\r\n        if (!stepIsValid(value, this.state.max, this.state.min)) throw new Error('Шаг не может быть больше разницы максимума и минимума или меньше нуля');\r\n        this.state.step = value;\r\n    }\r\n\r\n    get getStep(): number {\r\n        return this.state.step;\r\n    }\r\n\r\n    set changeMax(value: number) {\r\n        if (value < this.state.min) {\r\n            throw new Error('Максимум не может быть меньше минимума');\r\n        }\r\n        this.updateState({\r\n            target: 'max',\r\n            valueNumber: value,\r\n            onlyState: true\r\n        });\r\n        if (value < this.state.valueTo) {\r\n            this.changeTo = value;\r\n        }\r\n    }\r\n\r\n    get getMax(): number {\r\n        return this.state.max;\r\n    }\r\n\r\n    set changeMin(value: number) {\r\n        if (value > this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше максимума');\r\n        }\r\n        this.updateState({\r\n            target: 'min',\r\n            valueNumber: value,\r\n            onlyState: true\r\n        });\r\n        if (this.state.type === 'double' && value > this.state.valueFrom) {\r\n            this.changeFrom = value;\r\n        }\r\n    }\r\n\r\n    get getMin(): number {\r\n        return this.state.min;\r\n    }\r\n\r\n    set changeTo(value: number) {\r\n        this.updateState({\r\n            target: 'valueTo',\r\n            valueNumber: this.validValueTo(value),\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            valueNumber: this.state.valueTo,\r\n            target: 'valueTo',\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(this.state.valueTo, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            valueNumber: position,\r\n            target: 'valueTo',\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    get getValueTo(): number {\r\n        return this.state.valueTo;\r\n    }\r\n\r\n    set changeFrom(value: number) {\r\n        if (this.state.type === 'single') return;\r\n        this.updateState({\r\n            target: 'valueFrom',\r\n            valueNumber: Number(this.validValueFrom(value).toFixed(2)),\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            valueNumber: this.state.valueFrom,\r\n            target: 'valueFrom',\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(this.state.valueFrom, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            valueNumber: position,\r\n            target: 'valueFrom',\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    get getValueFrom(): number {\r\n        return this.state.valueFrom;\r\n    }\r\n\r\n    updateState(data: NotifyData): void {\r\n        if (!data.onlyState) return;\r\n        if (typeof this.state[data.target] === 'string') {\r\n            this.state[data.target] = data.valueString;\r\n        } else if (typeof this.state[data.target] === 'number') {\r\n            this.state[data.target] = data.valueNumber;\r\n        } else {\r\n            this.state[data.target] = data.valueBoolean;\r\n        }\r\n    }\r\n\r\n    private static moreThan0LessThan1(value: number): number {\r\n        let newValue = value;\r\n        newValue = newValue > 1 ? 1 : newValue;\r\n        newValue = newValue < 0 ? 0 : newValue;\r\n        return newValue;\r\n    }\r\n\r\n    private static getValueRelative(value: number, min: number, max: number): number {\r\n        return (value - min) / (max - min);\r\n    }\r\n\r\n    private calcValue(value: number, updatedProperty = 'valueTo'): number {\r\n        let newValue: number = value;\r\n        newValue *= (this.state.max - this.state.min);\r\n        return this.state.min + this.calcValueByStep(newValue, updatedProperty);\r\n    }\r\n\r\n    private calcValueByStep(value: number, updatedProperty: string): number {\r\n        let newValue: number = value;\r\n        if (this.state.step === undefined) throw new Error('Значение step не определено');\r\n        const stepsInValue: number = newValue / this.state.step;\r\n        if (stepsInValue % 1 >= 0.5) {\r\n            newValue = this.state.step * Math.ceil(stepsInValue);\r\n        } else {\r\n            newValue = this.state.step * Math.floor(stepsInValue);\r\n        }\r\n        if (updatedProperty === 'valueTo') {\r\n            const maxSteps: number = (this.state.max - this.state.min) / this.state.step;\r\n            if (stepsInValue === maxSteps) {\r\n                newValue = this.state.min < 0\r\n                    ? this.state.max + Math.abs(this.state.min)\r\n                    : this.state.max;\r\n            }\r\n        }\r\n        const popRes: string | undefined = this.state.step.toString()\r\n            .split('.')\r\n            .pop();\r\n        let accuracy = 0;\r\n        if (popRes !== undefined) {\r\n            accuracy = this.state.step.toString()\r\n                .includes('.') ? (popRes.length) : 0;\r\n        }\r\n        return Number(newValue.toFixed(accuracy));\r\n    }\r\n\r\n    private validValueTo(valueTo: number): number {\r\n        let value: number = valueTo;\r\n        if (this.state.type === 'single') {\r\n            if (value > this.state.max) {\r\n                value = this.state.max;\r\n            } else if (value < this.state.min) {\r\n                value = this.state.min;\r\n            }\r\n        } else if (this.state.type === 'double') {\r\n            if (value > this.state.max) {\r\n                value = this.state.max;\r\n            } else if (value <= this.state.valueFrom) {\r\n                value = this.state.valueFrom + this.state.step;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private validValueFrom(valueFrom: number): number {\r\n        let value: number = valueFrom;\r\n        if (this.state.type === 'single') {\r\n            value = 0;\r\n        } else if (this.state.type === 'double') {\r\n            if (value < this.state.min) {\r\n                value = this.state.min;\r\n            } else if (value >= this.state.valueTo) {\r\n                value = this.state.valueTo - this.state.step;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private calcUpdatedValue(data: NotifyData, updatedProperty: string): number {\r\n        let halfHeadWidth = 0;\r\n        if (data.valueArray !== undefined) {\r\n            halfHeadWidth = data.valueArray[5];\r\n        } else {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const lineParameter = data.valueArray[2];\r\n        const lineCoordinate = data.valueArray[3];\r\n        const HeadCoordinate = data.valueArray[0];\r\n        const shift = data.valueArray[1] - HeadCoordinate;\r\n        let newPosition = (data.valueArray[4] - shift - lineCoordinate + halfHeadWidth)\r\n            / lineParameter;\r\n        newPosition = Model.moreThan0LessThan1(newPosition);\r\n        const updatedValue = this.calcValue(newPosition, updatedProperty);\r\n        return updatedProperty === 'valueTo' ? this.validValueTo(updatedValue) : this.validValueFrom(updatedValue);\r\n    }\r\n\r\n    private calcUpdatedValueRelative(data: NotifyData): number {\r\n        if (data.valueArray === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const lineParameter = data.valueArray[0];\r\n        const lineCoordinate = data.valueArray[1];\r\n        let newPositionRelative = (data.valueArray[2] - lineCoordinate) / lineParameter;\r\n        newPositionRelative = Model.moreThan0LessThan1(newPositionRelative);\r\n        return this.calcValue(newPositionRelative);\r\n    }\r\n\r\n    private isValueTo = (updatedValue: number): boolean => (updatedValue - this.state.valueFrom)\r\n        / (this.state.valueTo - this.state.valueFrom) >= 0.5;\r\n}\r\n\r\nexport {Model};\r\n","import {View} from './View';\r\nimport {Presenter} from './Presenter';\r\nimport {Model} from './Model';\r\nimport {State} from './types/types';\r\n\r\nclass Slider {\r\n    view: View;\r\n\r\n    elem: HTMLElement;\r\n\r\n    presenter: Presenter;\r\n\r\n    model: Model;\r\n\r\n    constructor(elem: HTMLElement, settings: State) {\r\n        this.elem = elem;\r\n        this.model = new Model(settings);\r\n        this.view = new View(this.elem, settings);\r\n        this.view.init();\r\n        this.presenter = new Presenter(this.elem, this.model, this.view);\r\n    }\r\n\r\n    hideBubble(): boolean {\r\n        this.view.hideBubble();\r\n        return true;\r\n    }\r\n\r\n    showBubble(): boolean {\r\n        this.view.showBubble();\r\n        return true;\r\n    }\r\n\r\n    changeOrientation(value: string): boolean {\r\n        this.view.changeOrientation = value;\r\n        this.model.changeOrientation = value;\r\n        return true;\r\n    }\r\n\r\n    changeType(value: string): boolean {\r\n        this.view.changeType = value;\r\n        this.model.changeType = value;\r\n        return true;\r\n    }\r\n\r\n    changeStep(value: number): boolean {\r\n        this.model.changeStep = value;\r\n        this.view.changeStep = value;\r\n        return true;\r\n    }\r\n\r\n    changeTo(value: number): boolean {\r\n        this.model.changeTo = value;\r\n        return true;\r\n    }\r\n\r\n    changeFrom(value: number): boolean {\r\n        this.model.changeFrom = value;\r\n        return true;\r\n    }\r\n\r\n    changeMax(value: number): boolean {\r\n        this.model.changeMax = value;\r\n        this.view.changeMax = value;\r\n        return true;\r\n    }\r\n\r\n    changeMin(value: number): boolean {\r\n        this.model.changeMin = value;\r\n        this.view.changeMin = value;\r\n        return true;\r\n    }\r\n\r\n    getMax(): number {\r\n        return this.model.getMax;\r\n    }\r\n\r\n    getMin(): number {\r\n        return this.model.getMin;\r\n    }\r\n\r\n    getValueTo(): number {\r\n        return this.model.getValueTo;\r\n    }\r\n\r\n    getValueFrom(): number {\r\n        return this.model.getValueFrom;\r\n    }\r\n\r\n    getStep(): number {\r\n        return this.model.getStep;\r\n    }\r\n}\r\n\r\nexport {Slider};\r\n","import {Slider} from './Slider';\r\n\r\n(function ($) {\r\n    const sliders = [];\r\n    const methods = {\r\n        init: function (options) {\r\n            const settings = $.extend({\r\n                bubble: true,\r\n                max: 100,\r\n                min: 0,\r\n                step: 1,\r\n                type: 'single',\r\n                valueTo: 100,\r\n                valueFrom: 5,\r\n                direction: 'horizontal',\r\n                onChangeTo: function () {\r\n                },\r\n                onChangeFrom: function () {\r\n                }\r\n            }, options);\r\n\r\n            return this.each(function () {\r\n                const ths = $(this);\r\n                if (settings.step > settings.max - settings.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n                if (settings.step <= 0) throw new Error('Шаг должен быть больше нуля');\r\n                if (settings.valueTo > settings.max) throw new Error('Текущее значение не может быть больше максимума');\r\n                if (settings.valueFrom < settings.min) throw new Error('Текущее значение не может быть меньше минимума');\r\n                sliders.push(new Slider(ths[0], settings));\r\n            });\r\n        },\r\n        hideBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.hideBubble();\r\n        },\r\n        showBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.showBubble();\r\n        },\r\n        changeOrientation: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeOrientation(value);\r\n        },\r\n        changeType: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeType(value);\r\n        },\r\n        changeStep: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('step должно быть числом');\r\n            slider.changeStep(value);\r\n        },\r\n        changeTo: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueTo должно быть числом');\r\n            slider.changeTo(value);\r\n        },\r\n        changeFrom: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeFrom(value);\r\n        },\r\n        changeMax: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMax(value);\r\n        },\r\n        getMax: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMax();\r\n        },\r\n        getMin: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMin();\r\n        },\r\n        getValueTo: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueTo();\r\n        },\r\n        getValueFrom: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueFrom();\r\n        },\r\n        getStep: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getStep();\r\n        },\r\n        changeMin: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMin(value);\r\n        }\r\n\r\n    };\r\n    // eslint-disable-next-line no-param-reassign\r\n    $.fn.Slider = function (method) {\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n        if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n        $.error('Метод с именем ' + method + ' не существует для jQuery.slider');\r\n        return null;\r\n    };\r\n}(jQuery));\r\n","import './slider-template.scss';\r\nimport '../../slider/jquery.slider.js';\r\nimport {State} from '../../slider/types/types';\r\n\r\nclass SliderTemplate {\r\n    private readonly element: JQuery;\r\n\r\n    private $bubbleButton: JQuery | undefined;\r\n\r\n    private $verticalButton: JQuery | undefined;\r\n\r\n    private $rangeButton: JQuery | undefined;\r\n\r\n    private $stepInput: JQuery | undefined;\r\n\r\n    private $toInput: JQuery | undefined;\r\n\r\n    private $fromInput: JQuery | undefined;\r\n\r\n    private $maxInput: JQuery | undefined;\r\n\r\n    private $minInput: JQuery | undefined;\r\n\r\n    private slider: JQuery | undefined;\r\n\r\n    constructor(element: HTMLElement, settings: State) {\r\n        this.element = $(element);\r\n        this.init(settings);\r\n    }\r\n\r\n    init(settings: State): void {\r\n        this.$bubbleButton = $(this.element.find('input[data-type=\"bubble\"]'));\r\n        this.$verticalButton = $(this.element.find('input[data-type=\"vertical\"]'));\r\n        this.$rangeButton = $(this.element.find('input[data-type=\"range\"]'));\r\n        this.$stepInput = $(this.element.find('input[data-type=\"step\"]'));\r\n        this.$toInput = $(this.element.find('input[data-type=\"to\"]'));\r\n        this.$fromInput = $(this.element.find('input[data-type=\"from\"]'));\r\n        this.$maxInput = $(this.element.find('input[data-type=\"max\"]'));\r\n        this.$minInput = $(this.element.find('input[data-type=\"min\"]'));\r\n        const options = Object.assign(settings, {\r\n            onChangeTo: (value: number) => {\r\n                this.$toInput?.val(value);\r\n            },\r\n            onChangeFrom: (value: number) => {\r\n                this.$fromInput?.val(value);\r\n            }\r\n        });\r\n        this.slider = $(this.element.find('.slider'))\r\n            .Slider(options);\r\n        this.setup();\r\n    }\r\n\r\n    setup(): void {\r\n        this.$bubbleButton?.on('click', this.handleBubbleButtonClick);\r\n        this.$verticalButton?.on('click', this.handleVerticalButtonClick);\r\n        this.$rangeButton?.on('click', this.handleRangeButtonClick);\r\n        if (!this.$rangeButton?.is(':checked')) {\r\n            this.$fromInput?.parent()\r\n                .addClass('slider-template__label_hide');\r\n        }\r\n        this.$stepInput?.on('change', this.handleStepInputChange);\r\n        this.$stepInput?.val(String(this.slider?.Slider('getStep')));\r\n        this.$toInput?.on('change', this.handleToInputChange);\r\n        this.$toInput?.val(String(this.slider?.Slider('getValueTo')));\r\n        this.$fromInput?.on('change', this.handleFromInputChange);\r\n        this.$fromInput?.val(String(this.slider?.Slider('getValueFrom')));\r\n        this.$maxInput?.on('change', this.handleMaxInputChange);\r\n        this.$maxInput?.val(String(this.slider?.Slider('getMax')));\r\n        this.$minInput?.on('change', this.handleMinInputChange);\r\n        this.$minInput?.val(String(this.slider?.Slider('getMin')));\r\n    }\r\n\r\n    handleBubbleButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider?.Slider('showBubble') : this.slider?.Slider('hideBubble');\r\n    };\r\n\r\n    handleVerticalButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider?.Slider('changeOrientation', 'vertical') : this.slider?.Slider('changeOrientation', 'horizontal');\r\n    };\r\n\r\n    handleRangeButtonClick = (e: JQuery.ClickEvent): void => {\r\n        if (e.target.checked) {\r\n            this.slider?.Slider('changeType', 'double');\r\n            this.$fromInput?.parent()\r\n                .removeClass('slider-template__label_hide');\r\n        } else {\r\n            this.slider?.Slider('changeType', 'single');\r\n            this.$fromInput?.parent()\r\n                .addClass('slider-template__label_hide');\r\n        }\r\n    };\r\n\r\n    handleStepInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeStep', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getStep');\r\n        }\r\n    };\r\n\r\n    handleToInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider?.Slider('changeTo', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleFromInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider?.Slider('changeFrom', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleMaxInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeMax', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getMax');\r\n        }\r\n    };\r\n\r\n    handleMinInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeMin', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getMin');\r\n        }\r\n    };\r\n}\r\n\r\nexport default SliderTemplate;\r\n","import './index.scss';\r\nimport '../blocks/slider-block/slider-block.scss';\r\nimport '../slider/jquery.slider';\r\nimport '../blocks/slider-template/slider-template';\r\nimport SliderTemplate from '../blocks/slider-template/slider-template';\r\n\r\n$(function () {\r\n    const settings = [\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 100,\r\n            min: 0,\r\n            step: 1,\r\n            type: 'double',\r\n            valueTo: 100,\r\n            valueFrom: 0,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: false,\r\n            direction: 'vertical',\r\n            max: 90,\r\n            min: 5,\r\n            step: 2,\r\n            type: 'single',\r\n            valueTo: 50,\r\n            valueFrom: 15,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 1000,\r\n            min: -100,\r\n            step: 30,\r\n            type: 'single',\r\n            valueTo: 780,\r\n            valueFrom: -5,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        }\r\n    ];\r\n    $('.slider-template')\r\n        .each((index, element) => {\r\n            // eslint-disable-next-line no-new\r\n            new SliderTemplate(element, settings[index]);\r\n        });\r\n});\r\n"],"names":["Observer","this","observers","subscribe","observer","push","unsubscribe","filter","x","notify","data","forEach","$7f7f88587dcc82e7$export$2e2bcd8739ae039","parent","init","element","document","createElement","classList","add","setAttribute","append","update","value","textContent","String","show","hide","remove","$443d33087eac4543$export$2e2bcd8739ae039","direction","bubbleValue","handleHeadStart","e","headEvent","CustomEvent","detail","dispatchEvent","bubble","HeadBubble","updatePosition","updateBubble","addEventListener","removeHead","newPos","style","left","top","showBubble","hideBubble","getWidth","getBoundingClientRect","width","getHeight","height","$0107047da07a407d$export$2e2bcd8739ae039","min","max","handleScaleClick","step","i","dash","scaleNumber","numbers","querySelectorAll","number","length","innerHTML","dashValue","Number","isInteger","toFixed","removeScale","getLeftCoordinate","getTopCoordinate","$790a1a2e6b71ddca$export$2e2bcd8739ae039","type","progressBar","setType","progressValue","to","from","undefined","parseInt","removeLine","View","elem","options","super","evt","getEvent","target","updatedHead","hasAttribute","dataArray","state","clientX","clientY","handleSwipe","event","swipeAction","passive","handleSwipeEnd","preventDefault","evtSwipe","line","head","valueArray","slice","onlyState","splice","removeEventListener","scaleClickData","Object","assign","Line","scale","Scale","headStartPos","calcHeadStartPosition","valueTo","ViewHead","head2StartPos","valueFrom","head2","setup","changePosition","position","valueNumber","Error","onChangeTo","onChangeFrom","updateState","valueBoolean","changeOrientation","valueString","reInit","changeType","changeStep","changeMax","changeMin","TouchEvent","touches","Presenter","model","view","bind","calcPosition","Model","isValueTo","updatedValue","updatedProperty","calcUpdatedValue","calcUpdatedValueRelative","validValueFrom","validValueTo","getValueRelative","moreThan0LessThan1","changeFrom","val","getStep","changeTo","getMax","getMin","getValueTo","getValueFrom","newValue","calcValue","calcValueByStep","stepsInValue","Math","ceil","floor","abs","popRes","toString","split","pop","accuracy","includes","halfHeadWidth","lineParameter","lineCoordinate","HeadCoordinate","shift","newPosition","newPositionRelative","Slider","settings","presenter","$","sliders","methods","extend","each","ths","slider","isNaN","fn","method","apply","Array","prototype","call","arguments","error","jQuery","$ac628bb2660317a7$export$2e2bcd8739ae039","handleBubbleButtonClick","checked","handleVerticalButtonClick","handleRangeButtonClick","$fromInput","removeClass","addClass","handleStepInputChange","parseFloat","handleToInputChange","handleFromInputChange","handleMaxInputChange","handleMinInputChange","$bubbleButton","find","$verticalButton","$rangeButton","$stepInput","$toInput","$maxInput","$minInput","on","is","index","SliderTemplate"],"version":3,"file":"index.18c2dec3.js.map"}