{"mappings":"MAEMA,gBAIEC,KAAKC,UAAY,GAGrBC,UAAUC,GACNH,KAAKC,UAAUG,KAAKD,GAGxBE,YAAYF,GACRH,KAAKC,UAAYD,KAAKC,UAAUK,QAAQC,GAAMA,IAAMJ,IAGxDK,OAAOC,GACHT,KAAKC,UAAUS,SAASH,GAAMA,EAAEE,UCQxCE,oBArBgBC,GACRZ,KAAKa,QAAUC,SAASC,cAAc,QACtCf,KAAKa,QAAQG,UAAUC,IAAI,uBAC3BjB,KAAKa,QAAQK,aAAa,YAAa,UACvClB,KAAKY,OAASA,EACdZ,KAAKY,OAAOO,OAAOnB,KAAKa,SAG5BO,OAAOC,GACHrB,KAAKa,QAAQS,YAAcC,OAAOF,GAGtCG,OACIxB,KAAKa,QAAQG,UAAUC,IAAI,8BAG/BQ,OACIzB,KAAKa,QAAQG,UAAUU,OAAO,oCCwCtCC,oBAnDgBf,EAAqBgB,EAC7BP,EAAeQ,GACf7B,KAAKY,OAASA,EACdZ,KAAK4B,UAAYA,EACjB5B,KAAKa,QAAUC,SAASC,cAAc,OACtCf,KAAKa,QAAQG,UAAUC,IAAI,gBACR,eAAnBjB,KAAK4B,UACC5B,KAAKa,QAAQG,UAAUC,IAAI,gBAC3BjB,KAAKa,QAAQG,UAAUC,IAAI,eAAgB,yBACjDjB,KAAK8B,OAAS,IAAIC,EAAW/B,KAAKa,SAClCb,KAAKY,OAAOO,OAAOnB,KAAKa,SACxBb,KAAKgC,eAAeX,GACpBrB,KAAKiC,aAAaJ,GAGtBK,aAEI,OADAlC,KAAKa,QAAQa,UACN,EAGXM,eAAeG,GACY,eAAnBnC,KAAK4B,UACL5B,KAAKa,QAAQuB,MAAMC,KAAmB,IAATF,EAA7B,IAEAnC,KAAKa,QAAQuB,MAAME,IAAkB,IAATH,EAA5B,IAIRF,aAAaZ,GACLrB,KAAK8B,QACL9B,KAAK8B,OAAOV,OAAOC,GAI3BkB,aACIvC,KAAK8B,OAAON,OAGhBgB,aACIxC,KAAK8B,OAAOL,OAGZgB,eACA,OAAOzC,KAAKa,QAAQ6B,wBAAwBC,MAG5CC,gBACA,OAAO5C,KAAKa,QAAQ6B,wBAAwBG,aCQpDC,oBA3DgBlC,EAAqBgB,EAAmBmB,EAAaC,GAC7DhD,KAAKY,OAASA,EACdZ,KAAK4B,UAAYA,EACjB5B,KAAKa,QAAUC,SAASC,cAAc,OACnB,eAAnBf,KAAK4B,UACC5B,KAAKa,QAAQG,UAAUC,IAAI,iBAC3BjB,KAAKa,QAAQG,UAAUC,IAAI,gBAAiB,0BAClDjB,KAAKY,OAAOO,OAAOnB,KAAKa,SACxBb,KAAKiD,KAAKF,EAAKC,GAGnBC,KAAKF,EAAaC,GACd,MAAME,GAAQF,EAAMD,GAAO,EAC3B,IAAK,IAAII,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC3B,GAAIA,EAAI,IAAO,EAAG,CACS,eAAnBnD,KAAK4B,UACL5B,KAAKa,QAAQuC,mBAAmB,YAAhC,0CAAuFD,6DAA6DA,eAEpJnD,KAAKa,QAAQuC,mBAAmB,YAAhC,+DAA4GD,0FAA0FA,eAE1M,MAAME,EAAUrD,KAAKa,QAAQyC,iBAAiB,yBACxCC,EAASF,EAAQA,EAAQG,OAAS,GACxC,GAAU,IAANL,EACAI,EAAOE,UAAYlC,OAAOwB,OACvB,CACH,MAAMW,EAAYX,EAAOI,EAAI,GAAMD,EACnCK,EAAOE,UAAYE,OAAOC,UAAUF,GAC9BnC,OAAOmC,GACPA,EAAUG,QAAQ,QAEF,eAAnB7D,KAAK4B,UACZ5B,KAAKa,QAAQuC,mBAAmB,YAAhC,6DAA0GD,eAE1GnD,KAAKa,QAAQuC,mBAAmB,YAAhC,qEAAkHD,eAK9HW,cACI9D,KAAKa,QAAQa,SAGbe,eACA,OAAOzC,KAAKa,QAAQ6B,wBAAwBC,MAG5CoB,wBACA,OAAO/D,KAAKa,QAAQ6B,wBAAwBL,KAG5CO,gBACA,OAAO5C,KAAKa,QAAQ6B,wBAAwBG,OAG5CmB,uBACA,OAAOhE,KAAKa,QAAQ6B,wBAAwBJ,UCOpD2B,oBA1DgBrD,EAAqBgB,EAAmBsC,GAChDlE,KAAKY,OAASA,EACdZ,KAAK4B,UAAYA,EACjB5B,KAAKkE,KAAOA,EACZlE,KAAKa,QAAUC,SAASC,cAAc,OACtCf,KAAKmE,YAAcrD,SAASC,cAAc,QACnB,eAAnBf,KAAK4B,WACL5B,KAAKa,QAAQG,UAAUC,IAAI,gBAC3BjB,KAAKmE,YAAYnD,UAAUC,IAAI,2BAE/BjB,KAAKa,QAAQG,UAAUC,IAAI,eAAgB,yBAC3CjB,KAAKmE,YAAYnD,UAAUC,IAAI,wBAAyB,mCAE5DjB,KAAKa,QAAQM,OAAOnB,KAAKmE,aACzBnE,KAAKY,OAAOO,OAAOnB,KAAKa,SAGxBuD,YAAQF,GACRlE,KAAKkE,KAAOA,EAGhBG,cAAcC,EAAiBC,GACJ,eAAnBvE,KAAK4B,UACa,WAAd5B,KAAKkE,KACLlE,KAAKmE,YAAY/B,MAAMO,MAAQ2B,EAAGlC,MAAMC,UACxBmC,IAATD,IACPvE,KAAKmE,YAAY/B,MAAMO,MAAW8B,SAASH,EAAGlC,MAAMC,KAAM,IAAMoC,SAASF,EAAKnC,MAAMC,KAAM,IAA1F,IACArC,KAAKmE,YAAY/B,MAAMC,KAAOkC,EAAKnC,MAAMC,MAExB,WAAdrC,KAAKkE,KACZlE,KAAKmE,YAAY/B,MAAMS,OAASyB,EAAGlC,MAAME,SACzBkC,IAATD,IACPvE,KAAKmE,YAAY/B,MAAMS,OAAY4B,SAASH,EAAGlC,MAAME,IAAK,IAAMmC,SAASF,EAAKnC,MAAME,IAAK,IAAzF,IACAtC,KAAKmE,YAAY/B,MAAME,IAAMiC,EAAKnC,MAAME,KAIhDoC,aACI1E,KAAKa,QAAQa,SAGbe,eACA,OAAOzC,KAAKa,QAAQ6B,wBAAwBC,MAG5CoB,wBACA,OAAO/D,KAAKa,QAAQ6B,wBAAwBL,KAG5CO,gBACA,OAAO5C,KAAKa,QAAQ6B,wBAAwBG,OAG5CmB,uBACA,OAAOhE,KAAKa,QAAQ6B,wBAAwBJ,YC1D9CqC,UAAa5E,cAeH6E,EAAmBC,GAC3BC,QAhBR9E,KAmOY+E,gBAAmBC,IACvB,MAAMC,EApORN,EAoOuCO,SAASF,GAExCG,EAASF,EAAIE,OACbC,EAAsBD,EAAOE,aAAa,kBAAoB,YAAc,UAC5EC,EAA2B,GAejC,MAd6B,eAAzBtF,KAAKuF,MAAM3D,WACX0D,EAAUlF,KAAK+E,EAAOzC,wBAAwBL,MAC9CiD,EAAUlF,KAAK6E,EAAIO,WAEnBF,EAAUlF,KAAK+E,EAAOzC,wBAAwBJ,KAC9CgD,EAAUlF,KAAK6E,EAAIQ,UAEvBzF,KAAK0F,YAAeC,GACT3F,KAAK4F,YAAYD,EAAOL,EAAWF,GAE9CtE,SAAS+E,iBAAiB,YAAa7F,KAAK0F,YAAa,CAACI,SAAS,IACnEhF,SAAS+E,iBAAiB,YAAa7F,KAAK0F,aAC5C5E,SAAS+E,iBAAiB,WAAY7F,KAAK+F,gBAC3CjF,SAAS+E,iBAAiB,UAAW7F,KAAK+F,gBACnCT,GAvPftF,KA0PY4F,YAAW,CAAID,EAAgCL,EACnDF,KAEAO,EAAMK,iBACN,MAAMC,EA9PRtB,EA8P4CO,SAASS,GAiBnD,MAhB6B,eAAzB3F,KAAKuF,MAAM3D,WACX0D,EAAUlF,KAAKJ,KAAKkG,KAAKzD,UACzB6C,EAAUlF,KAAKJ,KAAKkG,KAAKnC,mBACzBuB,EAAUlF,KAAK6F,EAAST,WAExBF,EAAUlF,KAAKJ,KAAKkG,KAAKtD,WACzB0C,EAAUlF,KAAKJ,KAAKkG,KAAKlC,kBACzBsB,EAAUlF,KAAK6F,EAASR,UAE5BH,EAAUlF,KAAKJ,KAAKmG,KAAK1D,SAAW,GACpCzC,KAAKQ,OAAO,CACR4F,SAAUd,EAAUe,QACpBlB,OAAQC,EACRkB,WAAW,IAEfhB,EAAUiB,OAAO,EAAGjB,EAAU9B,OAAS,GAChC8B,GA/QftF,KAkRY+F,eAAc,KAClBjF,SAAS0F,oBAAoB,YAAaxG,KAAK0F,aAC/C5E,SAAS0F,oBAAoB,YAAaxG,KAAK0F,aAC/C5E,SAAS0F,oBAAoB,WAAYxG,KAAK+F,gBAC9CjF,SAAS0F,oBAAoB,UAAWxG,KAAK+F,iBACtC,GAvRf/F,KA0RYyG,iBAAoBd,IACxB,MAAML,EAA2BtF,KAAK0G,eAAef,GAOrD,OALA3F,KAAKQ,OAAO,CACR2E,OAAQ,QACRiB,SAAUd,EAAUe,QACpBC,WAAW,IAERhB,GAjRPtF,KAAK4E,KAAOA,EACZ5E,KAAK0F,YAAL,IAAyB,GACzB1F,KAAKuF,MAAQoB,OAAOC,OAAO,GAAI/B,GAC/B7E,KAAKkG,KAAO,IAAIW,EAAK7G,KAAK4E,KAAM5E,KAAKuF,MAAM3D,UAAW5B,KAAKuF,MAAMrB,MACjElE,KAAK8G,MAAQ,IAAIC,EAAM/G,KAAKkG,KAAKrF,QAC7Bb,KAAKuF,MAAM3D,UAAW5B,KAAKuF,MAAMxC,IAAK/C,KAAKuF,MAAMvC,KACrD,MAAMgE,EAAehH,KAAKiH,sBAAsBjH,KAAKuF,MAAM2B,SAC3DlH,KAAKmG,KAAO,IAAIgB,EAASnH,KAAKkG,KAAKrF,QAC/Bb,KAAKuF,MAAM3D,UAAWoF,EAAchH,KAAKuF,MAAM2B,SAGvDjE,OACI,GAAwB,WAApBjD,KAAKuF,MAAMrB,KAAmB,CAC9B,MAAMkD,EAAwBpH,KAAKiH,sBAAsBjH,KAAKuF,MAAM8B,WACpErH,KAAKsH,MAAQ,IAAIH,EAASnH,KAAKkG,KAAKrF,QAChCb,KAAKuF,MAAM3D,UAAWwF,EAAepH,KAAKuF,MAAM8B,WACpDrH,KAAKsH,MAAMzG,QAAQK,aAAa,iBAAkB,QAElDlB,KAAKuF,MAAMzD,SACX9B,KAAKmG,KAAK5D,aACc,WAApBvC,KAAKuF,MAAMrB,WACQM,IAAfxE,KAAKsH,OACLtH,KAAKsH,MAAM/E,cAIvBvC,KAAKkG,KAAK7B,cAAcrE,KAAKmG,KAAKtF,QAASb,KAAKsH,OAAOzG,SACvDb,KAAKuH,QAGTC,eAAe/G,GACX,GAAIA,EAAK6F,UAAW,OACpB,IAAImB,EAAW,EACf,QAAoBjD,IAAhB/D,EAAKiH,OAGL,MAAM,IAAIC,MAAM,gCAEpB,GAJIF,EAAWhH,EAAKiH,OAIA,YAAhBjH,EAAK0E,OACLnF,KAAKmG,KAAKnE,eAAeyF,GACzBzH,KAAKmG,KAAKlE,aAAajC,KAAKuF,MAAM2B,SAClClH,KAAKuF,MAAMqC,WAAW5H,KAAKuF,MAAM2B,SACjClH,KAAKkG,KAAK7B,cAAcrE,KAAKmG,KAAKtF,QAASb,KAAKsH,OAAOzG,cACpD,GAAoB,cAAhBJ,EAAK0E,OAAwB,CACpC,QAAmBX,IAAfxE,KAAKsH,MAML,MAAM,IAAIK,MAAM,uBALhB3H,KAAKsH,MAAMtF,eAAeyF,GAC1BzH,KAAKsH,MAAMrF,aAAajC,KAAKuF,MAAM8B,WACnCrH,KAAKuF,MAAMsC,aAAa7H,KAAKuF,MAAM8B,WACnCrH,KAAKkG,KAAK7B,cAAcrE,KAAKmG,KAAKtF,QAASb,KAAKsH,MAAMzG,UAOlE2B,aACIxC,KAAK8H,YAAY,CACb3C,OAAQ,SACR4C,QAAQ,EACRzB,WAAW,IAEftG,KAAKmG,KAAK3D,aACVxC,KAAKsH,OAAO9E,aACZxC,KAAKQ,OAAO,CACR2E,OAAQ,SACR4C,QAAQ,EACRzB,WAAW,IAInB/D,aACIvC,KAAK8H,YAAY,CACb3C,OAAQ,SACR4C,QAAQ,EACRzB,WAAW,IAEftG,KAAKmG,KAAK5D,aACVvC,KAAKsH,OAAO/E,aACZvC,KAAKQ,OAAO,CACR2E,OAAQ,SACR4C,QAAQ,EACRzB,WAAW,IAIf0B,sBAAkB3G,GAClBrB,KAAK8H,YAAY,CACb3C,OAAQ,YACR8C,OAAQ5G,EACRiF,WAAW,IAEftG,KAAKmG,KAAKjE,aACVlC,KAAKsH,OAAOpF,aACZlC,KAAK8G,MAAMhD,cACX9D,KAAKkG,KAAKxB,aACV1E,KAAKkI,SAGLC,eAAW9G,GACXrB,KAAK8H,YAAY,CACb3C,OAAQ,OACR8C,OAAQ5G,EACRiF,WAAW,IAEftG,KAAKmG,KAAKjE,aACVlC,KAAKsH,OAAOpF,oBACLlC,KAAKsH,MACZtH,KAAK8G,MAAMhD,cACX9D,KAAKkG,KAAKxB,aACV1E,KAAKkI,SAGLE,eAAW/G,GACX,GAAIA,EAAQrB,KAAKuF,MAAMvC,IAAMhD,KAAKuF,MAAMxC,IAAK,MAAM,IAAI4E,MAAM,yDAC7D3H,KAAKuF,MAAMrC,KAAO7B,EAGlBgH,cAAUhH,GACV,GAAIA,EAAQrB,KAAKuF,MAAMxC,KAAO1B,GAASrB,KAAKuF,MAAM8B,UAC9C,MAAM,IAAIM,MAAM,0CAEpB3H,KAAK8H,YAAY,CACb3C,OAAQ,MACRuC,OAAQrG,EACRiF,WAAW,IAEftG,KAAKmG,KAAKjE,aACVlC,KAAKsH,OAAOpF,aACZlC,KAAK8G,MAAMhD,cACX9D,KAAKkG,KAAKxB,aACV1E,KAAKkI,SAGLI,cAAUjH,GACV,GAAIA,EAAQrB,KAAKuF,MAAMvC,KAAO3B,GAASrB,KAAKuF,MAAM2B,QAC9C,MAAM,IAAIS,MAAM,0CAEpB3H,KAAK8H,YAAY,CACb3C,OAAQ,MACRuC,OAAQrG,EACRiF,WAAW,IAEftG,KAAKmG,KAAKjE,aACVlC,KAAKsH,OAAOpF,aACZlC,KAAK8G,MAAMhD,cACX9D,KAAKkG,KAAKxB,aACV1E,KAAKkI,SAGTJ,YAAYrH,GACHA,EAAK6F,YAC6B,iBAA5BtG,KAAKuF,MAAM9E,EAAK0E,QACvBnF,KAAKuF,MAAM9E,EAAK0E,QAAU1E,EAAKwH,OACW,iBAA5BjI,KAAKuF,MAAM9E,EAAK0E,QAC9BnF,KAAKuF,MAAM9E,EAAK0E,QAAU1E,EAAKiH,OAE/B1H,KAAKuF,MAAM9E,EAAK0E,QAAU1E,EAAKsH,QAI/BG,SAIJ,GAHAlI,KAAKkG,KAAO,IAAIW,EAAK7G,KAAK4E,KAAM5E,KAAKuF,MAAM3D,UAAW5B,KAAKuF,MAAMrB,MACjElE,KAAK8G,MAAQ,IAAIC,EAAM/G,KAAKkG,KAAKrF,QAC7Bb,KAAKuF,MAAM3D,UAAW5B,KAAKuF,MAAMxC,IAAK/C,KAAKuF,MAAMvC,KAC7B,WAApBhD,KAAKuF,MAAMrB,KAAmB,CAC9B,MAAMkD,EAAwBpH,KAAKiH,sBAAsBjH,KAAKuF,MAAM8B,WACpErH,KAAKsH,MAAQ,IAAIH,EAASnH,KAAKkG,KAAKrF,QAChCb,KAAKuF,MAAM3D,UAAWwF,EAAepH,KAAKuF,MAAM8B,WACpDrH,KAAKsH,MAAMzG,QAAQK,aAAa,iBAAkB,QAEtD,MAAM8F,EAAehH,KAAKiH,sBAAsBjH,KAAKuF,MAAM2B,SAC3DlH,KAAKmG,KAAO,IAAIgB,EAASnH,KAAKkG,KAAKrF,QAC/Bb,KAAKuF,MAAM3D,UAAWoF,EAAchH,KAAKuF,MAAM2B,SAC/ClH,KAAKuF,MAAMzD,SACX9B,KAAKmG,KAAK5D,aACc,WAApBvC,KAAKuF,MAAMrB,WACQM,IAAfxE,KAAKsH,OACLtH,KAAKsH,MAAM/E,cAIvBvC,KAAKkG,KAAK7B,cAAcrE,KAAKmG,KAAKtF,QAASb,KAAKsH,OAAOzG,SACvDb,KAAKuH,QAGDA,QACJ,GAAwB,WAApBvH,KAAKuF,MAAMrB,KAAmB,CAC9B,QAAmBM,IAAfxE,KAAKsH,MAIL,MAAM,IAAIK,MAAM,uBAHhB3H,KAAKsH,MAAMzG,QAAQgF,iBAAiB,YAAa7F,KAAK+E,iBACtD/E,KAAKsH,MAAMzG,QAAQgF,iBAAiB,aAAc7F,KAAK+E,iBAK/D/E,KAAKmG,KAAKtF,QAAQgF,iBAAiB,YAAa7F,KAAK+E,iBACrD/E,KAAKmG,KAAKtF,QAAQgF,iBAAiB,aAAc7F,KAAK+E,iBACtD/E,KAAK8G,MAAMjG,QAAQgF,iBAAiB,QAAS7F,KAAKyG,kBAG9CQ,sBAAsB5F,GAC1B,OAAQA,EAAQrB,KAAKuF,MAAMxC,MAAQ/C,KAAKuF,MAAMvC,IAAMhD,KAAKuF,MAAMxC,qBAG3C4C,GACpB,OAAIA,aAAiB4C,WACV5C,EAAM6C,QAAQ,GAElB7C,EAqEHe,eAAef,GACnB,MAAMV,EAA0BN,EAAKO,SAASS,GACxCL,EAA2B,GAUjC,MAT6B,eAAzBtF,KAAKuF,MAAM3D,WACX0D,EAAUlF,KAAKJ,KAAKkG,KAAKzD,UACzB6C,EAAUlF,KAAKJ,KAAKkG,KAAKnC,mBACzBuB,EAAUlF,KAAK6E,EAAIO,WAEnBF,EAAUlF,KAAKJ,KAAKkG,KAAKtD,WACzB0C,EAAUlF,KAAKJ,KAAKkG,KAAKlC,kBACzBsB,EAAUlF,KAAK6E,EAAIQ,UAEhBH,SCrTTmD,cAKU7D,EAAmB8D,EAAcC,GACzC3I,KAAK0I,MAAQA,EACb1I,KAAK2I,KAAOA,EACZ3I,KAAK2I,KAAKzI,UAAUF,KAAK0I,MAAMZ,YAAYc,KAAK5I,KAAK0I,QACrD1I,KAAK2I,KAAKzI,UAAUF,KAAK0I,MAAMG,aAAaD,KAAK5I,KAAK0I,QACtD1I,KAAK0I,MAAMxI,UAAUF,KAAK2I,KAAKb,YAAYc,KAAK5I,KAAK2I,OACrD3I,KAAK0I,MAAMxI,UAAUF,KAAK2I,KAAKnB,eAAeoB,KAAK5I,KAAK2I,cCV1DG,UAAc/I,cAKJ6E,EAAmBC,GAC3BC,QANR9E,KAwRY+I,UAAaC,IAAmCA,EAAehJ,KAAKuF,MAAM8B,YAC3ErH,KAAKuF,MAAM2B,QAAUlH,KAAKuF,MAAM8B,YAAc,GAlRjDrH,KAAK4E,KAAOA,EACZ5E,KAAKuF,MAAQoB,OAAOC,OAAO,GAAI/B,GAGnCgE,aAAapI,GACT,GAAIA,EAAK6F,UAAW,OACpB,IAAI0C,EACAC,EACgB,YAAhBxI,EAAK0E,QACL8D,EAAkB,UAClBD,EAAehJ,KAAKkJ,iBAAiBzI,EAAMwI,IACpB,UAAhBxI,EAAK0E,QACZ6D,EAAehJ,KAAKmJ,yBAAyB1I,GAEzCwI,EADoB,WAApBjJ,KAAKuF,MAAMrB,MAGOlE,KAAK+I,UAAUC,GAFf,UAE2C,YAEjEA,EAAmC,cAApBC,EAAkCjJ,KAAKoJ,eAAeJ,GAAgBhJ,KAAKqJ,aAAaL,KAEvGC,EAAkB,YAClBD,EAAehJ,KAAKkJ,iBAAiBzI,EAAMwI,IAG/CjJ,KAAK8H,YAAY,CACb3C,OAAQ8D,EACRvB,OAAQsB,EACR1C,WAAW,IAEftG,KAAKQ,OAAO,CACR2E,OAAQ8D,EACRvB,OAAQsB,EACR1C,WAAW,IAEf,IAAImB,EAAWqB,EAAMQ,iBAAiBN,EAAchJ,KAAKuF,MAAMxC,IAAK/C,KAAKuF,MAAMvC,KAC/EyE,EAAWqB,EAAMS,mBAAmB9B,GACpCzH,KAAKQ,OAAO,CACR2E,OAAQ8D,EACRvB,OAAQD,EACRnB,WAAW,IAIf0B,sBAAkB3G,GAClBrB,KAAK8H,YAAY,CACb3C,OAAQ,YACR8C,OAAQ5G,EACRiF,WAAW,IAIf6B,eAAW9G,GACXrB,KAAK8H,YAAY,CACb3C,OAAQ,OACR8C,OAAQ5G,EACRiF,WAAW,IAEXtG,KAAKuF,MAAMxC,IAAM/C,KAAKuF,MAAM8B,YAC5BrH,KAAKwJ,WAAaxJ,KAAKuF,MAAMxC,KAE7B/C,KAAKuF,MAAM8B,UAAYrH,KAAKuF,MAAM2B,UAClClH,KAAKwJ,WAAaxJ,KAAKuF,MAAM2B,SAIjCkB,eAAW/G,GAIX,GAHqBoI,EAGJpI,EAHiB2B,EAGVhD,KAAKuF,MAAMvC,IAHYD,EAGP/C,KAAKuF,MAAMxC,MAFxC0G,EAAMzG,EAAMD,GAAe,IAAR0G,GAE2B,MAAM,IAAI9B,MAAM,wEAHxD,IAAI8B,EAAazG,EAAaD,EAI/C/C,KAAKuF,MAAMrC,KAAO7B,EAGlBgH,cAAUhH,GACV,GAAIA,EAAQrB,KAAKuF,MAAMxC,KAAO1B,GAASrB,KAAKuF,MAAM8B,UAC9C,MAAM,IAAIM,MAAM,0CAEpB3H,KAAK8H,YAAY,CACb3C,OAAQ,MACRuC,OAAQrG,EACRiF,WAAW,IAEXjF,EAAQrB,KAAKuF,MAAM2B,UACnBlH,KAAK0J,SAAWrI,GAIpBsI,aACA,OAAO3J,KAAKuF,MAAMvC,IAGlBsF,cAAUjH,GACV,GAAIA,EAAQrB,KAAKuF,MAAMvC,KAAO3B,GAASrB,KAAKuF,MAAM2B,QAC9C,MAAM,IAAIS,MAAM,0CAEpB3H,KAAK8H,YAAY,CACb3C,OAAQ,MACRuC,OAAQrG,EACRiF,WAAW,IAES,WAApBtG,KAAKuF,MAAMrB,MAAqB7C,EAAQrB,KAAKuF,MAAM8B,YACnDrH,KAAKwJ,WAAanI,GAItBuI,aACA,OAAO5J,KAAKuF,MAAMxC,IAGlB2G,aAASrI,GACTrB,KAAK8H,YAAY,CACb3C,OAAQ,UACRuC,OAAQ1H,KAAKqJ,aAAahI,GAC1BiF,WAAW,IAEftG,KAAKQ,OAAO,CACRkH,OAAQ1H,KAAKuF,MAAM2B,QACnB/B,OAAQ,UACRmB,WAAW,IAEf,IAAImB,EAAWqB,EAAMQ,iBAAiBtJ,KAAKuF,MAAM2B,QAASlH,KAAKuF,MAAMxC,IAAK/C,KAAKuF,MAAMvC,KACrFyE,EAAWqB,EAAMS,mBAAmB9B,GACpCzH,KAAKQ,OAAO,CACRkH,OAAQD,EACRtC,OAAQ,UACRmB,WAAW,IAIfuD,iBACA,OAAO7J,KAAKuF,MAAM2B,QAGlBsC,eAAWnI,GACX,GAAwB,WAApBrB,KAAKuF,MAAMrB,KAAmB,OAClClE,KAAK8H,YAAY,CACb3C,OAAQ,YACRuC,OAAQ1H,KAAKoJ,eAAe/H,GAC5BiF,WAAW,IAEftG,KAAKQ,OAAO,CACRkH,OAAQ1H,KAAKuF,MAAM8B,UACnBlC,OAAQ,YACRmB,WAAW,IAEf,IAAImB,EAAWqB,EAAMQ,iBAAiBtJ,KAAKuF,MAAM8B,UAAWrH,KAAKuF,MAAMxC,IAAK/C,KAAKuF,MAAMvC,KACvFyE,EAAWqB,EAAMS,mBAAmB9B,GACpCzH,KAAKQ,OAAO,CACRkH,OAAQD,EACRtC,OAAQ,YACRmB,WAAW,IAIfwD,mBACA,OAAO9J,KAAKuF,MAAM8B,UAGtBS,YAAYrH,GACHA,EAAK6F,YAC6B,iBAA5BtG,KAAKuF,MAAM9E,EAAK0E,QACvBnF,KAAKuF,MAAM9E,EAAK0E,QAAU1E,EAAKwH,OACW,iBAA5BjI,KAAKuF,MAAM9E,EAAK0E,QAC9BnF,KAAKuF,MAAM9E,EAAK0E,QAAU1E,EAAKiH,OAE/B1H,KAAKuF,MAAM9E,EAAK0E,QAAU1E,EAAKsH,kCAIL1G,GAC9B,IAAI0I,EAAW1I,EAGf,OAFA0I,EAAWA,EAAW,EAAI,EAAIA,EAC9BA,EAAWA,EAAW,EAAI,EAAIA,EACvBA,0BAGqB1I,EAAe0B,EAAaC,GACxD,OAAQ3B,EAAQ0B,IAAQC,EAAMD,GAG1BiH,UAAU3I,EAAe4H,EAAkB,WAC/C,IAAIc,EAAmB1I,EAEvB,OADA0I,GAAa/J,KAAKuF,MAAMvC,IAAMhD,KAAKuF,MAAMxC,IAClC/C,KAAKuF,MAAMxC,IAAM/C,KAAKiK,gBAAgBF,EAAUd,GAGnDgB,gBAAgB5I,EAAe4H,GACnC,IAAIc,EAAmB1I,EACvB,QAAwBmD,IAApBxE,KAAKuF,MAAMrC,KAAoB,MAAM,IAAIyE,MAAM,+BACzB,MAApBuC,EAAuBH,EAAW/J,KAAKuF,MAAMrC,KAMnD,GAJI6G,EADAG,EAAe,GAAK,GACTlK,KAAKuF,MAAMrC,KAAOiH,KAAKC,KAAKF,GAE5BlK,KAAKuF,MAAMrC,KAAOiH,KAAKE,MAAMH,GAEpB,YAApBjB,EAA+B,CAE3BiB,KADsBlK,KAAKuF,MAAMvC,IAAMhD,KAAKuF,MAAMxC,KAAO/C,KAAKuF,MAAMrC,OAEpE6G,EAAW/J,KAAKuF,MAAMvC,KAG9B,MAAMsH,EAA6BtK,KAAKuF,MAAMrC,KAAKqH,WAC9CC,MAAM,KACNC,MACL,IAAIC,EAAW,EAKf,YAJelG,IAAX8F,IACAI,EAAW1K,KAAKuF,MAAMrC,KAAKqH,WACtBI,SAAS,KAAQL,EAAO9G,OAAU,GAEpCG,OAAOoG,EAASlG,QAAQ6G,IAG3BrB,aAAanC,GACjB,IAAI7F,EAAgB6F,EAcpB,MAbwB,WAApBlH,KAAKuF,MAAMrB,KACP7C,EAAQrB,KAAKuF,MAAMvC,IACnB3B,EAAQrB,KAAKuF,MAAMvC,IACZ3B,EAAQrB,KAAKuF,MAAMxC,MAC1B1B,EAAQrB,KAAKuF,MAAMxC,KAEI,WAApB/C,KAAKuF,MAAMrB,OACd7C,EAAQrB,KAAKuF,MAAMvC,IACnB3B,EAAQrB,KAAKuF,MAAMvC,IACZ3B,GAASrB,KAAKuF,MAAM8B,YAC3BhG,EAAQrB,KAAKuF,MAAM8B,UAAYrH,KAAKuF,MAAMrC,OAG3C7B,EAGH+H,eAAe/B,GACnB,IAAIhG,EAAgBgG,EAUpB,MATwB,WAApBrH,KAAKuF,MAAMrB,KACX7C,EAAQ,EACmB,WAApBrB,KAAKuF,MAAMrB,OACd7C,EAAQrB,KAAKuF,MAAMxC,IACnB1B,EAAQrB,KAAKuF,MAAMxC,IACZ1B,GAASrB,KAAKuF,MAAM2B,UAC3B7F,EAAQrB,KAAKuF,MAAM2B,QAAUlH,KAAKuF,MAAMrC,OAGzC7B,EAGH6H,iBAAiBzI,EAAkBwI,GACvC,IAAI2B,EAAgB,EACpB,QAAsBpG,IAAlB/D,EAAK2F,SAGL,MAAM,IAAIuB,MAAM,sCAFhBiD,EAAgBnK,EAAK2F,SAAS,GAIZ3F,MAAhBoK,EAAgBpK,EAAK2F,SAAS,GAC9B0E,EAAiBrK,EAAK2F,SAAS,GAC/B2E,EAAiBtK,EAAK2F,SAAS,GAC/B4E,EAAQvK,EAAK2F,SAAS,GAAK2E,EACjC,IAAIE,GAAexK,EAAK2F,SAAS,GAAK4E,EAAQF,EAAiBF,GACzDC,EACNI,EAAcnC,EAAMS,mBAAmB0B,GACvC,MAAMjC,EAAehJ,KAAKgK,UAAUiB,EAAahC,GACjD,MAA2B,YAApBA,EAAgCjJ,KAAKqJ,aAAaL,GAAgBhJ,KAAKoJ,eAAeJ,GAGzFG,yBAAyB1I,GAC7B,QAAsB+D,IAAlB/D,EAAK2F,SACL,MAAM,IAAIuB,MAAM,sCAEpB,MAAMkD,EAAgBpK,EAAK2F,SAAS,GAC9B0E,EAAiBrK,EAAK2F,SAAS,GACrC,IAAI8E,GAAuBzK,EAAK2F,SAAS,GAAK0E,GAAkBD,EAEhE,OADAK,EAAsBpC,EAAMS,mBAAmB2B,GACxClL,KAAKgK,UAAUkB,UCpRxBC,cASUvG,EAAmBwG,GAC3BpL,KAAK4E,KAAOA,EACZ5E,KAAK0I,MAAQ,IAAII,EAAM9I,KAAK4E,KAAMwG,GAClCpL,KAAK2I,KAAO,IAAIhE,EAAK3E,KAAK4E,KAAMwG,GAChCpL,KAAK2I,KAAK1F,OACVjD,KAAKqL,UAAY,IAAI5C,EAAUzI,KAAK4E,KAAM5E,KAAK0I,MAAO1I,KAAK2I,MAG/DnG,aAEI,OADAxC,KAAK2I,KAAKnG,cACH,EAGXD,aAEI,OADAvC,KAAK2I,KAAKpG,cACH,EAGXyF,kBAAkB3G,GAGd,OAFArB,KAAK2I,KAAKX,kBAAoB3G,EAC9BrB,KAAK0I,MAAMV,kBAAoB3G,GACxB,EAGX8G,WAAW9G,GAGP,OAFArB,KAAK2I,KAAKR,WAAa9G,EACvBrB,KAAK0I,MAAMP,WAAa9G,GACjB,EAGX+G,WAAW/G,GAGP,OAFArB,KAAK0I,MAAMN,WAAa/G,EACxBrB,KAAK2I,KAAKP,WAAa/G,GAChB,EAGXqI,SAASrI,GAEL,OADArB,KAAK0I,MAAMgB,SAAWrI,GACf,EAGXmI,WAAWnI,GAEP,OADArB,KAAK0I,MAAMc,WAAanI,GACjB,EAGXgH,UAAUhH,GAGN,OAFArB,KAAK0I,MAAML,UAAYhH,EACvBrB,KAAK2I,KAAKN,UAAYhH,GACf,EAGXiH,UAAUjH,GAGN,OAFArB,KAAK0I,MAAMJ,UAAYjH,EACvBrB,KAAK2I,KAAKL,UAAYjH,GACf,EAGXsI,SACI,OAAO3J,KAAK0I,MAAMiB,OAGtBC,SACI,OAAO5J,KAAK0I,MAAMkB,OAGtBC,aACI,OAAO7J,KAAK0I,MAAMmB,WAGtBC,eACI,OAAO9J,KAAK0I,MAAMoB,wBCnFfwB,GACP,MAAMC,EAAU,GACVC,EAAU,CACZvI,KAAM,SAAU4B,GACZ,MAAMuG,EAAWE,EAAEG,OAAO,CACtB3J,QAAQ,EACRkB,IAAK,IACLD,IAAK,EACLG,KAAM,EACNgB,KAAM,SACNgD,QAAS,IACTG,UAAW,EACXzF,UAAW,aACXgG,WAAY,aAEZC,aAAc,cAEfhD,GAEH,OAAO7E,KAAK0L,MAAK,WACb,MAAMC,EAAML,EAAEtL,MACd,GAAIoL,EAASlI,KAAOkI,EAASpI,IAAMoI,EAASrI,KAAyB,IAAlBqI,EAASlI,KAAY,MAAM,IAAIyE,MAAM,wEACnC,GAAjDyD,EAASlE,QAAUkE,EAASpI,IAAK,MAAM,IAAI2E,MAAM,mDACd,GAAnCyD,EAAS/D,UAAY+D,EAASrI,IAAK,MAAM,IAAI4E,MAAM,kDAC1C4D,EAALnL,KAAK,IAAI+K,EAAOQ,EAAI,GAAIP,QAGxC5I,WAAY,WACR,IAAIoJ,EACJL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGjBqL,EAAOpJ,cAEXD,WAAY,WACR,IAAIqJ,EACJL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGjBqL,EAAOrJ,cAEXyF,kBAAmB,SAAU3G,GACzB,IAAIuK,EACJL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGjBqL,EAAO5D,kBAAkB3G,IAE7B8G,WAAY,SAAU9G,GAClB,IAAIuK,EACJL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGjBqL,EAAOzD,WAAW9G,IAEtB+G,WAAY,SAAU/G,GAClB,IAAIuK,EAMJ,GALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGboD,OAAOkI,MAAMxK,GAAQ,MAAM,IAAIsG,MAAM,2BAClCS,EAAAA,WAAW/G,IAEtBqI,SAAU,SAAUrI,GAChB,IAAIuK,EAMJ,GALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGboD,OAAOkI,MAAMxK,GAAQ,MAAM,IAAIsG,MAAM,8BACzBtG,EAATqI,SAASrI,IAEpBmI,WAAY,SAAUnI,GAClB,IAAIuK,EAMJ,GALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGboD,OAAOkI,MAAMxK,GAAQ,MAAM,IAAIsG,MAAM,gCAClC6B,EAAAA,WAAWnI,IAEtBgH,UAAW,SAAUhH,GACjB,IAAIuK,EAMJ,GALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGboD,OAAOkI,MAAMxK,GAAQ,MAAM,IAAIsG,MAAM,gCACzCiE,EAAOvD,UAAUhH,IAErBsI,OAAQ,WACJ,IAAIiC,EAMJ,OALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGVqL,EAAOjC,UAElBC,OAAQ,WACJ,IAAIgC,EAMJ,OALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGVqL,EAAOhC,UAElBC,WAAY,WACR,IAAI+B,EAMJ,OALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGVqL,EAAO/B,cAElBC,aAAc,WACV,IAAI8B,EAMJ,OALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGVqL,EAAO9B,gBAElBxB,UAAW,SAAUjH,GACjB,IAAIuK,EAMJ,GALAL,EAAQ7K,SAASH,IACTA,EAAEqE,OAAS5E,KAAK,KAChB4L,EAASrL,MAGboD,OAAOkI,MAAMxK,GAAQ,MAAM,IAAIsG,MAAM,gCACzCiE,EAAOtD,UAAUjH,KAKzBiK,EAAEQ,GAAGX,OAAS,SAAUY,GACpB,OAAIP,EAAQO,GACDP,EAAQO,GAAQC,MAAMhM,KAAMiM,MAAMC,UAAU7F,MAAM8F,KAAKC,UAAW,IAEvD,iBAAXL,GAAwBA,GAGnCT,EAAEe,MAAM,kBAAAN,EAAA,oCACR,MAHWP,EAAQvI,KAAK+I,MAAMhM,KAAMoM,aAK3CE,YC3DDC,oBAhFgB1L,EAAsBuK,GArBtCpL,KA8DIwM,wBAA2BxH,IACvBA,EAAEG,OAAOsH,QAAUzM,KAAK4L,OAAOT,OAAO,cAAgBnL,KAAK4L,OAAOT,OAAO,eA/DjFnL,KAkEI0M,0BAA6B1H,IACzBA,EAAEG,OAAOsH,QAAUzM,KAAK4L,OAAOT,OAAO,oBAAqB,YAAcnL,KAAK4L,OAAOT,OAAO,oBAAqB,eAnEzHnL,KAsEI2M,kBAAqB3H,IACbA,EAAEG,OAAOsH,SACTzM,KAAK4L,OAAOT,OAAO,aAAc,UACjCnL,KAAK4M,WAAWhM,SAASiM,YAAY,iCAErC7M,KAAK4L,OAAOT,OAAO,aAAc,UACjCnL,KAAK4M,WAAWhM,SAASkM,SAAS,iCA5E9C9M,KAgFI+M,sBAAyB/H,IACrBhF,KAAK4L,OAAOT,OAAO,aAAc6B,WAAWhI,EAAEG,OAAO9D,SAjF7DrB,KAoFIiN,oBAAuBjI,IACnBhF,KAAK4L,OAAOT,OAAO,WAAY6B,WAAWhI,EAAEG,OAAO9D,SArF3DrB,KAwFIkN,sBAAyBlI,IACrBhF,KAAK4L,OAAOT,OAAO,aAAc6B,WAAWhI,EAAEG,OAAO9D,SAzF7DrB,KA4FImN,qBAAwBnI,IACpBhF,KAAK4L,OAAOT,OAAO,YAAa6B,WAAWhI,EAAEG,OAAO9D,SA7F5DrB,KAgGIoN,qBAAwBpI,IACpBhF,KAAK4L,OAAOT,OAAO,YAAa6B,WAAWhI,EAAEG,OAAO9D,SA3EpDrB,KAAKa,QAAUyK,EAAEzK,GACjBb,KAAKqN,cAAgB/B,EAAEtL,KAAKa,QAAQyM,KAAK,8BACzCtN,KAAKuN,gBAAkBjC,EAAEtL,KAAKa,QAAQyM,KAAK,gCAC3CtN,KAAKwN,aAAelC,EAAEtL,KAAKa,QAAQyM,KAAK,6BACxCtN,KAAKyN,WAAanC,EAAEtL,KAAKa,QAAQyM,KAAK,4BACtCtN,KAAK0N,SAAWpC,EAAEtL,KAAKa,QAAQyM,KAAK,0BACpCtN,KAAK4M,WAAatB,EAAEtL,KAAKa,QAAQyM,KAAK,4BACtCtN,KAAK2N,UAAYrC,EAAEtL,KAAKa,QAAQyM,KAAK,2BACrCtN,KAAK4N,UAAYtC,EAAEtL,KAAKa,QAAQyM,KAAK,2BACrC,MAAMzI,EAAU8B,OAAOC,OAAOwE,EAAU,CACpCxD,WAAavG,IACTrB,KAAK0N,SAASjE,IAAIpI,IAEtBwG,aAAexG,IACXrB,KAAK4M,WAAWnD,IAAIpI,MAG5BrB,KAAK4L,OAASN,EAAEtL,KAAKa,QAAQyM,KAAK,YAC7BnC,OAAOtG,GACZ7E,KAAKiD,OAGTA,OACIjD,KAAKqN,cAAcQ,GAAG,QAAS7N,KAAKwM,yBACpCxM,KAAKuN,gBAAgBM,GAAG,QAAS7N,KAAK0M,2BACtC1M,KAAKwN,aAAaK,GAAG,QAAS7N,KAAK2M,mBAC9B3M,KAAKwN,aAAaM,GAAG,aACtB9N,KAAK4M,WAAWhM,SAASkM,SAAS,+BAEtC9M,KAAKyN,WAAWI,GAAG,SAAU7N,KAAK+M,uBAClC/M,KAAK0N,SAASG,GAAG,SAAU7N,KAAKiN,qBAChCjN,KAAK0N,SAASjE,IAAIlI,OAAOvB,KAAK4L,OAAOT,OAAO,gBAC5CnL,KAAK4M,WAAWiB,GAAG,SAAU7N,KAAKkN,uBAClClN,KAAK4M,WAAWnD,IAAIlI,OAAOvB,KAAK4L,OAAOT,OAAO,kBAC9CnL,KAAK2N,UAAUE,GAAG,SAAU7N,KAAKmN,sBACjCnN,KAAK2N,UAAUlE,IAAIlI,OAAOvB,KAAK4L,OAAOT,OAAO,YAC7CnL,KAAK4N,UAAUC,GAAG,SAAU7N,KAAKoN,sBACjCpN,KAAK4N,UAAUnE,IAAIlI,OAAOvB,KAAK4L,OAAOT,OAAO,cCzDrDG,GAAE,WACE,MAAMF,EAAW,CACb,CACItJ,QAAQ,EACRF,UAAW,aACXoB,IAAK,IACLD,IAAK,EACLG,KAAM,EACNgB,KAAM,SACNgD,QAAS,IACTG,UAAW,EACXO,WAAY,aAEZC,aAAc,cAGlB,CACI/F,QAAQ,EACRF,UAAW,WACXoB,IAAK,GACLD,IAAK,EACLG,KAAM,EACNgB,KAAM,SACNgD,QAAS,GACTG,UAAW,GACXO,WAAY,aAEZC,aAAc,cAGlB,CACI/F,QAAQ,EACRF,UAAW,aACXoB,IAAK,IACLD,KAAK,IACLG,KAAM,GACNgB,KAAM,SACNgD,QAAS,IACTG,WAAW,EACXO,WAAY,aAEZC,aAAc,eAItByD,EAAE,oBACGI,MADL,CACWqC,EAAOlN,KAEV,IAAImN,EAAenN,EAASuK,EAAS2C","sources":["src/slider/Observer.ts","src/slider/subView/HeadBubble.ts","src/slider/subView/ViewHead.ts","src/slider/subView/Scale.ts","src/slider/subView/Line.ts","src/slider/View.ts","src/slider/Presenter.ts","src/slider/Model.ts","src/slider/Slider.ts","src/slider/jquery.slider.js","src/blocks/slider-template/slider-template.ts","src/index/index.ts"],"sourcesContent":["import {NotifyData} from './types/types';\r\n\r\nclass Observer {\r\n    observers: Array<(data: NotifyData) => void>\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    subscribe(observer: (data: NotifyData) => void): void {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    unsubscribe(observer: (data: NotifyData) => void): void {\r\n        this.observers = this.observers.filter((x) => x !== observer);\r\n    }\r\n\r\n    notify(data: NotifyData): void {\r\n        this.observers.forEach((x) => x(data));\r\n    }\r\n}\r\n\r\nexport {Observer};\r\n","class HeadBubble {\r\n    element: HTMLElement;\r\n\r\n    parent: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        this.element = document.createElement('span');\r\n        this.element.classList.add('slider__head-bubble');\r\n        this.element.setAttribute('data-type', 'bubble');\r\n        this.parent = parent;\r\n        this.parent.append(this.element);\r\n    }\r\n\r\n    update(value: number): void {\r\n        this.element.textContent = String(value);\r\n    }\r\n\r\n    show(): void {\r\n        this.element.classList.add('slider__head-bubble_active');\r\n    }\r\n\r\n    hide(): void {\r\n        this.element.classList.remove('slider__head-bubble_active');\r\n    }\r\n}\r\n\r\nexport default HeadBubble;\r\n","import HeadBubble from './HeadBubble';\r\n\r\nclass ViewHead {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    bubble: HeadBubble;\r\n\r\n    constructor(parent: HTMLElement, direction: string,\r\n        value: number, bubbleValue: number) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.element.classList.add('slider__head');\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__head')\r\n            : this.element.classList.add('slider__head', 'slider__head_vertical');\r\n        this.bubble = new HeadBubble(this.element);\r\n        this.parent.append(this.element);\r\n        this.updatePosition(value);\r\n        this.updateBubble(bubbleValue);\r\n    }\r\n\r\n    removeHead(): boolean {\r\n        this.element.remove();\r\n        return true;\r\n    }\r\n\r\n    updatePosition(newPos: number): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.style.left = `${newPos * 100}%`;\r\n        } else {\r\n            this.element.style.top = `${newPos * 100}%`;\r\n        }\r\n    }\r\n\r\n    updateBubble(value: number): void {\r\n        if (this.bubble) {\r\n            this.bubble.update(value);\r\n        }\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.bubble.show();\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.bubble.hide();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n}\r\n\r\nexport default ViewHead;\r\n","class Scale {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement, direction: string, min: number, max: number) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__scale')\r\n            : this.element.classList.add('slider__scale', 'slider__scale_vertical');\r\n        this.parent.append(this.element);\r\n        this.init(min, max);\r\n    }\r\n\r\n    init(min: number, max: number): void {\r\n        const step = (max - min) / 4;\r\n        for (let i = 0; i <= 100; i += 5) {\r\n            if (i % 25 === 0) {\r\n                if (this.direction === 'horizontal') {\r\n                    this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash' style='left: ${i}%;'></div><div class='slider__scale-number' style='left: ${i}%;'></div>`);\r\n                } else {\r\n                    this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash slider__dash_vertical' style='top: ${i}%;'></div><div class='slider__scale-number slider__scale-number_vertical' style='top: ${i}%;'></div>`);\r\n                }\r\n                const numbers = this.element.querySelectorAll('.slider__scale-number');\r\n                const number = numbers[numbers.length - 1];\r\n                if (i === 0) {\r\n                    number.innerHTML = String(min);\r\n                } else {\r\n                    const dashValue = min + (i / 25) * step;\r\n                    number.innerHTML = Number.isInteger(dashValue)\r\n                        ? String(dashValue)\r\n                        : dashValue.toFixed(2);\r\n                }\r\n            } else if (this.direction === 'horizontal') {\r\n                this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash slider__dash_small' style='left: ${i}%;'></div>`);\r\n            } else {\r\n                this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash slider__dash_small-vertical' style='top: ${i}%;'></div>`);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeScale(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getLeftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get getTopCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Scale;\r\n","class Line {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    progressBar: HTMLElement;\r\n\r\n    type: string;\r\n\r\n    constructor(parent: HTMLElement, direction: string, type: string) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.type = type;\r\n        this.element = document.createElement('div');\r\n        this.progressBar = document.createElement('span');\r\n        if (this.direction === 'horizontal') {\r\n            this.element.classList.add('slider__line');\r\n            this.progressBar.classList.add('slider__line-progress');\r\n        } else {\r\n            this.element.classList.add('slider__line', 'slider__line_vertical');\r\n            this.progressBar.classList.add('slider__line-progress', 'slider__line-progress_vertical');\r\n        }\r\n        this.element.append(this.progressBar);\r\n        this.parent.append(this.element);\r\n    }\r\n\r\n    set setType(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    progressValue(To: HTMLElement, From: HTMLElement | undefined): void {\r\n        if (this.direction === 'horizontal') {\r\n            if (this.type === 'single') {\r\n                this.progressBar.style.width = To.style.left;\r\n            } else if (From !== undefined) {\r\n                this.progressBar.style.width = `${parseInt(To.style.left, 10) - parseInt(From.style.left, 10)}%`;\r\n                this.progressBar.style.left = From.style.left;\r\n            }\r\n        } else if (this.type === 'single') {\r\n            this.progressBar.style.height = To.style.top;\r\n        } else if (From !== undefined) {\r\n            this.progressBar.style.height = `${parseInt(To.style.top, 10) - parseInt(From.style.top, 10)}%`;\r\n            this.progressBar.style.top = From.style.top;\r\n        }\r\n    }\r\n\r\n    removeLine(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getLeftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get getTopCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import {Observer} from './Observer';\r\nimport ViewHead from './subView/ViewHead';\r\nimport Scale from './subView/Scale';\r\nimport Line from './subView/Line';\r\nimport {State} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass View extends Observer {\r\n    private readonly elem: HTMLElement;\r\n\r\n    private readonly state: State;\r\n\r\n    head: ViewHead;\r\n\r\n    scale: Scale;\r\n\r\n    line: Line;\r\n\r\n    head2?: ViewHead;\r\n\r\n    private handleSwipe: (event: (MouseEvent | TouchEvent)) => Array<number>;\r\n\r\n    constructor(elem: HTMLElement, options: State) {\r\n        super();\r\n        this.elem = elem;\r\n        this.handleSwipe = () => [];\r\n        this.state = Object.assign({}, options);\r\n        this.line = new Line(this.elem, this.state.direction, this.state.type);\r\n        this.scale = new Scale(this.line.element,\r\n            this.state.direction, this.state.min, this.state.max);\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead(this.line.element,\r\n            this.state.direction, headStartPos, this.state.valueTo);\r\n    }\r\n\r\n    init(): void {\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead(this.line.element,\r\n                this.state.direction, head2StartPos, this.state.valueFrom);\r\n            this.head2.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double') {\r\n                if (this.head2 !== undefined) {\r\n                    this.head2.showBubble();\r\n                }\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.setup();\r\n    }\r\n\r\n    changePosition(data: NotifyData): void {\r\n        if (data.onlyState) return;\r\n        let position = 0;\r\n        if (data.valueN !== undefined) {\r\n            position = data.valueN;\r\n        } else {\r\n            throw new Error('Новое значение не определено');\r\n        }\r\n        if (data.target === 'valueTo') {\r\n            this.head.updatePosition(position);\r\n            this.head.updateBubble(this.state.valueTo);\r\n            this.state.onChangeTo(this.state.valueTo);\r\n            this.line.progressValue(this.head.element, this.head2?.element);\r\n        } else if (data.target === 'valueFrom') {\r\n            if (this.head2 !== undefined) {\r\n                this.head2.updatePosition(position);\r\n                this.head2.updateBubble(this.state.valueFrom);\r\n                this.state.onChangeFrom(this.state.valueFrom);\r\n                this.line.progressValue(this.head.element, this.head2.element);\r\n            } else {\r\n                throw new Error('Head2 не существует');\r\n            }\r\n        }\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.updateState({\r\n            target: 'bubble',\r\n            valueB: false,\r\n            onlyState: true\r\n        });\r\n        this.head.hideBubble();\r\n        this.head2?.hideBubble();\r\n        this.notify({\r\n            target: 'bubble',\r\n            valueB: false,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.updateState({\r\n            target: 'bubble',\r\n            valueB: true,\r\n            onlyState: true\r\n        });\r\n        this.head.showBubble();\r\n        this.head2?.showBubble();\r\n        this.notify({\r\n            target: 'bubble',\r\n            valueB: true,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeOrientation(value: string) {\r\n        this.updateState({\r\n            target: 'direction',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeType(value: string) {\r\n        this.updateState({\r\n            target: 'type',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        delete this.head2;\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeStep(value: number) {\r\n        if (value > this.state.max - this.state.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n        this.state.step = value;\r\n    }\r\n\r\n    set changeMax(value: number) {\r\n        if (value < this.state.min || value <= this.state.valueFrom) {\r\n            throw new Error('Максимум не может быть меньше минимума');\r\n        }\r\n        this.updateState({\r\n            target: 'max',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeMin(value: number) {\r\n        if (value > this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше максимума');\r\n        }\r\n        this.updateState({\r\n            target: 'min',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    updateState(data: NotifyData): void {\r\n        if (!data.onlyState) return;\r\n        if (typeof this.state[data.target] === 'string') {\r\n            this.state[data.target] = data.valueS;\r\n        } else if (typeof this.state[data.target] === 'number') {\r\n            this.state[data.target] = data.valueN;\r\n        } else {\r\n            this.state[data.target] = data.valueB;\r\n        }\r\n    }\r\n\r\n    private reInit(): void {\r\n        this.line = new Line(this.elem, this.state.direction, this.state.type);\r\n        this.scale = new Scale(this.line.element,\r\n            this.state.direction, this.state.min, this.state.max);\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead(this.line.element,\r\n                this.state.direction, head2StartPos, this.state.valueFrom);\r\n            this.head2.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead(this.line.element,\r\n            this.state.direction, headStartPos, this.state.valueTo);\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double') {\r\n                if (this.head2 !== undefined) {\r\n                    this.head2.showBubble();\r\n                }\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.setup();\r\n    }\r\n\r\n    private setup(): void {\r\n        if (this.state.type === 'double') {\r\n            if (this.head2 !== undefined) {\r\n                this.head2.element.addEventListener('mousedown', this.handleHeadStart);\r\n                this.head2.element.addEventListener('touchstart', this.handleHeadStart);\r\n            } else {\r\n                throw new Error('Head2 не существует');\r\n            }\r\n        }\r\n        this.head.element.addEventListener('mousedown', this.handleHeadStart);\r\n        this.head.element.addEventListener('touchstart', this.handleHeadStart);\r\n        this.scale.element.addEventListener('click', this.handleScaleClick);\r\n    }\r\n\r\n    private calcHeadStartPosition(value: number): number {\r\n        return (value - this.state.min) / (this.state.max - this.state.min);\r\n    }\r\n\r\n    private static getEvent(event: MouseEvent | TouchEvent): Touch | MouseEvent {\r\n        if (event instanceof TouchEvent) {\r\n            return event.touches[0];\r\n        }\r\n        return event;\r\n    }\r\n\r\n    private handleHeadStart = (e: MouseEvent | TouchEvent): Array<number> => {\r\n        const evt: MouseEvent | Touch = View.getEvent(e);\r\n        // Здесь нужен каст через 'as', так как TS не знает, что target это html объект\r\n        const target = evt.target as Element;\r\n        const updatedHead: string = target.hasAttribute('data-valueFrom') ? 'valueFrom' : 'valueTo';\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(target.getBoundingClientRect().left);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(target.getBoundingClientRect().top);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        this.handleSwipe = (event: MouseEvent | TouchEvent): Array<number> => {\r\n            return this.swipeAction(event, dataArray, updatedHead);\r\n        };\r\n        document.addEventListener('touchmove', this.handleSwipe, {passive: false});\r\n        document.addEventListener('mousemove', this.handleSwipe);\r\n        document.addEventListener('touchend', this.handleSwipeEnd);\r\n        document.addEventListener('mouseup', this.handleSwipeEnd);\r\n        return dataArray;\r\n    }\r\n\r\n    private swipeAction = (event: MouseEvent | TouchEvent, dataArray: Array<number>,\r\n        updatedHead: string):\r\n        Array<number> => {\r\n        event.preventDefault();\r\n        const evtSwipe: MouseEvent | Touch = View.getEvent(event);\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.getWidth);\r\n            dataArray.push(this.line.getLeftCoordinate);\r\n            dataArray.push(evtSwipe.clientX);\r\n        } else {\r\n            dataArray.push(this.line.getHeight);\r\n            dataArray.push(this.line.getTopCoordinate);\r\n            dataArray.push(evtSwipe.clientY);\r\n        }\r\n        dataArray.push(this.head.getWidth / 2);\r\n        this.notify({\r\n            valueArr: dataArray.slice(),\r\n            target: updatedHead,\r\n            onlyState: false\r\n        });\r\n        dataArray.splice(2, dataArray.length - 2);\r\n        return dataArray;\r\n    };\r\n\r\n    private handleSwipeEnd = (): boolean => {\r\n        document.removeEventListener('touchmove', this.handleSwipe);\r\n        document.removeEventListener('mousemove', this.handleSwipe);\r\n        document.removeEventListener('touchend', this.handleSwipeEnd);\r\n        document.removeEventListener('mouseup', this.handleSwipeEnd);\r\n        return true;\r\n    };\r\n\r\n    private handleScaleClick = (event: MouseEvent): Array<number> => {\r\n        const dataArray: Array<number> = this.scaleClickData(event);\r\n\r\n        this.notify({\r\n            target: 'value',\r\n            valueArr: dataArray.slice(),\r\n            onlyState: false\r\n        });\r\n        return dataArray;\r\n    }\r\n\r\n    private scaleClickData(event: MouseEvent | TouchEvent): Array<number> {\r\n        const evt: MouseEvent | Touch = View.getEvent(event);\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.getWidth);\r\n            dataArray.push(this.line.getLeftCoordinate);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(this.line.getHeight);\r\n            dataArray.push(this.line.getTopCoordinate);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        return dataArray;\r\n    }\r\n}\r\n\r\nexport {View};\r\n","import {Model} from './Model';\r\nimport {View} from './View';\r\n\r\nclass Presenter {\r\n    model: Model;\r\n\r\n    view: View;\r\n\r\n    constructor(elem: HTMLElement, model: Model, view: View) {\r\n        this.model = model;\r\n        this.view = view;\r\n        this.view.subscribe(this.model.updateState.bind(this.model));\r\n        this.view.subscribe(this.model.calcPosition.bind(this.model));\r\n        this.model.subscribe(this.view.updateState.bind(this.view));\r\n        this.model.subscribe(this.view.changePosition.bind(this.view));\r\n    }\r\n}\r\n\r\nexport {Presenter};\r\n","import {Observer} from './Observer';\r\nimport {State} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass Model extends Observer {\r\n    private elem: HTMLElement;\r\n\r\n    private readonly state: State;\r\n\r\n    constructor(elem: HTMLElement, options: State) {\r\n        super();\r\n        this.elem = elem;\r\n        this.state = Object.assign({}, options);\r\n    }\r\n\r\n    calcPosition(data: NotifyData): void {\r\n        if (data.onlyState) return;\r\n        let updatedValue: number;\r\n        let updatedProperty: string;\r\n        if (data.target === 'valueTo') {\r\n            updatedProperty = 'valueTo';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        } else if (data.target === 'value') {\r\n            updatedValue = this.calcUpdatedValueRelative(data);\r\n            if (this.state.type === 'single') {\r\n                updatedProperty = 'valueTo';\r\n            } else {\r\n                updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n            }\r\n            updatedValue = updatedProperty === 'valueFrom' ? this.validValueFrom(updatedValue) : this.validValueTo(updatedValue);\r\n        } else {\r\n            updatedProperty = 'valueFrom';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        }\r\n\r\n        this.updateState({\r\n            target: updatedProperty,\r\n            valueN: updatedValue,\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            target: updatedProperty,\r\n            valueN: updatedValue,\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(updatedValue, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            target: updatedProperty,\r\n            valueN: position,\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    set changeOrientation(value: string) {\r\n        this.updateState({\r\n            target: 'direction',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeType(value: string) {\r\n        this.updateState({\r\n            target: 'type',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n        if (this.state.min > this.state.valueFrom) {\r\n            this.changeFrom = this.state.min;\r\n        }\r\n        if (this.state.valueFrom > this.state.valueTo) {\r\n            this.changeFrom = this.state.valueTo;\r\n        }\r\n    }\r\n\r\n    set changeStep(value: number) {\r\n        const stepIsValid = (val: number, max: number, min: number): boolean => {\r\n            return val < max - min && val !== 0;\r\n        };\r\n        if (!stepIsValid(value, this.state.max, this.state.min)) throw new Error('Шаг не может быть больше разницы максимума и минимума или равен нулю');\r\n        this.state.step = value;\r\n    }\r\n\r\n    set changeMax(value: number) {\r\n        if (value < this.state.min || value <= this.state.valueFrom) {\r\n            throw new Error('Максимум не может быть меньше минимума');\r\n        }\r\n        this.updateState({\r\n            target: 'max',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        if (value < this.state.valueTo) {\r\n            this.changeTo = value;\r\n        }\r\n    }\r\n\r\n    get getMax(): number {\r\n        return this.state.max;\r\n    }\r\n\r\n    set changeMin(value: number) {\r\n        if (value > this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше максимума');\r\n        }\r\n        this.updateState({\r\n            target: 'min',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        if (this.state.type === 'double' && value > this.state.valueFrom) {\r\n            this.changeFrom = value;\r\n        }\r\n    }\r\n\r\n    get getMin(): number {\r\n        return this.state.min;\r\n    }\r\n\r\n    set changeTo(value: number) {\r\n        this.updateState({\r\n            target: 'valueTo',\r\n            valueN: this.validValueTo(value),\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            valueN: this.state.valueTo,\r\n            target: 'valueTo',\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(this.state.valueTo, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            valueN: position,\r\n            target: 'valueTo',\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    get getValueTo(): number {\r\n        return this.state.valueTo;\r\n    }\r\n\r\n    set changeFrom(value: number) {\r\n        if (this.state.type === 'single') return;\r\n        this.updateState({\r\n            target: 'valueFrom',\r\n            valueN: this.validValueFrom(value),\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            valueN: this.state.valueFrom,\r\n            target: 'valueFrom',\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(this.state.valueFrom, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            valueN: position,\r\n            target: 'valueFrom',\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    get getValueFrom(): number {\r\n        return this.state.valueFrom;\r\n    }\r\n\r\n    updateState(data: NotifyData): void {\r\n        if (!data.onlyState) return;\r\n        if (typeof this.state[data.target] === 'string') {\r\n            this.state[data.target] = data.valueS;\r\n        } else if (typeof this.state[data.target] === 'number') {\r\n            this.state[data.target] = data.valueN;\r\n        } else {\r\n            this.state[data.target] = data.valueB;\r\n        }\r\n    }\r\n\r\n    private static moreThan0LessThan1(value: number): number {\r\n        let newValue = value;\r\n        newValue = newValue > 1 ? 1 : newValue;\r\n        newValue = newValue < 0 ? 0 : newValue;\r\n        return newValue;\r\n    }\r\n\r\n    private static getValueRelative(value: number, min: number, max: number): number {\r\n        return (value - min) / (max - min);\r\n    }\r\n\r\n    private calcValue(value: number, updatedProperty = 'valueTo'): number {\r\n        let newValue: number = value;\r\n        newValue *= (this.state.max - this.state.min);\r\n        return this.state.min + this.calcValueByStep(newValue, updatedProperty);\r\n    }\r\n\r\n    private calcValueByStep(value: number, updatedProperty: string): number {\r\n        let newValue: number = value;\r\n        if (this.state.step === undefined) throw new Error('Значение step не определено');\r\n        const stepsInValue: number = newValue / this.state.step;\r\n        if (stepsInValue % 1 >= 0.5) {\r\n            newValue = this.state.step * Math.ceil(stepsInValue);\r\n        } else {\r\n            newValue = this.state.step * Math.floor(stepsInValue);\r\n        }\r\n        if (updatedProperty === 'valueTo') {\r\n            const maxSteps: number = (this.state.max - this.state.min) / this.state.step;\r\n            if (stepsInValue === maxSteps) {\r\n                newValue = this.state.max;\r\n            }\r\n        }\r\n        const popRes: string | undefined = this.state.step.toString()\r\n            .split('.')\r\n            .pop();\r\n        let accuracy = 0;\r\n        if (popRes !== undefined) {\r\n            accuracy = this.state.step.toString()\r\n                .includes('.') ? (popRes.length) : 0;\r\n        }\r\n        return Number(newValue.toFixed(accuracy));\r\n    }\r\n\r\n    private validValueTo(valueTo: number): number {\r\n        let value: number = valueTo;\r\n        if (this.state.type === 'single') {\r\n            if (value > this.state.max) {\r\n                value = this.state.max;\r\n            } else if (value < this.state.min) {\r\n                value = this.state.min;\r\n            }\r\n        } else if (this.state.type === 'double') {\r\n            if (value > this.state.max) {\r\n                value = this.state.max;\r\n            } else if (value <= this.state.valueFrom) {\r\n                value = this.state.valueFrom + this.state.step;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private validValueFrom(valueFrom: number): number {\r\n        let value: number = valueFrom;\r\n        if (this.state.type === 'single') {\r\n            value = 0;\r\n        } else if (this.state.type === 'double') {\r\n            if (value < this.state.min) {\r\n                value = this.state.min;\r\n            } else if (value >= this.state.valueTo) {\r\n                value = this.state.valueTo - this.state.step;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private calcUpdatedValue(data: NotifyData, updatedProperty: string): number {\r\n        let halfHeadWidth = 0;\r\n        if (data.valueArr !== undefined) {\r\n            halfHeadWidth = data.valueArr[5];\r\n        } else {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const lineParameter = data.valueArr[2];\r\n        const lineCoordinate = data.valueArr[3];\r\n        const HeadCoordinate = data.valueArr[0];\r\n        const shift = data.valueArr[1] - HeadCoordinate;\r\n        let newPosition = (data.valueArr[4] - shift - lineCoordinate + halfHeadWidth)\r\n            / lineParameter;\r\n        newPosition = Model.moreThan0LessThan1(newPosition);\r\n        const updatedValue = this.calcValue(newPosition, updatedProperty);\r\n        return updatedProperty === 'valueTo' ? this.validValueTo(updatedValue) : this.validValueFrom(updatedValue);\r\n    }\r\n\r\n    private calcUpdatedValueRelative(data: NotifyData): number {\r\n        if (data.valueArr === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const lineParameter = data.valueArr[0];\r\n        const lineCoordinate = data.valueArr[1];\r\n        let newPositionRelative = (data.valueArr[2] - lineCoordinate) / lineParameter;\r\n        newPositionRelative = Model.moreThan0LessThan1(newPositionRelative);\r\n        return this.calcValue(newPositionRelative);\r\n    }\r\n\r\n    private isValueTo = (updatedValue: number): boolean => (updatedValue - this.state.valueFrom)\r\n        / (this.state.valueTo - this.state.valueFrom) >= 0.5;\r\n}\r\n\r\nexport {Model};\r\n","import {View} from './View';\r\nimport {Presenter} from './Presenter';\r\nimport {Model} from './Model';\r\nimport {State} from './types/types';\r\n\r\nclass Slider {\r\n    view: View;\r\n\r\n    elem: HTMLElement;\r\n\r\n    presenter: Presenter;\r\n\r\n    model: Model;\r\n\r\n    constructor(elem: HTMLElement, settings: State) {\r\n        this.elem = elem;\r\n        this.model = new Model(this.elem, settings);\r\n        this.view = new View(this.elem, settings);\r\n        this.view.init();\r\n        this.presenter = new Presenter(this.elem, this.model, this.view);\r\n    }\r\n\r\n    hideBubble(): boolean {\r\n        this.view.hideBubble();\r\n        return true;\r\n    }\r\n\r\n    showBubble(): boolean {\r\n        this.view.showBubble();\r\n        return true;\r\n    }\r\n\r\n    changeOrientation(value: string): boolean {\r\n        this.view.changeOrientation = value;\r\n        this.model.changeOrientation = value;\r\n        return true;\r\n    }\r\n\r\n    changeType(value: string): boolean {\r\n        this.view.changeType = value;\r\n        this.model.changeType = value;\r\n        return true;\r\n    }\r\n\r\n    changeStep(value: number): boolean {\r\n        this.model.changeStep = value;\r\n        this.view.changeStep = value;\r\n        return true;\r\n    }\r\n\r\n    changeTo(value: number): boolean {\r\n        this.model.changeTo = value;\r\n        return true;\r\n    }\r\n\r\n    changeFrom(value: number): boolean {\r\n        this.model.changeFrom = value;\r\n        return true;\r\n    }\r\n\r\n    changeMax(value: number): boolean {\r\n        this.model.changeMax = value;\r\n        this.view.changeMax = value;\r\n        return true;\r\n    }\r\n\r\n    changeMin(value: number): boolean {\r\n        this.model.changeMin = value;\r\n        this.view.changeMin = value;\r\n        return true;\r\n    }\r\n\r\n    getMax(): number {\r\n        return this.model.getMax;\r\n    }\r\n\r\n    getMin(): number {\r\n        return this.model.getMin;\r\n    }\r\n\r\n    getValueTo(): number {\r\n        return this.model.getValueTo;\r\n    }\r\n\r\n    getValueFrom(): number {\r\n        return this.model.getValueFrom;\r\n    }\r\n}\r\n\r\nexport {Slider};\r\n","import {Slider} from './Slider';\r\n\r\n(function ($) {\r\n    const sliders = [];\r\n    const methods = {\r\n        init: function (options) {\r\n            const settings = $.extend({\r\n                bubble: true,\r\n                max: 100,\r\n                min: 0,\r\n                step: 1,\r\n                type: 'single',\r\n                valueTo: 100,\r\n                valueFrom: 5,\r\n                direction: 'horizontal',\r\n                onChangeTo: function () {\r\n                },\r\n                onChangeFrom: function () {\r\n                }\r\n            }, options);\r\n\r\n            return this.each(function () {\r\n                const ths = $(this);\r\n                if (settings.step > settings.max - settings.min || settings.step === 0) throw new Error('Шаг не может быть больше разницы максимума и минимума или равен нулю');\r\n                if (settings.valueTo > settings.max) throw new Error('Текущее значение не может быть больше максимума');\r\n                if (settings.valueFrom < settings.min) throw new Error('Текущее значение не может быть меньше минимума');\r\n                sliders.push(new Slider(ths[0], settings));\r\n            });\r\n        },\r\n        hideBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.hideBubble();\r\n        },\r\n        showBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.showBubble();\r\n        },\r\n        changeOrientation: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeOrientation(value);\r\n        },\r\n        changeType: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeType(value);\r\n        },\r\n        changeStep: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('step должно быть числом');\r\n            slider.changeStep(value);\r\n        },\r\n        changeTo: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueTo должно быть числом');\r\n            slider.changeTo(value);\r\n        },\r\n        changeFrom: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeFrom(value);\r\n        },\r\n        changeMax: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMax(value);\r\n        },\r\n        getMax: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMax();\r\n        },\r\n        getMin: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMin();\r\n        },\r\n        getValueTo: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueTo();\r\n        },\r\n        getValueFrom: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueFrom();\r\n        },\r\n        changeMin: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMin(value);\r\n        }\r\n\r\n    };\r\n    // eslint-disable-next-line no-param-reassign\r\n    $.fn.Slider = function (method) {\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n        if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n        $.error('Метод с именем ' + method + ' не существует для jQuery.slider');\r\n        return null;\r\n    };\r\n}(jQuery));\r\n","import './slider-template.scss';\r\nimport '../../slider/jquery.slider.js';\r\nimport {State} from '../../slider/types/types';\r\n\r\nclass SliderTemplate {\r\n    private readonly element: JQuery;\r\n\r\n    private $bubbleButton: JQuery;\r\n\r\n    private $verticalButton: JQuery;\r\n\r\n    private $rangeButton: JQuery;\r\n\r\n    private $stepInput: JQuery;\r\n\r\n    private $toInput: JQuery;\r\n\r\n    private $fromInput: JQuery;\r\n\r\n    private $maxInput: JQuery;\r\n\r\n    private $minInput: JQuery;\r\n\r\n    private slider: JQuery;\r\n\r\n    constructor(element: HTMLElement, settings: State) {\r\n        this.element = $(element);\r\n        this.$bubbleButton = $(this.element.find('input[data-type=\"bubble\"]'));\r\n        this.$verticalButton = $(this.element.find('input[data-type=\"vertical\"]'));\r\n        this.$rangeButton = $(this.element.find('input[data-type=\"range\"]'));\r\n        this.$stepInput = $(this.element.find('input[data-type=\"step\"]'));\r\n        this.$toInput = $(this.element.find('input[data-type=\"to\"]'));\r\n        this.$fromInput = $(this.element.find('input[data-type=\"from\"]'));\r\n        this.$maxInput = $(this.element.find('input[data-type=\"max\"]'));\r\n        this.$minInput = $(this.element.find('input[data-type=\"min\"]'));\r\n        const options = Object.assign(settings, {\r\n            onChangeTo: (value: number) => {\r\n                this.$toInput.val(value);\r\n            },\r\n            onChangeFrom: (value: number) => {\r\n                this.$fromInput.val(value);\r\n            }\r\n        });\r\n        this.slider = $(this.element.find('.slider'))\r\n            .Slider(options);\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.$bubbleButton.on('click', this.handleBubbleButtonClick);\r\n        this.$verticalButton.on('click', this.handleVerticalButtonClick);\r\n        this.$rangeButton.on('click', this.handleRangeButton);\r\n        if (!this.$rangeButton.is(':checked')) {\r\n            this.$fromInput.parent().addClass('slider-template__label_hide');\r\n        }\r\n        this.$stepInput.on('change', this.handleStepInputChange);\r\n        this.$toInput.on('change', this.handleToInputChange);\r\n        this.$toInput.val(String(this.slider.Slider('getValueTo')));\r\n        this.$fromInput.on('change', this.handleFromInputChange);\r\n        this.$fromInput.val(String(this.slider.Slider('getValueFrom')));\r\n        this.$maxInput.on('change', this.handleMaxInputChange);\r\n        this.$maxInput.val(String(this.slider.Slider('getMax')));\r\n        this.$minInput.on('change', this.handleMinInputChange);\r\n        this.$minInput.val(String(this.slider.Slider('getMin')));\r\n    }\r\n\r\n    handleBubbleButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider.Slider('showBubble') : this.slider.Slider('hideBubble');\r\n    };\r\n\r\n    handleVerticalButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider.Slider('changeOrientation', 'vertical') : this.slider.Slider('changeOrientation', 'horizontal');\r\n    };\r\n\r\n    handleRangeButton = (e: JQuery.ClickEvent): void => {\r\n        if (e.target.checked) {\r\n            this.slider.Slider('changeType', 'double');\r\n            this.$fromInput.parent().removeClass('slider-template__label_hide');\r\n        } else {\r\n            this.slider.Slider('changeType', 'single');\r\n            this.$fromInput.parent().addClass('slider-template__label_hide');\r\n        }\r\n    };\r\n\r\n    handleStepInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider.Slider('changeStep', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleToInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider.Slider('changeTo', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleFromInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider.Slider('changeFrom', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleMaxInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider.Slider('changeMax', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleMinInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider.Slider('changeMin', parseFloat(e.target.value));\r\n    };\r\n}\r\n\r\nexport default SliderTemplate;\r\n","import './index.scss';\r\nimport '../blocks/slider-block/slider-block.scss';\r\nimport '../slider/jquery.slider';\r\nimport '../blocks/slider-template/slider-template';\r\nimport SliderTemplate from '../blocks/slider-template/slider-template';\r\n\r\n$(function () {\r\n    const settings = [\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 100,\r\n            min: 0,\r\n            step: 1,\r\n            type: 'double',\r\n            valueTo: 100,\r\n            valueFrom: 0,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: false,\r\n            direction: 'vertical',\r\n            max: 90,\r\n            min: 5,\r\n            step: 2,\r\n            type: 'single',\r\n            valueTo: 50,\r\n            valueFrom: 15,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 1000,\r\n            min: -100,\r\n            step: 30,\r\n            type: 'single',\r\n            valueTo: 780,\r\n            valueFrom: -5,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        }\r\n    ];\r\n    $('.slider-template')\r\n        .each((index, element) => {\r\n            // eslint-disable-next-line no-new\r\n            new SliderTemplate(element, settings[index]);\r\n        });\r\n});\r\n"],"names":["Observer","this","observers","subscribe","observer","push","unsubscribe","filter","x","notify","data","forEach","$7f7f88587dcc82e7$export$2e2bcd8739ae039","parent","element","document","createElement","classList","add","setAttribute","append","update","value","textContent","String","show","hide","remove","$443d33087eac4543$export$2e2bcd8739ae039","direction","bubbleValue","bubble","HeadBubble","updatePosition","updateBubble","removeHead","newPos","style","left","top","showBubble","hideBubble","getWidth","getBoundingClientRect","width","getHeight","height","$0107047da07a407d$export$2e2bcd8739ae039","min","max","init","step","i","insertAdjacentHTML","numbers","querySelectorAll","number","length","innerHTML","dashValue","Number","isInteger","toFixed","removeScale","getLeftCoordinate","getTopCoordinate","$790a1a2e6b71ddca$export$2e2bcd8739ae039","type","progressBar","setType","progressValue","To","From","undefined","parseInt","removeLine","View","elem","options","super","handleHeadStart","e","evt","getEvent","target","updatedHead","hasAttribute","dataArray","state","clientX","clientY","handleSwipe","event","swipeAction","addEventListener","passive","handleSwipeEnd","preventDefault","evtSwipe","line","head","valueArr","slice","onlyState","splice","removeEventListener","handleScaleClick","scaleClickData","Object","assign","Line","scale","Scale","headStartPos","calcHeadStartPosition","valueTo","ViewHead","head2StartPos","valueFrom","head2","setup","changePosition","position","valueN","Error","onChangeTo","onChangeFrom","updateState","valueB","changeOrientation","valueS","reInit","changeType","changeStep","changeMax","changeMin","TouchEvent","touches","Presenter","model","view","bind","calcPosition","Model","isValueTo","updatedValue","updatedProperty","calcUpdatedValue","calcUpdatedValueRelative","validValueFrom","validValueTo","getValueRelative","moreThan0LessThan1","changeFrom","val","changeTo","getMax","getMin","getValueTo","getValueFrom","newValue","calcValue","calcValueByStep","stepsInValue","Math","ceil","floor","popRes","toString","split","pop","accuracy","includes","halfHeadWidth","lineParameter","lineCoordinate","HeadCoordinate","shift","newPosition","newPositionRelative","Slider","settings","presenter","$","sliders","methods","extend","each","ths","slider","isNaN","fn","method","apply","Array","prototype","call","arguments","error","jQuery","$ac628bb2660317a7$export$2e2bcd8739ae039","handleBubbleButtonClick","checked","handleVerticalButtonClick","handleRangeButton","$fromInput","removeClass","addClass","handleStepInputChange","parseFloat","handleToInputChange","handleFromInputChange","handleMaxInputChange","handleMinInputChange","$bubbleButton","find","$verticalButton","$rangeButton","$stepInput","$toInput","$maxInput","$minInput","on","is","index","SliderTemplate"],"version":3,"file":"index.b910964c.js.map"}