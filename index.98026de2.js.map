{"mappings":"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","sources":["slider/Observer.ts","slider/subView/HeadBubble.ts","slider/subView/ViewHead.ts","slider/subView/Scale.ts","slider/subView/Line.ts","slider/View.ts","slider/Presenter.ts","slider/Model.ts","slider/Slider.ts","slider/jquery.slider.js","index/index.ts"],"sourcesContent":["import {notifyData} from './types/types';\r\n\r\nclass Observer {\r\n    observers: Array<(data: notifyData) => void>\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    subscribe(observer: (data: notifyData) => void): void {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    unsubscribe(observer: (data: notifyData) => void): void {\r\n        this.observers = this.observers.filter((x) => x !== observer);\r\n    }\r\n\r\n    notify(data: notifyData): void {\r\n        this.observers.forEach((x) => x(data));\r\n    }\r\n}\r\n\r\nexport {Observer};\r\n","class HeadBubble {\r\n    element: HTMLElement\r\n\r\n    constructor() {\r\n        this.element = document.createElement('span');\r\n        this.element.classList.add('slider__head-bubble');\r\n        this.element.setAttribute('data-type', 'bubble');\r\n    }\r\n}\r\n\r\nexport default HeadBubble;\r\n","import HeadBubble from './HeadBubble';\r\n\r\nclass ViewHead {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    template: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    bubble: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement, direction: string,\r\n        value: number, bubbleValue: number) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.bubble = (new HeadBubble()).element;\r\n        this.template = this.direction === 'horizontal'\r\n            ? `<div class='slider__head'>\r\n            </div>`\r\n            : `<div class='slider__head slider__head_vertical'>\r\n            </div>`;\r\n        this.parent.insertAdjacentHTML('afterbegin', this.template);\r\n        // Здесь приведение через \"as\" оправдано, так как элемент точно создается строчкой выше\r\n        this.element = this.parent.querySelector('.slider__head') as HTMLElement;\r\n        this.element.append(this.bubble);\r\n        this.updatePosition(value);\r\n        this.updateBubble(bubbleValue);\r\n    }\r\n\r\n    removeHead(): boolean {\r\n        this.element.remove();\r\n        return true;\r\n    }\r\n\r\n    updatePosition(newPos: number): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.style.left = `${newPos * 100}%`;\r\n        } else {\r\n            this.element.style.top = `${newPos * 100}%`;\r\n        }\r\n    }\r\n\r\n    updateBubble(value: number): boolean {\r\n        if (this.bubble) {\r\n            this.bubble.innerHTML = String(value);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.bubble.style.display = 'block';\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.bubble.style.display = 'none';\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n}\r\n\r\nexport default ViewHead;\r\n","class Scale {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    template: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement, direction: string, min: number, max: number) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.template = this.direction === 'horizontal'\r\n            ? '<div class=\"slider__scale\"></div>'\r\n            : '<div class=\"slider__scale slider__scale_vertical\"></div>';\r\n        this.parent.insertAdjacentHTML('beforeend', this.template);\r\n        // Здесь приведение через \"as\" оправдано, так как элемент точно создается строчкой выше\r\n        this.element = this.parent.querySelector('.slider__scale') as HTMLElement;\r\n        this.init(min, max);\r\n    }\r\n\r\n    init(min: number, max: number): void {\r\n        const step = (max - min) / 4;\r\n        for (let i = 0; i <= 100; i += 5) {\r\n            if (i % 25 === 0) {\r\n                if (this.direction === 'horizontal') {\r\n                    this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash' style='left: ${i}%;'></div><div class='slider__scale-number' style='left: ${i}%;'></div>`);\r\n                } else {\r\n                    this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash slider__dash_vertical' style='top: ${i}%;'></div><div class='slider__scale-number slider__scale-number_vertical' style='top: ${i}%;'></div>`);\r\n                }\r\n                const numbers = this.element.querySelectorAll('.slider__scale-number');\r\n                const number = numbers[numbers.length - 1];\r\n\r\n                i === 0\r\n                    ? number.innerHTML = String(min)\r\n                    : number.innerHTML = String(min + (i / 25) * step);\r\n            } else if (this.direction === 'horizontal') {\r\n                this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash slider__dash_small' style='left: ${i}%;'></div>`);\r\n            } else {\r\n                this.element.insertAdjacentHTML('beforeend', `<div class='slider__dash slider__dash_small-vertical' style='top: ${i}%;'></div>`);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeScale(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getLeftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get getTopCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Scale;\r\n","class Line {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    template: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    progressBar: HTMLElement;\r\n\r\n    type: string;\r\n\r\n    constructor(parent: HTMLElement, direction: string, type: string) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.type = type;\r\n        this.template = this.direction === 'horizontal' ? '<div class=\"slider__line\"><span class=\"slider__line-progress\"></span></div>' : '<div class=\"slider__line slider__line_vertical\"><span class=\"slider__line-progress slider__line-progress_vertical\"></span></div>';\r\n        this.parent.insertAdjacentHTML('beforeend', this.template);\r\n        // Здесь приведение через \"as\" оправдано, так как элемент точно создается строчкой выше\r\n        this.element = this.parent.querySelector('.slider__line') as HTMLElement;\r\n        this.progressBar = this.element.querySelector('.slider__line-progress') as HTMLElement;\r\n    }\r\n\r\n    set setType(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    progressValue(To: HTMLElement, From: HTMLElement | undefined): void {\r\n        if (this.direction === 'horizontal') {\r\n            if (this.type === 'single') {\r\n                this.progressBar.style.width = To.style.left;\r\n            } else if (From !== undefined) {\r\n                this.progressBar.style.width = `${parseInt(To.style.left, 10) - parseInt(From.style.left, 10)}%`;\r\n                this.progressBar.style.left = From.style.left;\r\n            }\r\n        } else if (this.type === 'single') {\r\n            this.progressBar.style.height = To.style.top;\r\n        } else if (From !== undefined) {\r\n            this.progressBar.style.height = `${parseInt(To.style.top, 10) - parseInt(From.style.top, 10)}%`;\r\n            this.progressBar.style.top = From.style.top;\r\n        }\r\n    }\r\n\r\n    removeLine(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get getWidth(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get getLeftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get getHeight(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get getTopCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import {Observer} from './Observer';\r\nimport ViewHead from './subView/ViewHead';\r\nimport Scale from './subView/Scale';\r\nimport Line from './subView/Line';\r\nimport {state} from './types/types';\r\nimport {notifyData} from './types/types';\r\n\r\nclass View extends Observer {\r\n    private readonly elem: HTMLElement;\r\n\r\n    private readonly state: state;\r\n\r\n    head: ViewHead;\r\n\r\n    scale: Scale;\r\n\r\n    line: Line;\r\n\r\n    head2?: ViewHead;\r\n\r\n    private handleSwipe: (event: (MouseEvent | TouchEvent)) => Array<number>;\r\n\r\n    constructor(elem: HTMLElement, options: state) {\r\n        super();\r\n        this.elem = elem;\r\n        this.handleSwipe = () => [];\r\n        this.state = Object.assign({}, options);\r\n        this.line = new Line(this.elem, this.state.direction, this.state.type);\r\n        this.scale = new Scale(this.line.element,\r\n            this.state.direction, this.state.min, this.state.max);\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead(this.line.element,\r\n            this.state.direction, headStartPos, this.state.valueTo);\r\n    }\r\n\r\n    init(): void {\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead(this.line.element,\r\n                this.state.direction, head2StartPos, this.state.valueFrom);\r\n            this.head2.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double') {\r\n                if (this.head2 !== undefined) {\r\n                    this.head2.showBubble();\r\n                }\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.setup();\r\n    }\r\n\r\n    changePosition(data: notifyData): void {\r\n        if (data.onlyState) return;\r\n        let position = 0;\r\n        if (data.valueN !== undefined) {\r\n            position = data.valueN;\r\n        } else {\r\n            throw new Error('Новое значение не определено');\r\n        }\r\n        if (data.target === 'valueTo') {\r\n            this.head.updatePosition(position);\r\n            this.head.updateBubble(this.state.valueTo);\r\n            this.state.onChangeTo(this.state.valueTo);\r\n            this.line.progressValue(this.head.element, this.head2?.element);\r\n        } else if (data.target === 'valueFrom') {\r\n            if (this.head2 !== undefined) {\r\n                this.head2.updatePosition(position);\r\n                this.head2.updateBubble(this.state.valueFrom);\r\n                this.state.onChangeFrom(this.state.valueFrom);\r\n                this.line.progressValue(this.head.element, this.head2.element);\r\n            } else {\r\n                throw new Error('Head2 не существует');\r\n            }\r\n        }\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.updateState({\r\n            target: 'bubble',\r\n            valueB: false,\r\n            onlyState: true\r\n        });\r\n        this.head.hideBubble();\r\n        this.head2?.hideBubble();\r\n        this.notify({\r\n            target: 'bubble',\r\n            valueB: false,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.updateState({\r\n            target: 'bubble',\r\n            valueB: true,\r\n            onlyState: true\r\n        });\r\n        this.head.showBubble();\r\n        this.head2?.showBubble();\r\n        this.notify({\r\n            target: 'bubble',\r\n            valueB: true,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeOrientation(value: string) {\r\n        this.updateState({\r\n            target: 'direction',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n        this.notify({\r\n            target: 'direction',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeType(value: string) {\r\n        this.updateState({\r\n            target: 'type',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        delete this.head2;\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n        this.notify({\r\n            target: 'type',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeStep(value: number) {\r\n        if (value > this.state.max - this.state.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n        this.state.step = value;\r\n    }\r\n\r\n    set changeMax(value: number) {\r\n        if (value < this.state.min || value <= this.state.valueFrom) {\r\n            throw new Error('Максимум не может быть меньше минимума');\r\n        }\r\n        this.updateState({\r\n            target: 'max',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    set changeMin(value: number) {\r\n        if (value > this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше максимума');\r\n        }\r\n        this.updateState({\r\n            target: 'min',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    updateState(data: notifyData): void {\r\n        if (!data.onlyState) return;\r\n        if (typeof this.state[data.target] === 'string') {\r\n            this.state[data.target] = data.valueS;\r\n        } else if (typeof this.state[data.target] === 'number') {\r\n            this.state[data.target] = data.valueN;\r\n        } else {\r\n            this.state[data.target] = data.valueB;\r\n        }\r\n    }\r\n\r\n    private reInit(): void {\r\n        this.line = new Line(this.elem, this.state.direction, this.state.type);\r\n        this.scale = new Scale(this.line.element,\r\n            this.state.direction, this.state.min, this.state.max);\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead(this.line.element,\r\n                this.state.direction, head2StartPos, this.state.valueFrom);\r\n            this.head2.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead(this.line.element,\r\n            this.state.direction, headStartPos, this.state.valueTo);\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double') {\r\n                if (this.head2 !== undefined) {\r\n                    this.head2.showBubble();\r\n                }\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.setup();\r\n    }\r\n\r\n    private setup(): void {\r\n        if (this.state.type === 'double') {\r\n            if (this.head2 !== undefined) {\r\n                this.head2.element.addEventListener('mousedown', this.handleHeadStart);\r\n                this.head2.element.addEventListener('touchstart', this.handleHeadStart);\r\n            } else {\r\n                throw new Error('Head2 не существует');\r\n            }\r\n        }\r\n        this.head.element.addEventListener('mousedown', this.handleHeadStart);\r\n        this.head.element.addEventListener('touchstart', this.handleHeadStart);\r\n        this.scale.element.addEventListener('click', this.handleScaleClick);\r\n    }\r\n\r\n    private calcHeadStartPosition(value: number): number {\r\n        return (value - this.state.min) / (this.state.max - this.state.min);\r\n    }\r\n\r\n    private static getEvent(event: MouseEvent | TouchEvent): Touch | MouseEvent {\r\n        if (event instanceof TouchEvent) {\r\n            return event.touches[0];\r\n        }\r\n        return event;\r\n    }\r\n\r\n    private handleHeadStart = (e: MouseEvent | TouchEvent): Array<number> => {\r\n        const evt: MouseEvent | Touch = View.getEvent(e);\r\n        // Здесь нужен каст через 'as', так как TS не знает, что target это html объект\r\n        const target = evt.target as Element;\r\n        const updatedHead: string = target.hasAttribute('data-valueFrom') ? 'valueFrom' : 'valueTo';\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(target.getBoundingClientRect().left);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(target.getBoundingClientRect().top);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        this.handleSwipe = (event: MouseEvent | TouchEvent): Array<number> => {\r\n            return this.swipeAction(event, dataArray, updatedHead);\r\n        };\r\n        document.addEventListener('touchmove', this.handleSwipe, {passive: false});\r\n        document.addEventListener('mousemove', this.handleSwipe);\r\n        document.addEventListener('touchend', this.handleSwipeEnd);\r\n        document.addEventListener('mouseup', this.handleSwipeEnd);\r\n        return dataArray;\r\n    }\r\n\r\n    private swipeAction = (event: MouseEvent | TouchEvent, dataArray: Array<number>,\r\n        updatedHead: string):\r\n        Array<number> => {\r\n        event.preventDefault();\r\n        const evtSwipe: MouseEvent | Touch = View.getEvent(event);\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.getWidth);\r\n            dataArray.push(this.line.getLeftCoordinate);\r\n            dataArray.push(evtSwipe.clientX);\r\n        } else {\r\n            dataArray.push(this.line.getHeight);\r\n            dataArray.push(this.line.getTopCoordinate);\r\n            dataArray.push(evtSwipe.clientY);\r\n        }\r\n        dataArray.push(this.head.getWidth / 2);\r\n        this.notify({\r\n            valueArr: dataArray.slice(),\r\n            target: updatedHead,\r\n            onlyState: false\r\n        });\r\n        dataArray.splice(2, dataArray.length - 2);\r\n        return dataArray;\r\n    };\r\n\r\n    private handleSwipeEnd = (): boolean => {\r\n        document.removeEventListener('touchmove', this.handleSwipe);\r\n        document.removeEventListener('mousemove', this.handleSwipe);\r\n        document.removeEventListener('touchend', this.handleSwipeEnd);\r\n        document.removeEventListener('mouseup', this.handleSwipeEnd);\r\n        return true;\r\n    };\r\n\r\n    private handleScaleClick = (event: MouseEvent): Array<number> => {\r\n        const dataArray: Array<number> = this.scaleClickData(event);\r\n\r\n        this.notify({\r\n            target: 'value',\r\n            valueArr: dataArray.slice(),\r\n            onlyState: false\r\n        });\r\n        return dataArray;\r\n    }\r\n\r\n    private scaleClickData(event: MouseEvent | TouchEvent): Array<number> {\r\n        const evt: MouseEvent | Touch = View.getEvent(event);\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.getWidth);\r\n            dataArray.push(this.line.getLeftCoordinate);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(this.line.getHeight);\r\n            dataArray.push(this.line.getTopCoordinate);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        return dataArray;\r\n    }\r\n}\r\n\r\nexport {View};\r\n","import {Model} from './Model';\r\nimport {View} from './View';\r\n\r\nclass Presenter {\r\n    model: Model;\r\n\r\n    view: View;\r\n\r\n    constructor(elem: HTMLElement, model: Model, view: View) {\r\n        this.model = model;\r\n        this.view = view;\r\n        this.view.subscribe(this.model.updateState.bind(this.model));\r\n        this.view.subscribe(this.model.calcPosition.bind(this.model));\r\n        this.model.subscribe(this.view.updateState.bind(this.view));\r\n        this.model.subscribe(this.view.changePosition.bind(this.view));\r\n    }\r\n}\r\n\r\nexport {Presenter};\r\n","import {Observer} from './Observer';\r\nimport {state} from './types/types';\r\nimport {notifyData} from './types/types';\r\n\r\nclass Model extends Observer {\r\n    private elem: HTMLElement;\r\n\r\n    private readonly state: state;\r\n\r\n    constructor(elem: HTMLElement, options: state) {\r\n        super();\r\n        this.elem = elem;\r\n        this.state = Object.assign({}, options);\r\n    }\r\n\r\n    calcPosition(data: notifyData): void {\r\n        if (data.onlyState) return;\r\n        let updatedValue: number;\r\n        let updatedProperty: string;\r\n        if (data.target === 'valueTo') {\r\n            updatedProperty = 'valueTo';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        } else if (data.target === 'value') {\r\n            updatedValue = this.calcUpdatedValueRelative(data);\r\n            if (this.state.type === 'single') {\r\n                updatedProperty = 'valueTo';\r\n            } else {\r\n                updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n            }\r\n            updatedValue = updatedProperty === 'valueFrom' ? this.validValueFrom(updatedValue) : this.validValueTo(updatedValue);\r\n        } else {\r\n            updatedProperty = 'valueFrom';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        }\r\n\r\n        this.updateState({\r\n            target: updatedProperty,\r\n            valueN: updatedValue,\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            target: updatedProperty,\r\n            valueN: updatedValue,\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(updatedValue, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            target: updatedProperty,\r\n            valueN: position,\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    set changeOrientation(value: string) {\r\n        this.updateState({\r\n            target: 'direction',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeType(value: string) {\r\n        if (this.state.min > this.state.valueFrom) {\r\n            this.changeFrom = this.state.min;\r\n        }\r\n        if (this.state.valueFrom > this.state.valueTo) {\r\n            this.changeFrom = this.state.valueTo;\r\n        }\r\n        this.updateState({\r\n            target: 'type',\r\n            valueS: value,\r\n            onlyState: true\r\n        });\r\n    }\r\n\r\n    set changeStep(value: number) {\r\n        if (value > this.state.max - this.state.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n        this.state.step = value;\r\n    }\r\n\r\n    set changeMax(value: number) {\r\n        if (value < this.state.min || value <= this.state.valueFrom) {\r\n            throw new Error('Максимум не может быть меньше минимума');\r\n        }\r\n        this.updateState({\r\n            target: 'max',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        if (value < this.state.valueTo) {\r\n            this.changeTo = value;\r\n        }\r\n    }\r\n\r\n    set changeMin(value: number) {\r\n        if (value > this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше максимума');\r\n        }\r\n        this.updateState({\r\n            target: 'min',\r\n            valueN: value,\r\n            onlyState: true\r\n        });\r\n        if (this.state.type === 'double' && value > this.state.valueFrom) {\r\n            this.changeFrom = value;\r\n        }\r\n    }\r\n\r\n    set changeTo(value: number) {\r\n        this.updateState({\r\n            target: 'valueTo',\r\n            valueN: this.validValueTo(value),\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            valueN: this.state.valueTo,\r\n            target: 'valueTo',\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(value, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            valueN: position,\r\n            target: 'valueTo',\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    set changeFrom(value: number) {\r\n        if (this.state.type === 'single') return;\r\n        this.updateState({\r\n            target: 'valueFrom',\r\n            valueN: this.validValueFrom(value),\r\n            onlyState: true\r\n        });\r\n        this.notify({\r\n            valueN: this.state.valueFrom,\r\n            target: 'valueFrom',\r\n            onlyState: true\r\n        });\r\n        let position = Model.getValueRelative(value, this.state.min, this.state.max);\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify({\r\n            valueN: position,\r\n            target: 'valueFrom',\r\n            onlyState: false\r\n        });\r\n    }\r\n\r\n    updateState(data: notifyData): void {\r\n        if (!data.onlyState) return;\r\n        if (typeof this.state[data.target] === 'string') {\r\n            this.state[data.target] = data.valueS;\r\n        } else if (typeof this.state[data.target] === 'number') {\r\n            this.state[data.target] = data.valueN;\r\n        } else {\r\n            this.state[data.target] = data.valueB;\r\n        }\r\n    }\r\n\r\n    private static moreThan0LessThan1(value: number): number {\r\n        let newValue = value;\r\n        newValue = newValue > 1 ? 1 : newValue;\r\n        newValue = newValue < 0 ? 0 : newValue;\r\n        return newValue;\r\n    }\r\n\r\n    private static getValueRelative(value: number, min: number, max: number): number {\r\n        return (value - min) / (max - min);\r\n    }\r\n\r\n    private calcValue(value: number): number {\r\n        let newValue: number = value;\r\n        newValue *= (this.state.max - this.state.min);\r\n\r\n        return this.state.min + this.calcValueByStep(newValue);\r\n    }\r\n\r\n    private calcValueByStep(value: number): number {\r\n        let newValue: number = value;\r\n        if (this.state.step === undefined) throw new Error('Значение step не определено');\r\n        const stepsInValue: number = newValue / this.state.step;\r\n        if (stepsInValue % 1 >= 0.5) {\r\n            newValue = this.state.step * Math.ceil(stepsInValue);\r\n        } else {\r\n            newValue = this.state.step * Math.floor(stepsInValue);\r\n        }\r\n        const popRes: string | undefined = this.state.step.toString()\r\n            .split('.')\r\n            .pop();\r\n        let accuracy = 0;\r\n        if (popRes !== undefined) {\r\n            accuracy = this.state.step.toString()\r\n                .includes('.') ? (popRes.length) : 0;\r\n        }\r\n        return Number(newValue.toFixed(accuracy));\r\n    }\r\n\r\n    private validValueTo(valueTo: number): number {\r\n        let value: number = valueTo;\r\n\r\n        if (this.state.type === 'single') {\r\n            if (value > this.state.max) {\r\n                value = this.state.max;\r\n            } else if (value < this.state.min) {\r\n                value = this.state.min;\r\n            }\r\n        } else if (this.state.type === 'double') {\r\n            if (value > this.state.max) {\r\n                value = this.state.max;\r\n            } else if (value <= this.state.valueFrom) {\r\n                value = this.state.valueFrom + this.state.step;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private validValueFrom(valueFrom: number): number {\r\n        let value: number = valueFrom;\r\n        if (this.state.type === 'single') {\r\n            value = 0;\r\n        } else if (this.state.type === 'double') {\r\n            if (value < this.state.min) {\r\n                value = this.state.min;\r\n            } else if (value >= this.state.valueTo) {\r\n                value = this.state.valueTo - this.state.step;\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    private calcUpdatedValue(data: notifyData, updatedProperty: string): number {\r\n        let halfHeadWidth = 0;\r\n        if (data.valueArr !== undefined) {\r\n            halfHeadWidth = data.valueArr[5];\r\n        } else {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const lineParameter = data.valueArr[2];\r\n        const lineCoordinate = data.valueArr[3];\r\n        const HeadCoordinate = data.valueArr[0];\r\n        const shift = data.valueArr[1] - HeadCoordinate;\r\n        let newPosition = (data.valueArr[4] - shift - lineCoordinate + halfHeadWidth)\r\n            / lineParameter;\r\n        newPosition = Model.moreThan0LessThan1(newPosition);\r\n        const updatedValue = this.calcValue(newPosition);\r\n        return updatedProperty === 'valueTo' ? this.validValueTo(updatedValue) : this.validValueFrom(updatedValue);\r\n    }\r\n\r\n    private calcUpdatedValueRelative(data: notifyData): number {\r\n        if (data.valueArr === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const lineParameter = data.valueArr[0];\r\n        const lineCoordinate = data.valueArr[1];\r\n        let newPositionRelative = (data.valueArr[2] - lineCoordinate) / lineParameter;\r\n        newPositionRelative = Model.moreThan0LessThan1(newPositionRelative);\r\n        return this.calcValue(newPositionRelative);\r\n    }\r\n\r\n    private isValueTo = (updatedValue: number): boolean => (updatedValue - this.state.valueFrom)\r\n        / (this.state.valueTo - this.state.valueFrom) >= 0.5;\r\n}\r\n\r\nexport {Model};\r\n","import {View} from './View';\r\nimport {Presenter} from './Presenter';\r\nimport {Model} from './Model';\r\nimport {state} from './types/types';\r\n\r\nclass Slider {\r\n    view: View;\r\n\r\n    elem: HTMLElement;\r\n\r\n    presenter: Presenter;\r\n\r\n    model: Model;\r\n\r\n    constructor(elem: HTMLElement, settings: state) {\r\n        this.elem = elem;\r\n        this.model = new Model(this.elem, settings);\r\n        this.view = new View(this.elem, settings);\r\n        this.view.init();\r\n        this.presenter = new Presenter(this.elem, this.model, this.view);\r\n    }\r\n\r\n    hideBubble(): boolean {\r\n        this.view.hideBubble();\r\n        return true;\r\n    }\r\n\r\n    showBubble(): boolean {\r\n        this.view.showBubble();\r\n        return true;\r\n    }\r\n\r\n    changeOrientation(value: string): boolean {\r\n        this.view.changeOrientation = value;\r\n        this.model.changeOrientation = value;\r\n        return true;\r\n    }\r\n\r\n    changeType(value: string): boolean {\r\n        this.view.changeType = value;\r\n        this.model.changeType = value;\r\n        return true;\r\n    }\r\n\r\n    changeStep(value: number): boolean {\r\n        this.model.changeStep = value;\r\n        this.view.changeStep = value;\r\n        return true;\r\n    }\r\n\r\n    changeTo(value: number): boolean {\r\n        this.model.changeTo = value;\r\n        return true;\r\n    }\r\n\r\n    changeFrom(value: number): boolean {\r\n        this.model.changeFrom = value;\r\n        return true;\r\n    }\r\n\r\n    changeMax(value: number): boolean {\r\n        this.model.changeMax = value;\r\n        this.view.changeMax = value;\r\n        return true;\r\n    }\r\n\r\n    changeMin(value: number): boolean {\r\n        this.model.changeMin = value;\r\n        this.view.changeMin = value;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport {Slider};\r\n","import {Slider} from './Slider';\r\n\r\n(function ($) {\r\n    const sliders = [];\r\n    const methods = {\r\n        init: function (options) {\r\n            const settings = $.extend({\r\n                bubble: true,\r\n                max: 100,\r\n                min: 0,\r\n                step: 1,\r\n                type: 'single',\r\n                valueTo: 100,\r\n                valueFrom: 5,\r\n                direction: 'horizontal',\r\n                onChangeTo: function () {\r\n                },\r\n                onChangeFrom: function () {\r\n                }\r\n            }, options);\r\n\r\n            return this.each(function () {\r\n                const ths = $(this);\r\n                if (settings.step > settings.max - settings.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n                if (settings.valueTo > settings.max) throw new Error('Текущее значение не может быть больше максимума');\r\n                if (settings.valueFrom < settings.min) throw new Error('Текущее значение не может быть меньше минимума');\r\n                sliders.push(new Slider(ths[0], settings));\r\n            });\r\n        },\r\n        hideBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.hideBubble();\r\n        },\r\n        showBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.showBubble();\r\n        },\r\n        changeOrientation: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeOrientation(value);\r\n        },\r\n        changeType: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeType(value);\r\n        },\r\n        changeStep: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('step должно быть числом');\r\n            slider.changeStep(value);\r\n        },\r\n        changeTo: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueTo должно быть числом');\r\n            slider.changeTo(value);\r\n        },\r\n        changeFrom: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeFrom(value);\r\n        },\r\n        changeMax: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMax(value);\r\n        },\r\n        changeMin: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMin(value);\r\n        }\r\n\r\n    };\r\n    // eslint-disable-next-line no-param-reassign\r\n    $.fn.Slider = function (method) {\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n        if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n        $.error('Метод с именем ' + method + ' не существует для jQuery.slider');\r\n        return null;\r\n    };\r\n}(jQuery));\r\n","import './index.scss';\r\nimport '../blocks/slider/slider.scss';\r\nimport '../blocks/slider-template/slider-template.scss';\r\nimport '../slider/jquery.slider';\r\n\r\n$(function () {\r\n    const $bubbleButton = $('input[data-type=\"bubble\"]');\r\n    const $verticalButton = $('input[data-type=\"vertical\"]');\r\n    const $rangeButton = $('input[data-type=\"range\"]');\r\n    const $stepInput = $('input[data-type=\"step\"]');\r\n    const $toInput = $('input[data-type=\"to\"]');\r\n    const $fromInput = $('input[data-type=\"from\"]');\r\n    const $maxInput = $('input[data-type=\"max\"]');\r\n    const $minInput = $('input[data-type=\"min\"]');\r\n    const slider1 = $('#slider').Slider({\r\n        bubble: true,\r\n        direction: 'horizontal',\r\n        max: 100,\r\n        min: 0,\r\n        step: 1,\r\n        type: 'double',\r\n        valueTo: 100,\r\n        valueFrom: 0,\r\n        onChangeTo: function (value: number) {\r\n            $toInput.val(value);\r\n        },\r\n        onChangeFrom: function (value: number) {\r\n            $fromInput.val(value);\r\n        }\r\n    });\r\n\r\n    $bubbleButton.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider1.Slider('showBubble') : slider1.Slider('hideBubble');\r\n    });\r\n    $verticalButton.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider1.Slider('changeOrientation', 'vertical') : slider1.Slider('changeOrientation', 'horizontal');\r\n    });\r\n    $rangeButton.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider1.Slider('changeType', 'double') : slider1.Slider('changeType', 'single');\r\n    });\r\n    $stepInput.on('input', function () {\r\n        slider1.Slider('changeStep', parseFloat((this as HTMLInputElement).value));\r\n    });\r\n    $toInput.on('input', function () {\r\n        slider1.Slider('changeTo', parseFloat((this as HTMLInputElement).value));\r\n    });\r\n    $fromInput.on('input', function () {\r\n        slider1.Slider('changeFrom', parseFloat((this as HTMLInputElement).value));\r\n    });\r\n    $maxInput.on('input', function () {\r\n        slider1.Slider('changeMax', parseFloat((this as HTMLInputElement).value));\r\n    });\r\n    $minInput.on('input', function () {\r\n        slider1.Slider('changeMin', parseFloat((this as HTMLInputElement).value));\r\n    });\r\n    const $bubbleButton2 = $('input[data-type=\"bubble2\"]');\r\n    const $verticalButton2 = $('input[data-type=\"vertical2\"]');\r\n    const $rangeButton2 = $('input[data-type=\"range2\"]');\r\n    const $stepInput2 = $('input[data-type=\"step2\"]');\r\n    const $toInput2 = $('input[data-type=\"to2\"]');\r\n    const $fromInput2 = $('input[data-type=\"from2\"]');\r\n    const $maxInput2 = $('input[data-type=\"max2\"]');\r\n    const $minInput2 = $('input[data-type=\"min2\"]');\r\n    const slider2 = $('#slider2').Slider({\r\n        bubble: false,\r\n        direction: 'vertical',\r\n        max: 90,\r\n        min: 5,\r\n        step: 2,\r\n        type: 'single',\r\n        valueTo: 50,\r\n        valueFrom: 15,\r\n        onChangeTo: function (value: number) {\r\n            $toInput2.val(value);\r\n        },\r\n        onChangeFrom: function (value: number) {\r\n            $fromInput2.val(value);\r\n        }\r\n    });\r\n    $bubbleButton2.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider2.Slider('showBubble') : slider2.Slider('hideBubble');\r\n    });\r\n    $verticalButton2.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider2.Slider('changeOrientation', 'vertical') : slider2.Slider('changeOrientation', 'horizontal');\r\n    });\r\n    $rangeButton2.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider2.Slider('changeType', 'double') : slider2.Slider('changeType', 'single');\r\n    });\r\n    $stepInput2.on('input', function () {\r\n        slider2.Slider('changeStep', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $toInput2.on('input', function () {\r\n        slider2.Slider('changeTo', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $fromInput2.on('input', function () {\r\n        slider2.Slider('changeFrom', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $maxInput2.on('input', function () {\r\n        slider2.Slider('changeMax', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $minInput2.on('input', function () {\r\n        slider2.Slider('changeMin', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    const $bubbleButton3 = $('input[data-type=\"bubble3\"]');\r\n    const $verticalButton3 = $('input[data-type=\"vertical3\"]');\r\n    const $rangeButton3 = $('input[data-type=\"range3\"]');\r\n    const $stepInput3 = $('input[data-type=\"step3\"]');\r\n    const $toInput3 = $('input[data-type=\"to3\"]');\r\n    const $fromInput3 = $('input[data-type=\"from3\"]');\r\n    const $maxInput3 = $('input[data-type=\"max3\"]');\r\n    const $minInput3 = $('input[data-type=\"min3\"]');\r\n    const slider3 = $('#slider3').Slider({\r\n        bubble: true,\r\n        direction: 'horizontal',\r\n        max: 1000,\r\n        min: -100,\r\n        step: 30,\r\n        type: 'single',\r\n        valueTo: 780,\r\n        valueFrom: -5,\r\n        onChangeTo: function (value: number) {\r\n            $toInput3.val(value);\r\n        },\r\n        onChangeFrom: function (value: number) {\r\n            $fromInput3.val(value);\r\n        }\r\n    });\r\n\r\n    $bubbleButton3.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider3.Slider('showBubble') : slider3.Slider('hideBubble');\r\n    });\r\n    $verticalButton3.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider3.Slider('changeOrientation', 'vertical') : slider3.Slider('changeOrientation', 'horizontal');\r\n    });\r\n    $rangeButton3.on('click', function () {\r\n        (this as HTMLInputElement).checked ? slider3.Slider('changeType', 'double') : slider3.Slider('changeType', 'single');\r\n    });\r\n    $stepInput3.on('input', function () {\r\n        slider3.Slider('changeStep', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $toInput3.on('input', function () {\r\n        slider3.Slider('changeTo', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $fromInput3.on('input', function () {\r\n        slider3.Slider('changeFrom', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $maxInput3.on('input', function () {\r\n        slider3.Slider('changeMax', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n    $minInput3.on('input', function () {\r\n        slider3.Slider('changeMin', parseInt((this as HTMLInputElement).value, 10));\r\n    });\r\n});\r\n"],"names":["Observer","this","observers","subscribe","observer","push","unsubscribe","filter","x","notify","data","forEach","$657762b662b72dad$export$2e2bcd8739ae039","element","document","createElement","classList","add","setAttribute","$ee8399ad963a5327$export$2e2bcd8739ae039","parent","direction","value","bubbleValue","bubble","HeadBubble","template","insertAdjacentHTML","querySelector","append","updatePosition","updateBubble","removeHead","remove","newPos","style","left","top","innerHTML","String","showBubble","display","hideBubble","getWidth","getBoundingClientRect","width","getHeight","height","$466d6561305f52e3$export$2e2bcd8739ae039","min","max","init","step","i","numbers","querySelectorAll","number","length","removeScale","getLeftCoordinate","getTopCoordinate","$ab5706acf6e4955d$export$2e2bcd8739ae039","type","progressBar","setType","progressValue","To","From","undefined","parseInt","removeLine","View","elem","options","super","handleHeadStart","e","evt","getEvent","target","updatedHead","hasAttribute","dataArray","state","clientX","clientY","handleSwipe","event","swipeAction","addEventListener","passive","handleSwipeEnd","preventDefault","evtSwipe","line","head","valueArr","slice","onlyState","splice","removeEventListener","handleScaleClick","scaleClickData","Object","assign","Line","scale","Scale","headStartPos","calcHeadStartPosition","valueTo","ViewHead","head2StartPos","valueFrom","head2","setup","changePosition","position","valueN","Error","onChangeTo","onChangeFrom","updateState","valueB","changeOrientation","valueS","reInit","changeType","changeStep","changeMax","changeMin","TouchEvent","touches","Presenter","model","view","bind","calcPosition","Model","isValueTo","updatedValue","updatedProperty","calcUpdatedValue","calcUpdatedValueRelative","validValueFrom","validValueTo","getValueRelative","moreThan0LessThan1","changeFrom","changeTo","newValue","calcValue","calcValueByStep","stepsInValue","Math","ceil","floor","popRes","toString","split","pop","accuracy","includes","Number","toFixed","halfHeadWidth","lineParameter","lineCoordinate","HeadCoordinate","shift","newPosition","newPositionRelative","Slider","settings","presenter","$","sliders","methods","extend","each","ths","slider","isNaN","fn","method","apply","Array","prototype","call","arguments","error","jQuery","$bubbleButton","$verticalButton","$rangeButton","$stepInput","$toInput","$fromInput","$maxInput","$minInput","slider1","val","on","checked","parseFloat","$bubbleButton2","$verticalButton2","$rangeButton2","$stepInput2","$toInput2","$fromInput2","$maxInput2","$minInput2","slider2","$bubbleButton3","$verticalButton3","$rangeButton3","$stepInput3","$toInput3","$fromInput3","$maxInput3","$minInput3","slider3"],"version":3,"file":"index.98026de2.js.map"}