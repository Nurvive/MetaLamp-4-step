{"mappings":"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","sources":["src/slider/Observer.ts","src/slider/subView/HeadBubble.ts","src/slider/subView/ViewHead.ts","src/slider/subView/Scale.ts","src/slider/subView/Line.ts","src/slider/View.ts","src/slider/Presenter.ts","src/slider/Model.ts","src/slider/Slider.ts","src/slider/jquery.slider.js","src/blocks/slider-template/slider-template.ts","src/index/index.ts"],"sourcesContent":["import {NotifyData} from './types/types';\r\n\r\nimport {EventType, ObserverItem} from './types/types';\r\n\r\ntype ObserverStore = {\r\n    eventType: EventType\r\n    observer: ObserverItem\r\n}\r\n\r\nabstract class Observer {\r\n    observers: ObserverStore[];\r\n\r\n    protected constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    subscribe(eventType: EventType, observer: ObserverItem): void {\r\n        this.observers.push({\r\n            eventType: eventType,\r\n            observer: observer\r\n        });\r\n    }\r\n\r\n    unsubscribe(eventType: EventType, observer: ObserverItem): void {\r\n        this.observers = this.observers.filter((item) => item.observer !== observer);\r\n    }\r\n\r\n    protected notify(eventType: EventType, data: NotifyData): void {\r\n        this.observers.forEach((item) => {\r\n            if (item.eventType === eventType) {\r\n                item.observer(data);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport {Observer};\r\n","import {HeadType} from '../types/types';\r\n\r\nclass HeadBubble {\r\n    element: HTMLElement;\r\n\r\n    parent: HTMLElement;\r\n\r\n    type: HeadType\r\n\r\n    constructor(parent: HTMLElement, type: HeadType) {\r\n        this.parent = parent;\r\n        this.type = type;\r\n        this.element = document.createElement('span');\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.element.classList.add('slider__head-bubble');\r\n        this.element.setAttribute('data-type', 'bubble');\r\n        if (this.type === 'to') {\r\n            this.element.setAttribute('data-valueTo', 'true');\r\n        } else {\r\n            this.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        this.parent.append(this.element);\r\n    }\r\n\r\n    update(value: number): void {\r\n        this.element.textContent = String(value);\r\n    }\r\n\r\n    onActive(): void {\r\n        this.element.classList.add('slider__head-bubble_isGrabbing');\r\n    }\r\n\r\n    offActive(): void {\r\n        this.element.classList.remove('slider__head-bubble_isGrabbing');\r\n    }\r\n\r\n    show(): void {\r\n        this.element.classList.add('slider__head-bubble_active');\r\n    }\r\n\r\n    hide(): void {\r\n        this.element.classList.remove('slider__head-bubble_active');\r\n    }\r\n}\r\n\r\nexport default HeadBubble;\r\n","import HeadBubble from './HeadBubble';\r\nimport {HeadType, ViewHeadCreate} from '../types/types';\r\n\r\nclass ViewHead {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    bubble: HeadBubble;\r\n\r\n    type: HeadType;\r\n\r\n    constructor({\r\n        parent,\r\n        direction,\r\n        value,\r\n        bubbleValue,\r\n        type\r\n    }: ViewHeadCreate) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.type = type;\r\n        this.bubble = new HeadBubble(this.element, this.type);\r\n        this.updatePosition(value);\r\n        this.updateBubble(bubbleValue);\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.element.classList.add('slider__head');\r\n        if (this.type === 'to') {\r\n            this.element.setAttribute('data-valueTo', 'true');\r\n        } else {\r\n            this.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__head')\r\n            : this.element.classList.add('slider__head', 'slider__head_direction_vertical');\r\n        this.parent.append(this.element);\r\n        this.element.addEventListener('mousedown', this.handleHeadStart);\r\n        this.element.addEventListener('touchstart', this.handleHeadStart);\r\n    }\r\n\r\n    handleHeadStart = (e: MouseEvent | TouchEvent): void => {\r\n        this.onActive();\r\n        const headEvent = new CustomEvent('headStart', {\r\n            detail: {\r\n                data: e\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    onActive(): void {\r\n        this.element.classList.add('slider__head_active');\r\n        this.bubble.onActive();\r\n    }\r\n\r\n    offActive(): void {\r\n        this.element.classList.remove('slider__head_active');\r\n        this.bubble.offActive();\r\n    }\r\n\r\n    removeHead(): boolean {\r\n        this.element.remove();\r\n        return true;\r\n    }\r\n\r\n    updatePosition(newPos: number): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.style.left = `${newPos * 100}%`;\r\n        } else {\r\n            this.element.style.top = `${newPos * 100}%`;\r\n        }\r\n    }\r\n\r\n    updateBubble(value: number): void {\r\n        if (this.bubble) {\r\n            this.bubble.update(value);\r\n        }\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.bubble.show();\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.bubble.hide();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    high(): void {\r\n        this.element.classList.add('slider__head_z_high');\r\n    }\r\n\r\n    down(): void {\r\n        this.element.classList.remove('slider__head_z_high');\r\n    }\r\n}\r\n\r\nexport default ViewHead;\r\n","import {ScaleCreate} from '../types/types';\r\n\r\nclass Scale {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    constructor({\r\n        parent,\r\n        direction,\r\n        min,\r\n        max\r\n    }: ScaleCreate) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.init(min, max);\r\n    }\r\n\r\n    init(min: number, max: number): void {\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__scale')\r\n            : this.element.classList.add('slider__scale', 'slider__scale_direction_vertical');\r\n        this.parent.append(this.element);\r\n        const step = (max - min) / 4;\r\n        for (let i = 0; i <= 100; i += 25) {\r\n            const dashValue = min + (i / 25) * step;\r\n            const dash = document.createElement('div');\r\n            dash.classList.add('slider__dash');\r\n            const scaleNumber = document.createElement('div');\r\n            scaleNumber.classList.add('slider__scale-number');\r\n            scaleNumber.dataset.value = String(dashValue);\r\n            scaleNumber.addEventListener('click', this.handleScaleClick);\r\n            if (this.direction === 'horizontal') {\r\n                dash.style.left = `${i}%`;\r\n                scaleNumber.style.left = `${i}%`;\r\n                dash.append(scaleNumber);\r\n                this.element.append(dash);\r\n            } else {\r\n                dash.style.top = `${i}%`;\r\n                dash.classList.add('slider__dash_direction_vertical');\r\n                scaleNumber.style.top = `${i}%`;\r\n                scaleNumber.classList.add('slider__scale-number_direction_vertical');\r\n                dash.append(scaleNumber);\r\n                this.element.append(dash);\r\n            }\r\n            const numbers = this.element.querySelectorAll('.slider__scale-number');\r\n            const number = numbers[numbers.length - 1];\r\n            if (i === 0) {\r\n                number.innerHTML = String(min);\r\n            } else {\r\n                number.innerHTML = Number.isInteger(dashValue)\r\n                    ? String(dashValue)\r\n                    : dashValue.toFixed(2);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleScaleClick = (e: MouseEvent | TouchEvent): void => {\r\n        const node = e.target as HTMLElement;\r\n        const headEvent = new CustomEvent('scaleClick', {\r\n            detail: {\r\n                event: e,\r\n                value: Number(node.dataset.value)\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    removeScale(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get leftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get topCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Scale;\r\n","import {LineCreate} from '../types/types';\r\n\r\nclass Line {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    progressBar: HTMLElement;\r\n\r\n    type: string;\r\n\r\n    constructor({\r\n        parent,\r\n        direction,\r\n        type\r\n    }: LineCreate) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.type = type;\r\n        this.element = document.createElement('div');\r\n        this.progressBar = document.createElement('span');\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.classList.add('slider__line');\r\n            this.progressBar.classList.add('slider__line-progress');\r\n        } else {\r\n            this.element.classList.add('slider__line', 'slider__line_direction_vertical');\r\n            this.progressBar.classList.add('slider__line-progress', 'slider__line-progress_direction_vertical');\r\n        }\r\n        this.element.append(this.progressBar);\r\n        this.parent.append(this.element);\r\n        this.element.addEventListener('headStart', this.handleHeadStart);\r\n        this.element.addEventListener('scaleClick', this.handleScaleClick);\r\n        this.element.addEventListener('click', this.handleLineClick);\r\n    }\r\n\r\n    handleHeadStart = (e: CustomEvent): void => {\r\n        const headEvent = new CustomEvent('headStart', {\r\n            detail: {\r\n                data: e.detail\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    handleScaleClick = (e: CustomEvent): void => {\r\n        const headEvent = new CustomEvent('scaleClick', {\r\n            detail: {\r\n                data: e.detail\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    handleLineClick = (e: MouseEvent | TouchEvent): void => {\r\n        if (e.target !== this.element) {\r\n            return;\r\n        }\r\n        const headEvent = new CustomEvent('lineClick', {\r\n            detail: {\r\n                data: {\r\n                    event: e\r\n                }\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    set Type(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    progressValue(to: HTMLElement, from: HTMLElement | undefined): void {\r\n        if (this.direction === 'horizontal') {\r\n            if (this.type === 'single') {\r\n                this.progressBar.style.width = to.style.left;\r\n            } else if (from !== undefined) {\r\n                this.progressBar.style.width = `${parseInt(to.style.left, 10) - parseInt(from.style.left, 10)}%`;\r\n                this.progressBar.style.left = from.style.left;\r\n            }\r\n        } else if (this.type === 'single') {\r\n            this.progressBar.style.height = to.style.top;\r\n        } else if (from !== undefined) {\r\n            this.progressBar.style.height = `${parseInt(to.style.top, 10) - parseInt(from.style.top, 10)}%`;\r\n            this.progressBar.style.top = from.style.top;\r\n        }\r\n    }\r\n\r\n    removeLine(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get leftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get topCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import {Observer} from './Observer';\r\nimport ViewHead from './subView/ViewHead';\r\nimport Scale from './subView/Scale';\r\nimport Line from './subView/Line';\r\nimport {\r\n    State, TargetType\r\n} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass View extends Observer {\r\n    private readonly elem: HTMLElement;\r\n\r\n    private state: State;\r\n\r\n    head: ViewHead;\r\n\r\n    scale: Scale;\r\n\r\n    line: Line;\r\n\r\n    head2?: ViewHead;\r\n\r\n    private handleSwipe: (event: (MouseEvent | TouchEvent)) => Array<number>;\r\n\r\n    constructor(elem: HTMLElement, options: State) {\r\n        super();\r\n        this.elem = elem;\r\n        this.handleSwipe = () => [];\r\n        this.state = Object.assign({}, options);\r\n        this.line = new Line({\r\n            parent: this.elem,\r\n            direction: this.state.direction,\r\n            type: this.state.type\r\n        });\r\n        this.scale = new Scale({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            value: headStartPos,\r\n            bubbleValue: this.state.valueTo,\r\n            type: 'to'\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead({\r\n                parent: this.line.element,\r\n                direction: this.state.direction,\r\n                value: head2StartPos,\r\n                bubbleValue: this.state.valueFrom,\r\n                type: 'from'\r\n            });\r\n        }\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double' && this.head2 !== undefined) {\r\n                this.head2.showBubble();\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.changeZIndex();\r\n        this.setup();\r\n    }\r\n\r\n    changePosition(data: NotifyData): void {\r\n        let position = 0;\r\n        if (data.valueNumber !== undefined) {\r\n            position = data.valueNumber;\r\n        } else {\r\n            throw new Error('Новое значение не определено');\r\n        }\r\n        if (data.target === 'valueTo') {\r\n            this.head.updatePosition(position);\r\n            this.head.updateBubble(this.state.valueTo);\r\n            this.state.onChangeTo(this.state.valueTo);\r\n            this.line.progressValue(this.head.element, this.head2?.element);\r\n        } else if (data.target === 'valueFrom' && this.head2 !== undefined) {\r\n            this.head2.updatePosition(position);\r\n            this.head2.updateBubble(this.state.valueFrom);\r\n            this.state.onChangeFrom(this.state.valueFrom);\r\n            this.line.progressValue(this.head.element, this.head2.element);\r\n        } else {\r\n            throw new Error('Head2 не существует');\r\n        }\r\n    }\r\n\r\n    hideBubble(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueBoolean: data.valueBoolean\r\n        });\r\n        this.head.hideBubble();\r\n        this.head2?.hideBubble();\r\n    }\r\n\r\n    showBubble(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueBoolean: data.valueBoolean\r\n        });\r\n        this.head.showBubble();\r\n        this.head2?.showBubble();\r\n    }\r\n\r\n    changeDirection(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueString: data.valueString\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    changeType(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueString: data.valueString\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        delete this.head2;\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    changeStep(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueNumber: data.valueNumber\r\n        });\r\n    }\r\n\r\n    changeMaxMin(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueNumber: data.valueNumber\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    updateState(data: NotifyData): void {\r\n        const target = data.target;\r\n        const value = View.getValueFromData(data);\r\n        this.state = {\r\n            ...this.state,\r\n            [target]: value\r\n        };\r\n    }\r\n\r\n    private reInit(): void {\r\n        this.line = new Line({\r\n            parent: this.elem,\r\n            direction: this.state.direction,\r\n            type: this.state.type\r\n        });\r\n        this.scale = new Scale({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            value: headStartPos,\r\n            bubbleValue: this.state.valueTo,\r\n            type: 'to'\r\n        });\r\n        this.init();\r\n    }\r\n\r\n    private setup(): void {\r\n        this.elem.addEventListener('headStart', this.handleHeadStart);\r\n        this.elem.addEventListener('scaleClick', this.handleScaleClick);\r\n        this.elem.addEventListener('lineClick', this.handleLineClick);\r\n    }\r\n\r\n    private static getValueFromData(data: NotifyData) {\r\n        let value;\r\n        Object.entries(data)\r\n            .forEach((key) => {\r\n                if (key[0] !== 'target') {\r\n                    value = key[1];\r\n                }\r\n            });\r\n        return value;\r\n    }\r\n\r\n    private calcHeadStartPosition(value: number): number {\r\n        return (value - this.state.min) / (this.state.max - this.state.min);\r\n    }\r\n\r\n    private static getEvent(event: MouseEvent | TouchEvent): Touch | MouseEvent {\r\n        if (event instanceof TouchEvent) {\r\n            return event.touches[0];\r\n        }\r\n        return event;\r\n    }\r\n\r\n    private handleHeadStart = (e: CustomEvent): Array<number> => {\r\n        const evt: MouseEvent | Touch = View.getEvent(e.detail.data.data);\r\n        // Здесь нужен каст через 'as', так как TS не знает, что target это html объект\r\n        const target = evt.target as Element;\r\n        const updatedHead: TargetType = target.hasAttribute('data-valueFrom') ? 'valueFrom' : 'valueTo';\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(target.getBoundingClientRect().left);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(target.getBoundingClientRect().top);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        this.handleSwipe = (event: MouseEvent | TouchEvent): Array<number> => {\r\n            return this.swipeAction(event, dataArray, updatedHead);\r\n        };\r\n        document.addEventListener('touchmove', this.handleSwipe, {passive: false});\r\n        document.addEventListener('mousemove', this.handleSwipe);\r\n        document.addEventListener('touchend', this.handleSwipeEnd);\r\n        document.addEventListener('mouseup', this.handleSwipeEnd);\r\n        return dataArray;\r\n    };\r\n\r\n    private swipeAction = (event: MouseEvent | TouchEvent, dataArray: Array<number>,\r\n        updatedHead: TargetType):\r\n        Array<number> => {\r\n        event.preventDefault();\r\n        const evtSwipe: MouseEvent | Touch = View.getEvent(event);\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.width);\r\n            dataArray.push(this.line.leftCoordinate);\r\n            dataArray.push(evtSwipe.clientX);\r\n        } else {\r\n            dataArray.push(this.line.height);\r\n            dataArray.push(this.line.topCoordinate);\r\n            dataArray.push(evtSwipe.clientY);\r\n        }\r\n        dataArray.push(this.head.width / 2);\r\n        this.notify('default', {\r\n            valueArray: dataArray.slice(),\r\n            target: updatedHead\r\n        });\r\n        dataArray.splice(2, dataArray.length - 2);\r\n        return dataArray;\r\n    };\r\n\r\n    private handleSwipeEnd = (): boolean => {\r\n        this.onEndWork();\r\n        document.removeEventListener('touchmove', this.handleSwipe);\r\n        document.removeEventListener('mousemove', this.handleSwipe);\r\n        document.removeEventListener('touchend', this.handleSwipeEnd);\r\n        document.removeEventListener('mouseup', this.handleSwipeEnd);\r\n        return true;\r\n    };\r\n\r\n    private onEndWork(): void {\r\n        this.head.offActive();\r\n        this.head2?.offActive();\r\n        this.changeZIndex();\r\n    }\r\n\r\n    private changeZIndex() {\r\n        const isInCorner = (): boolean => {\r\n            return this.state.valueTo >= (this.state.max - this.state.step * 2);\r\n        };\r\n        if (this.head2 && isInCorner()) {\r\n            this.head2.high();\r\n        } else if (this.head2) {\r\n            this.head2.down();\r\n        }\r\n    }\r\n\r\n    private handleScaleClick = (event: CustomEvent): void => {\r\n        const dataArray: number[] = this.scaleClickData(event);\r\n        dataArray.push(event.detail.data.value);\r\n        this.notify('default', {\r\n            target: 'value',\r\n            valueArray: dataArray\r\n        });\r\n        this.changeZIndex();\r\n    };\r\n\r\n    private handleLineClick = (event: CustomEvent): void => {\r\n        const dataArray: number[] = this.scaleClickData(event);\r\n        this.notify('default', {\r\n            target: 'valueClick',\r\n            valueArray: dataArray\r\n        });\r\n        this.changeZIndex();\r\n    };\r\n\r\n    private scaleClickData(event: CustomEvent): Array<number> {\r\n        const evt: MouseEvent | Touch = View.getEvent(event.detail.data.event);\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.width);\r\n            dataArray.push(this.line.leftCoordinate);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(this.line.height);\r\n            dataArray.push(this.line.topCoordinate);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        return dataArray;\r\n    }\r\n}\r\n\r\nexport {View};\r\n","import {Model} from './Model';\r\nimport {View} from './View';\r\n\r\nclass Presenter {\r\n    model: Model;\r\n\r\n    view: View;\r\n\r\n    constructor(model: Model, view: View) {\r\n        this.model = model;\r\n        this.view = view;\r\n        this.view.subscribe('default', this.model.calcPosition.bind(this.model));\r\n        this.model.subscribe('state', this.view.updateState.bind(this.view));\r\n        this.model.subscribe('default', this.view.changePosition.bind(this.view));\r\n        this.model.subscribe('direction', this.view.changeDirection.bind(this.view));\r\n        this.model.subscribe('type', this.view.changeType.bind(this.view));\r\n        this.model.subscribe('step', this.view.changeStep.bind(this.view));\r\n        this.model.subscribe('max', this.view.changeMaxMin.bind(this.view));\r\n        this.model.subscribe('min', this.view.changeMaxMin.bind(this.view));\r\n        this.model.subscribe('showBubble', this.view.showBubble.bind(this.view));\r\n        this.model.subscribe('hideBubble', this.view.hideBubble.bind(this.view));\r\n    }\r\n}\r\n\r\nexport {Presenter};\r\n","import {Observer} from './Observer';\r\nimport {\r\n    GetRelativeType, State, TargetType, TypeOfSlider, DirectionType\r\n} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass Model extends Observer {\r\n    private state: State;\r\n\r\n    constructor(options: State) {\r\n        super();\r\n        this.state = Object.assign({}, options);\r\n    }\r\n\r\n    calcPosition(data: NotifyData): void {\r\n        let updatedValue: number;\r\n        let updatedProperty: TargetType;\r\n        if (data.target === 'valueTo') {\r\n            updatedProperty = 'valueTo';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        } else if (data.target === 'value') {\r\n            const property = this.calcValueHelper(data);\r\n            updatedValue = data.valueArray?.[3] || 0;\r\n            updatedProperty = property;\r\n        } else if (data.target === 'valueClick') {\r\n            const {\r\n                property,\r\n                value\r\n            } = this.calcValueHelperClick(data);\r\n            updatedValue = value;\r\n            updatedProperty = property;\r\n        } else {\r\n            updatedProperty = 'valueFrom';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        }\r\n        updatedValue = Number(updatedValue.toFixed(2));\r\n        this.state = {\r\n            ...this.state,\r\n            [updatedProperty]: updatedValue\r\n        };\r\n        this.notify('state', {\r\n            target: updatedProperty,\r\n            valueNumber: updatedValue\r\n        });\r\n        let position = Model.getValueRelative({\r\n            value: updatedValue,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify('default', {\r\n            target: updatedProperty,\r\n            valueNumber: position\r\n        });\r\n    }\r\n\r\n    set bubble(value: boolean) {\r\n        this.state.bubble = value;\r\n        if (value) {\r\n            this.notify('showBubble', {\r\n                target: 'bubble',\r\n                valueBoolean: value\r\n            });\r\n        } else {\r\n            this.notify('hideBubble', {\r\n                target: 'bubble',\r\n                valueBoolean: value\r\n            });\r\n        }\r\n    }\r\n\r\n    set direction(value: DirectionType) {\r\n        this.state.direction = value;\r\n        this.notify('direction', {\r\n            target: 'direction',\r\n            valueString: value\r\n        });\r\n    }\r\n\r\n    set type(value: TypeOfSlider) {\r\n        this.state.type = value;\r\n        this.notify('type', {\r\n            target: 'type',\r\n            valueString: value\r\n        });\r\n        if (this.state.min > this.state.valueFrom) {\r\n            this.from = this.state.min;\r\n        }\r\n        if (this.state.valueFrom > this.state.valueTo) {\r\n            this.from = this.state.valueTo;\r\n        }\r\n    }\r\n\r\n    set step(value: number) {\r\n        const stepIsValid = (val: number, max: number, min: number): boolean => {\r\n            return val < max - min && val > 0;\r\n        };\r\n        if (!stepIsValid(value, this.state.max, this.state.min)) throw new Error('Шаг не может быть больше разницы максимума и минимума или меньше нуля');\r\n        this.state.step = value;\r\n        this.notify('step', {\r\n            target: 'step',\r\n            valueNumber: value\r\n        });\r\n    }\r\n\r\n    get step(): number {\r\n        return this.state.step;\r\n    }\r\n\r\n    set max(value: number) {\r\n        if (value <= this.state.min) {\r\n            throw new Error('Максимум не может быть меньше или равен минимуму');\r\n        }\r\n        if (value < this.state.valueTo) {\r\n            this.to = value;\r\n            this.notify('state', {\r\n                target: 'valueTo',\r\n                valueNumber: value\r\n            });\r\n        }\r\n        this.state.max = value;\r\n        this.notify('max', {\r\n            target: 'max',\r\n            valueNumber: value\r\n        });\r\n    }\r\n\r\n    get max(): number {\r\n        return this.state.max;\r\n    }\r\n\r\n    set min(value: number) {\r\n        if (value >= this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше или равен максимуму');\r\n        }\r\n        if (this.state.type === 'double' && value > this.state.valueFrom) {\r\n            this.from = value;\r\n            this.notify('state', {\r\n                target: 'valueFrom',\r\n                valueNumber: value\r\n            });\r\n        }\r\n        this.state.min = value;\r\n        this.notify('min', {\r\n            target: 'min',\r\n            valueNumber: value\r\n        });\r\n    }\r\n\r\n    get min(): number {\r\n        return this.state.min;\r\n    }\r\n\r\n    set to(value: number) {\r\n        this.state.valueTo = this.validValueTo(value);\r\n        this.notify('state', {\r\n            target: 'valueTo',\r\n            valueNumber: this.state.valueTo\r\n        });\r\n        let position = Model.getValueRelative({\r\n            value: this.state.valueTo,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify('default', {\r\n            target: 'valueTo',\r\n            valueNumber: position\r\n        });\r\n    }\r\n\r\n    get valueTo(): number {\r\n        return this.state.valueTo;\r\n    }\r\n\r\n    set from(value: number) {\r\n        if (this.state.type === 'single') return;\r\n        this.state.valueFrom = Number(this.validValueFrom(value)\r\n            .toFixed(2));\r\n        this.notify('state', {\r\n            target: 'valueFrom',\r\n            valueNumber: this.state.valueFrom\r\n        });\r\n        let position = Model.getValueRelative({\r\n            value: this.state.valueFrom,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify('default', {\r\n            target: 'valueFrom',\r\n            valueNumber: position\r\n        });\r\n    }\r\n\r\n    get valueFrom(): number {\r\n        return this.state.valueFrom;\r\n    }\r\n\r\n    private static moreThan0LessThan1(value: number): number {\r\n        let newValue = value;\r\n        newValue = newValue > 1 ? 1 : newValue;\r\n        newValue = newValue < 0 ? 0 : newValue;\r\n        return newValue;\r\n    }\r\n\r\n    private static getValueRelative({\r\n        value,\r\n        min,\r\n        max\r\n    }: GetRelativeType): number {\r\n        return (value - min) / (max - min);\r\n    }\r\n\r\n    private calcValue(value: number, updatedProperty = 'valueTo'): number {\r\n        let newValue: number = value;\r\n        newValue *= (this.state.max - this.state.min);\r\n        return this.state.min + this.calcValueByStep(newValue, updatedProperty);\r\n    }\r\n\r\n    private calcValueHelper(data: NotifyData) {\r\n        const updatedValue = this.calcUpdatedValueRelative(data);\r\n        let updatedProperty: TargetType;\r\n        if (this.state.type === 'single') {\r\n            updatedProperty = 'valueTo';\r\n        } else {\r\n            updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n        }\r\n        return updatedProperty;\r\n    }\r\n\r\n    private calcValueHelperClick(data: NotifyData) {\r\n        let updatedValue = this.calcUpdatedValueRelative(data);\r\n        let updatedProperty: TargetType;\r\n        if (this.state.type === 'single') {\r\n            updatedProperty = 'valueTo';\r\n        } else {\r\n            updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n        }\r\n        updatedValue = updatedProperty === 'valueFrom' ? this.validValueFrom(updatedValue) : this.validValueTo(updatedValue);\r\n        return {\r\n            property: updatedProperty,\r\n            value: updatedValue\r\n        };\r\n    }\r\n\r\n    private calcValueByStep(value: number, updatedProperty: string): number {\r\n        let newValue: number = value;\r\n        if (this.state.step === undefined) throw new Error('Значение step не определено');\r\n        const stepsInValue: number = newValue / this.state.step;\r\n        if (stepsInValue % 1 >= 0.5) {\r\n            newValue = this.state.step * Math.ceil(stepsInValue);\r\n        } else {\r\n            newValue = this.state.step * Math.floor(stepsInValue);\r\n        }\r\n        if (updatedProperty === 'valueTo') {\r\n            const maxSteps: number = (this.state.max - this.state.min) / this.state.step;\r\n            if (stepsInValue === maxSteps) {\r\n                newValue = this.state.min < 0\r\n                    ? this.state.max + Math.abs(this.state.min)\r\n                    : this.state.max;\r\n            }\r\n        }\r\n        const popRes: string | undefined = this.state.step.toString()\r\n            .split('.')\r\n            .pop();\r\n        let accuracy = 0;\r\n        if (popRes !== undefined) {\r\n            accuracy = this.state.step.toString()\r\n                .includes('.') ? (popRes.length) : 0;\r\n        }\r\n        return Number(newValue.toFixed(accuracy));\r\n    }\r\n\r\n    private validValueTo(valueTo: number): number {\r\n        if (valueTo > this.state.max) {\r\n            return this.state.max;\r\n        }\r\n        if (valueTo < this.state.min) {\r\n            return this.state.min;\r\n        }\r\n        if (this.state.type === 'double' && valueTo <= this.state.valueFrom) {\r\n            return this.state.valueFrom + this.state.step;\r\n        }\r\n        return valueTo;\r\n    }\r\n\r\n    private validValueFrom(valueFrom: number): number {\r\n        if (valueFrom < this.state.min) {\r\n            return this.state.min;\r\n        }\r\n        if (valueFrom >= this.state.valueTo) {\r\n            return this.state.valueTo - this.state.step;\r\n        }\r\n        return valueFrom;\r\n    }\r\n\r\n    private calcUpdatedValue(data: NotifyData, updatedProperty: string): number {\r\n        if (data.valueArray === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const [headCoordinate, clientCoordinate, lineParameter,\r\n            lineCoordinate, swipeClient, halfHeadWidth] = data.valueArray;\r\n        const shift = clientCoordinate - headCoordinate;\r\n        let newPosition = (swipeClient - shift - lineCoordinate + halfHeadWidth)\r\n            / lineParameter;\r\n        newPosition = Model.moreThan0LessThan1(newPosition);\r\n        const updatedValue = this.calcValue(newPosition, updatedProperty);\r\n        return updatedProperty === 'valueTo' ? this.validValueTo(updatedValue) : this.validValueFrom(updatedValue);\r\n    }\r\n\r\n    private calcUpdatedValueRelative(data: NotifyData): number {\r\n        if (data.valueArray === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const [lineParameter, lineCoordinate, clientCoordinate] = data.valueArray;\r\n        let newPositionRelative = (clientCoordinate - lineCoordinate) / lineParameter;\r\n        newPositionRelative = Model.moreThan0LessThan1(newPositionRelative);\r\n        return this.calcValue(newPositionRelative);\r\n    }\r\n\r\n    private isValueTo = (updatedValue: number): boolean => (updatedValue - this.state.valueFrom)\r\n        / (this.state.valueTo - this.state.valueFrom) >= 0.5;\r\n}\r\n\r\nexport {Model};\r\n","import {View} from './View';\r\nimport {Presenter} from './Presenter';\r\nimport {Model} from './Model';\r\nimport {DirectionType, State, TypeOfSlider} from './types/types';\r\n\r\nclass Slider {\r\n    view: View;\r\n\r\n    elem: HTMLElement;\r\n\r\n    presenter: Presenter;\r\n\r\n    model: Model;\r\n\r\n    constructor(elem: HTMLElement, settings: State) {\r\n        this.elem = elem;\r\n        this.model = new Model(settings);\r\n        this.view = new View(this.elem, settings);\r\n        this.view.init();\r\n        this.presenter = new Presenter(this.model, this.view);\r\n    }\r\n\r\n    hideBubble(): boolean {\r\n        this.model.bubble = false;\r\n        return true;\r\n    }\r\n\r\n    showBubble(): boolean {\r\n        this.model.bubble = true;\r\n        return true;\r\n    }\r\n\r\n    changeDirection(value: DirectionType): boolean {\r\n        this.model.direction = value;\r\n        return true;\r\n    }\r\n\r\n    changeType(value: TypeOfSlider): boolean {\r\n        this.model.type = value;\r\n        return true;\r\n    }\r\n\r\n    changeStep(value: number): boolean {\r\n        this.model.step = value;\r\n        return true;\r\n    }\r\n\r\n    changeTo(value: number): boolean {\r\n        this.model.to = value;\r\n        return true;\r\n    }\r\n\r\n    changeFrom(value: number): boolean {\r\n        this.model.from = value;\r\n        return true;\r\n    }\r\n\r\n    changeMax(value: number): boolean {\r\n        this.model.max = value;\r\n        return true;\r\n    }\r\n\r\n    changeMin(value: number): boolean {\r\n        this.model.min = value;\r\n        return true;\r\n    }\r\n\r\n    getMax(): number {\r\n        return this.model.max;\r\n    }\r\n\r\n    getMin(): number {\r\n        return this.model.min;\r\n    }\r\n\r\n    getValueTo(): number {\r\n        return this.model.valueTo;\r\n    }\r\n\r\n    getValueFrom(): number {\r\n        return this.model.valueFrom;\r\n    }\r\n\r\n    getStep(): number {\r\n        return this.model.step;\r\n    }\r\n}\r\n\r\nexport {Slider};\r\n","import {Slider} from './Slider';\r\n\r\n(function ($) {\r\n    const sliders = [];\r\n    const methods = {\r\n        init: function (options) {\r\n            const settings = $.extend({\r\n                bubble: true,\r\n                max: 100,\r\n                min: 0,\r\n                step: 1,\r\n                type: 'single',\r\n                valueTo: 100,\r\n                valueFrom: 5,\r\n                direction: 'horizontal',\r\n                onChangeTo: function () {\r\n                },\r\n                onChangeFrom: function () {\r\n                }\r\n            }, options);\r\n\r\n            return this.each(function () {\r\n                const ths = $(this);\r\n                if (settings.step > settings.max - settings.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n                if (settings.step <= 0) throw new Error('Шаг должен быть больше нуля');\r\n                if (settings.valueTo > settings.max) throw new Error('Текущее значение не может быть больше максимума');\r\n                if (settings.valueFrom < settings.min) throw new Error('Текущее значение не может быть меньше минимума');\r\n                sliders.push(new Slider(ths[0], settings));\r\n            });\r\n        },\r\n        hideBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.hideBubble();\r\n        },\r\n        showBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.showBubble();\r\n        },\r\n        changeDirection: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeDirection(value);\r\n        },\r\n        changeType: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeType(value);\r\n        },\r\n        changeStep: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('step должно быть числом');\r\n            slider.changeStep(value);\r\n        },\r\n        changeTo: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueTo должно быть числом');\r\n            slider.changeTo(value);\r\n        },\r\n        changeFrom: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeFrom(value);\r\n        },\r\n        changeMax: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMax(value);\r\n        },\r\n        getMax: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMax();\r\n        },\r\n        getMin: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMin();\r\n        },\r\n        getValueTo: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueTo();\r\n        },\r\n        getValueFrom: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueFrom();\r\n        },\r\n        getStep: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getStep();\r\n        },\r\n        changeMin: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMin(value);\r\n        }\r\n\r\n    };\r\n    // eslint-disable-next-line no-param-reassign\r\n    $.fn.Slider = function (method) {\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n        if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n        $.error('Метод с именем ' + method + ' не существует для jQuery.slider');\r\n        return null;\r\n    };\r\n}(jQuery));\r\n","import './slider-template.scss';\r\nimport '../../slider/jquery.slider.js';\r\nimport {State} from '../../slider/types/types';\r\nimport {rootLogger} from 'ts-jest';\r\n\r\nclass SliderTemplate {\r\n    private readonly element: JQuery;\r\n\r\n    private $bubbleButton: JQuery | undefined;\r\n\r\n    private $verticalButton: JQuery | undefined;\r\n\r\n    private $rangeButton: JQuery | undefined;\r\n\r\n    private $stepInput: JQuery | undefined;\r\n\r\n    private $toInput: JQuery | undefined;\r\n\r\n    private $fromInput: JQuery | undefined;\r\n\r\n    private $maxInput: JQuery | undefined;\r\n\r\n    private $minInput: JQuery | undefined;\r\n\r\n    private slider: JQuery | undefined;\r\n\r\n    constructor(element: HTMLElement, settings: State) {\r\n        this.element = $(element);\r\n        this.init(settings);\r\n    }\r\n\r\n    init(settings: State): void {\r\n        this.$bubbleButton = $(this.element.find('.js-slider-template__inner-input-bubble'));\r\n        this.$verticalButton = $(this.element.find('.js-slider-template__inner-input-vertical'));\r\n        this.$rangeButton = $(this.element.find('.js-slider-template__inner-input-range'));\r\n        this.$stepInput = $(this.element.find('.js-slider-template__inner-input-step'));\r\n        this.$toInput = $(this.element.find('.js-slider-template__inner-input-to'));\r\n        this.$fromInput = $(this.element.find('.js-slider-template__inner-input-from'));\r\n        this.$maxInput = $(this.element.find('.js-slider-template__inner-input-max'));\r\n        this.$minInput = $(this.element.find('.js-slider-template__inner-input-min'));\r\n        const options = Object.assign(settings, {\r\n            onChangeTo: (value: number) => {\r\n                this.$toInput?.val(value);\r\n            },\r\n            onChangeFrom: (value: number) => {\r\n                this.$fromInput?.val(value);\r\n            }\r\n        });\r\n        this.slider = $(this.element.find('.slider'))\r\n            .Slider(options);\r\n        this.setup();\r\n    }\r\n\r\n    setup(): void {\r\n        this.$bubbleButton?.on('click', this.handleBubbleButtonClick);\r\n        this.$verticalButton?.on('click', this.handleVerticalButtonClick);\r\n        this.$rangeButton?.on('click', this.handleRangeButtonClick);\r\n        if (!this.$rangeButton?.is(':checked')) {\r\n            this.$fromInput?.parent()\r\n                .addClass('slider-template__label_hide');\r\n        }\r\n        this.$stepInput?.on('change', this.handleStepInputChange);\r\n        this.$stepInput?.val(String(this.slider?.Slider('getStep')));\r\n        this.$toInput?.on('change', this.handleToInputChange);\r\n        this.$toInput?.val(String(this.slider?.Slider('getValueTo')));\r\n        this.$fromInput?.on('change', this.handleFromInputChange);\r\n        this.$fromInput?.val(String(this.slider?.Slider('getValueFrom')));\r\n        this.$maxInput?.on('change', this.handleMaxInputChange);\r\n        this.$maxInput?.val(String(this.slider?.Slider('getMax')));\r\n        this.$minInput?.on('change', this.handleMinInputChange);\r\n        this.$minInput?.val(String(this.slider?.Slider('getMin')));\r\n    }\r\n\r\n    handleBubbleButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider?.Slider('showBubble') : this.slider?.Slider('hideBubble');\r\n    };\r\n\r\n    handleVerticalButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider?.Slider('changeDirection', 'vertical') : this.slider?.Slider('changeDirection', 'horizontal');\r\n    };\r\n\r\n    handleRangeButtonClick = (e: JQuery.ClickEvent): void => {\r\n        if (e.target.checked) {\r\n            this.slider?.Slider('changeType', 'double');\r\n            this.$fromInput?.parent()\r\n                .removeClass('slider-template__label_hide');\r\n        } else {\r\n            this.slider?.Slider('changeType', 'single');\r\n            this.$fromInput?.parent()\r\n                .addClass('slider-template__label_hide');\r\n        }\r\n    };\r\n\r\n    handleStepInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeStep', parseFloat(e.target.value));\r\n            const step = this.slider?.Slider('getStep');\r\n            this.$toInput?.attr('step', String(step));\r\n            this.$fromInput?.attr('step', String(step));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getStep');\r\n        }\r\n    };\r\n\r\n    handleToInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider?.Slider('changeTo', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleFromInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider?.Slider('changeFrom', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleMaxInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeMax', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getMax');\r\n        }\r\n    };\r\n\r\n    handleMinInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeMin', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getMin');\r\n        }\r\n    };\r\n}\r\n\r\nexport default SliderTemplate;\r\n","import './index.scss';\r\nimport '../blocks/slider-block/slider-block.scss';\r\nimport '../slider/jquery.slider';\r\nimport '../blocks/slider-template/slider-template';\r\nimport SliderTemplate from '../blocks/slider-template/slider-template';\r\nimport {State} from '../slider/types/types';\r\n\r\n$(function () {\r\n    const settings: State[] = [\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 100,\r\n            min: 0,\r\n            step: 1,\r\n            type: 'double',\r\n            valueTo: 100,\r\n            valueFrom: 0,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: false,\r\n            direction: 'vertical',\r\n            max: 90,\r\n            min: 5,\r\n            step: 2,\r\n            type: 'single',\r\n            valueTo: 50,\r\n            valueFrom: 15,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 1000,\r\n            min: -100,\r\n            step: 30,\r\n            type: 'single',\r\n            valueTo: 780,\r\n            valueFrom: -5,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        }\r\n    ];\r\n    $('.slider-template')\r\n        .each((index, element) => {\r\n            // eslint-disable-next-line no-new\r\n            new SliderTemplate(element, settings[index]);\r\n        });\r\n});\r\n"],"names":["Observer","this","observers","subscribe","eventType","observer","push","unsubscribe","filter","item","notify","data","forEach","$7f7f88587dcc82e7$export$2e2bcd8739ae039","parent","type","element","document","createElement","init","classList","add","setAttribute","append","update","value","textContent","String","onActive","offActive","remove","show","hide","$443d33087eac4543$export$2e2bcd8739ae039","constructor","direction","bubbleValue","handleHeadStart","e","headEvent","CustomEvent","detail","dispatchEvent","bubble","HeadBubble","updatePosition","updateBubble","addEventListener","removeHead","newPos","style","left","top","showBubble","hideBubble","width","getBoundingClientRect","height","high","down","$0107047da07a407d$export$2e2bcd8739ae039","min","max","handleScaleClick","node","target","event","Number","dataset","step","i","dashValue","dash","scaleNumber","numbers","querySelectorAll","number","length","innerHTML","isInteger","toFixed","removeScale","leftCoordinate","topCoordinate","$790a1a2e6b71ddca$export$2e2bcd8739ae039","handleLineClick","progressBar","Type","progressValue","to","from","undefined","parseInt","removeLine","View","elem","options","super","evt","getEvent","updatedHead","hasAttribute","dataArray","state","clientX","clientY","handleSwipe","swipeAction","passive","handleSwipeEnd","preventDefault","evtSwipe","line","head","valueArray","slice","splice","onEndWork","removeEventListener","scaleClickData","changeZIndex","Object","assign","Line","scale","Scale","headStartPos","calcHeadStartPosition","valueTo","ViewHead","head2StartPos","valueFrom","head2","setup","changePosition","position","valueNumber","Error","onChangeTo","onChangeFrom","updateState","valueBoolean","changeDirection","valueString","reInit","changeType","changeStep","changeMaxMin","getValueFromData","entries","key","TouchEvent","touches","isInCorner","Presenter","model","view","calcPosition","bind","Model","isValueTo","updatedValue","updatedProperty","calcUpdatedValue","property","calcValueHelper","calcValueHelperClick","getValueRelative","moreThan0LessThan1","val","validValueTo","validValueFrom","newValue","calcValue","calcValueByStep","calcUpdatedValueRelative","stepsInValue","Math","ceil","floor","abs","popRes","toString","split","pop","accuracy","includes","clientCoordinate","headCoordinate","lineParameter","lineCoordinate","swipeClient","halfHeadWidth","newPosition","newPositionRelative","Slider","settings","presenter","changeTo","changeFrom","changeMax","changeMin","getMax","getMin","getValueTo","getValueFrom","getStep","$","sliders","methods","extend","each","ths","slider","x","isNaN","fn","method","apply","Array","prototype","call","arguments","error","jQuery","$ac628bb2660317a7$export$2e2bcd8739ae039","handleBubbleButtonClick","checked","handleVerticalButtonClick","handleRangeButtonClick","$fromInput","removeClass","addClass","handleStepInputChange","parseFloat","$toInput","attr","handleToInputChange","handleFromInputChange","handleMaxInputChange","handleMinInputChange","$bubbleButton","find","$verticalButton","$rangeButton","$stepInput","$maxInput","$minInput","on","is","index","SliderTemplate"],"version":3,"file":"index.4d3c022e.js.map"}