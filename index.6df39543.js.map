{"mappings":"MAMeA,gBAIPC,KAAKC,UAAY,GAGrBC,UACIC,EACAC,GAEKJ,KAAKC,UAAUE,GAGhBH,KAAKC,UAAUE,GAAWE,KAAKD,GAF/BJ,KAAKC,UAAUE,GAAa,CAACC,GAMrCE,YACIH,EACAC,GAEIJ,KAAKC,UAAUE,YACfH,KAAKC,UAAUE,GAAaH,KAAKC,UAAUE,GAAWI,QACjDC,GAASA,IAASJ,KAKrBK,OAA0BN,EAAcO,GAC9CV,KAAKC,UAAUE,IAAYQ,SAASP,IAChCA,EAASM,WCWrBE,oBAvCgBC,EAAqBC,GAC7Bd,KAAKa,OAASA,EACdb,KAAKc,KAAOA,EACZd,KAAKe,QAAUC,SAASC,cAAc,QACtCjB,KAAKkB,OAGTA,OACIlB,KAAKe,QAAQI,UAAUC,IAAI,uBAC3BpB,KAAKe,QAAQM,aAAa,YAAa,UACrB,OAAdrB,KAAKc,KACLd,KAAKe,QAAQM,aAAa,eAAgB,QAE1CrB,KAAKe,QAAQM,aAAa,iBAAkB,QAEhDrB,KAAKa,OAAOS,OAAOtB,KAAKe,SAG5BQ,OAAOC,GACHxB,KAAKe,QAAQU,YAAcC,OAAOF,GAGtCG,WACI3B,KAAKe,QAAQI,UAAUC,IAAI,kCAG/BQ,YACI5B,KAAKe,QAAQI,UAAUU,OAAO,kCAGlCC,OACI9B,KAAKe,QAAQI,UAAUC,IAAI,8BAG/BW,OACI/B,KAAKe,QAAQI,UAAUU,OAAO,oCCkEtCG,qBAhGIC,OACIpB,EADQqB,UAERA,EAFQV,MAGRA,EAHQW,YAIRA,EAJQrB,KAKRA,IAhBRd,KA2CIoC,gBAAmBC,IACfrC,KAAK2B,WACL,MAAMW,EAAY,IAAIC,YAAY,YAAa,CAC3CC,OAAQ,CACJ9B,KAAM2B,KAGdrC,KAAKa,OAAO4B,cAAcH,IAhC1BtC,KAAKa,OAASA,EACdb,KAAKkC,UAAYA,EACjBlC,KAAKe,QAAUC,SAASC,cAAc,OACtCjB,KAAKc,KAAOA,EACZd,KAAK0C,OAAS,IAAIC,EAAW3C,KAAKe,QAASf,KAAKc,MAChDd,KAAK4C,eAAepB,GACpBxB,KAAK6C,aAAaV,GAClBnC,KAAKkB,OAGTA,OACIlB,KAAKe,QAAQI,UAAUC,IAAI,gBACT,OAAdpB,KAAKc,KACLd,KAAKe,QAAQM,aAAa,eAAgB,QAE1CrB,KAAKe,QAAQM,aAAa,iBAAkB,QAE7B,eAAnBrB,KAAKkC,UACClC,KAAKe,QAAQI,UAAUC,IAAI,gBAC3BpB,KAAKe,QAAQI,UAAUC,IAAI,eAAgB,mCACjDpB,KAAKa,OAAOS,OAAOtB,KAAKe,SACxBf,KAAKe,QAAQ+B,iBAAiB,YAAa9C,KAAKoC,iBAChDpC,KAAKe,QAAQ+B,iBAAiB,aAAc9C,KAAKoC,iBAarDT,WACI3B,KAAKe,QAAQI,UAAUC,IAAI,uBAC3BpB,KAAK0C,OAAOf,WAGhBC,YACI5B,KAAKe,QAAQI,UAAUU,OAAO,uBAC9B7B,KAAK0C,OAAOd,YAGhBmB,aAEI,OADA/C,KAAKe,QAAQc,UACN,EAGXe,eAAeI,GACY,eAAnBhD,KAAKkC,UACLlC,KAAKe,QAAQkC,MAAMC,KAAmB,IAATF,EAA7B,IAEAhD,KAAKe,QAAQkC,MAAME,IAAkB,IAATH,EAA5B,IAIRH,aAAarB,GACLxB,KAAK0C,QACL1C,KAAK0C,OAAOnB,OAAOC,GAI3B4B,aACIpD,KAAK0C,OAAOZ,OAGhBuB,aACIrD,KAAK0C,OAAOX,OAGZuB,YACA,OAAOtD,KAAKe,QAAQwC,wBAAwBD,MAG5CE,aACA,OAAOxD,KAAKe,QAAQwC,wBAAwBC,OAGhDC,OACIzD,KAAKe,QAAQI,UAAUC,IAAI,uBAG/BsC,OACI1D,KAAKe,QAAQI,UAAUU,OAAO,6BCbtC8B,qBApFI1B,OACIpB,EADQqB,UAERA,EAFQ0B,IAGRA,EAHQC,IAIRA,IAXR7D,KA0DI8D,iBAAoBzB,IAChB,MAAM0B,EAAO1B,EAAE2B,OACf,KAAMD,aAAgBE,aAAc,OACpC,MAAM3B,EAAY,IAAIC,YAAY,aAAc,CAC5CC,OAAQ,CACJ0B,MAAO7B,EACPb,MAAO2C,OAAOJ,EAAKK,QAAQ5C,UAGnCxB,KAAKa,OAAO4B,cAAcH,IAtD1BtC,KAAKa,OAASA,EACdb,KAAKkC,UAAYA,EACjBlC,KAAKe,QAAUC,SAASC,cAAc,OACtCjB,KAAKkB,KAAK0C,EAAKC,GAGnB3C,KAAK0C,EAAaC,GACK,eAAnB7D,KAAKkC,UACClC,KAAKe,QAAQI,UAAUC,IAAI,iBAC3BpB,KAAKe,QAAQI,UAAUC,IAAI,gBAAiB,oCAClDpB,KAAKa,OAAOS,OAAOtB,KAAKe,SACxB,MAAMsD,GAAQR,EAAMD,GAAO,EAC3B,IAAK,IAAIU,EAAI,EAAGA,GAAK,IAAKA,GAAK,GAAI,CAC/B,MAAMC,EAAYX,EAAOU,EAAI,GAAMD,EAC7BG,EAAOxD,SAASC,cAAc,OACpCuD,EAAKrD,UAAUC,IAAI,gBACnB,MAAMqD,EAAczD,SAASC,cAAc,OAC3CwD,EAAYtD,UAAUC,IAAI,wBAC1BqD,EAAYL,QAAQ5C,MAAQE,OAAO6C,GACnCE,EAAY3B,iBAAiB,QAAS9C,KAAK8D,kBACpB,eAAnB9D,KAAKkC,WACLsC,EAAKvB,MAAMC,KAAX,GAAqBoB,KACrBG,EAAYxB,MAAMC,KAAlB,GAA4BoB,KAC5BE,EAAKlD,OAAOmD,GACZzE,KAAKe,QAAQO,OAAOkD,KAEpBA,EAAKvB,MAAME,IAAX,GAAoBmB,KACpBE,EAAKrD,UAAUC,IAAI,mCACnBqD,EAAYxB,MAAME,IAAlB,GAA2BmB,KAC3BG,EAAYtD,UAAUC,IAAI,2CAC1BoD,EAAKlD,OAAOmD,GACZzE,KAAKe,QAAQO,OAAOkD,IAExB,MAAME,EAAU1E,KAAKe,QAAQ4D,iBAAiB,yBACxCC,EAASF,EAAQA,EAAQG,OAAS,GAEpCD,EAAOE,UADD,IAANR,EACmB5C,OAAOkC,GAEPO,OAAOY,UAAUR,GAC9B7C,OAAO6C,GACPA,EAAUS,QAAQ,IAiBpCC,cACIjF,KAAKe,QAAQc,SAGbyB,YACA,OAAOtD,KAAKe,QAAQwC,wBAAwBD,MAG5C4B,qBACA,OAAOlF,KAAKe,QAAQwC,wBAAwBL,KAG5CM,aACA,OAAOxD,KAAKe,QAAQwC,wBAAwBC,OAG5C2B,oBACA,OAAOnF,KAAKe,QAAQwC,wBAAwBJ,UCyBpDiC,qBArGInD,OACIpB,EADQqB,UAERA,EAFQpB,KAGRA,IAdRd,KAuCIoC,gBAAmBC,IACf,MAAMC,EAAY,IAAIC,YAAY,YAAa,CAC3CC,OAAQ,CACJ9B,KAAM2B,EAAEG,UAGhBxC,KAAKa,OAAO4B,cAAcH,IA7ClCtC,KAgDI8D,iBAAoBzB,IAChB,MAAMC,EAAY,IAAIC,YAAY,aAAc,CAC5CC,OAAQ,CACJ9B,KAAM2B,EAAEG,UAGhBxC,KAAKa,OAAO4B,cAAcH,IAtDlCtC,KAyDIqF,gBAAmBhD,IACf,GAAIA,EAAE2B,SAAWhE,KAAKe,QAClB,OAEJ,MAAMuB,EAAY,IAAIC,YAAY,YAAa,CAC3CC,OAAQ,CACJ9B,KAAM,CACFwD,MAAO7B,MAInBrC,KAAKa,OAAO4B,cAAcH,IApD1BtC,KAAKa,OAASA,EACdb,KAAKkC,UAAYA,EACjBlC,KAAKc,KAAOA,EACZd,KAAKe,QAAUC,SAASC,cAAc,OACtCjB,KAAKsF,YAActE,SAASC,cAAc,QAC1CjB,KAAKkB,OAGTA,OAC2B,eAAnBlB,KAAKkC,WACLlC,KAAKe,QAAQI,UAAUC,IAAI,gBAC3BpB,KAAKsF,YAAYnE,UAAUC,IAAI,2BAE/BpB,KAAKe,QAAQI,UAAUC,IAAI,eAAgB,mCAC3CpB,KAAKsF,YAAYnE,UAAUC,IAAI,wBAAyB,6CAE5DpB,KAAKe,QAAQO,OAAOtB,KAAKsF,aACzBtF,KAAKa,OAAOS,OAAOtB,KAAKe,SACxBf,KAAKe,QAAQ+B,iBAAiB,YAAa9C,KAAKoC,iBAChDpC,KAAKe,QAAQ+B,iBAAiB,aAAc9C,KAAK8D,kBACjD9D,KAAKe,QAAQ+B,iBAAiB,QAAS9C,KAAKqF,iBAmC5CE,SAAKzE,GACLd,KAAKc,KAAOA,EAGhB0E,cAAcC,EAAiBC,GACJ,eAAnB1F,KAAKkC,UACa,WAAdlC,KAAKc,KACLd,KAAKsF,YAAYrC,MAAMK,MAAQmC,EAAGxC,MAAMC,UACxByC,IAATD,IACP1F,KAAKsF,YAAYrC,MAAMK,MAAWsC,SAASH,EAAGxC,MAAMC,KAAM,IAAM0C,SAASF,EAAKzC,MAAMC,KAAM,IAA1F,IACAlD,KAAKsF,YAAYrC,MAAMC,KAAOwC,EAAKzC,MAAMC,MAExB,WAAdlD,KAAKc,KACZd,KAAKsF,YAAYrC,MAAMO,OAASiC,EAAGxC,MAAME,SACzBwC,IAATD,IACP1F,KAAKsF,YAAYrC,MAAMO,OAAYoC,SAASH,EAAGxC,MAAME,IAAK,IAAMyC,SAASF,EAAKzC,MAAME,IAAK,IAAzF,IACAnD,KAAKsF,YAAYrC,MAAME,IAAMuC,EAAKzC,MAAME,KAIhD0C,aACI7F,KAAKe,QAAQc,SAGbyB,YACA,OAAOtD,KAAKe,QAAQwC,wBAAwBD,MAG5C4B,qBACA,OAAOlF,KAAKe,QAAQwC,wBAAwBL,KAG5CM,aACA,OAAOxD,KAAKe,QAAQwC,wBAAwBC,OAG5C2B,oBACA,OAAOnF,KAAKe,QAAQwC,wBAAwBJ,YCrG9C2C,UAAa/F,cAeHgG,EAAmBC,GAC3BC,QAhBRjG,KA+MYoC,gBAAmBC,IACvB,MAAM6D,EAhNRJ,EAgNuCK,SAAS9D,EAAEG,OAAO9B,KAAKA,MACtDsD,EAASkC,EAAIlC,OACnB,KAAMA,aAAkBC,aAAc,MAAO,GAC7C,MAAMmC,EAA0BpC,EAAOqC,aAAa,kBAAoB,YAAc,UAChFC,EAA2B,GAejC,MAd6B,eAAzBtG,KAAKuG,MAAMrE,WACXoE,EAAUjG,KAAK2D,EAAOT,wBAAwBL,MAC9CoD,EAAUjG,KAAK6F,EAAIM,WAEnBF,EAAUjG,KAAK2D,EAAOT,wBAAwBJ,KAC9CmD,EAAUjG,KAAK6F,EAAIO,UAEvBzG,KAAK0G,YAAexC,GACTlE,KAAK2G,YAAYzC,EAAOoC,EAAWF,GAE9CpF,SAAS8B,iBAAiB,YAAa9C,KAAK0G,YAAa,CAACE,SAAS,IACnE5F,SAAS8B,iBAAiB,YAAa9C,KAAK0G,aAC5C1F,SAAS8B,iBAAiB,WAAY9C,KAAK6G,gBAC3C7F,SAAS8B,iBAAiB,UAAW9C,KAAK6G,gBACnCP,GAnOftG,KAsOY2G,YAAW,CAAIzC,EAAgCoC,EACnDF,KAEAlC,EAAM4C,iBACN,MAAMC,EA1ORjB,EA0O4CK,SAASjC,GAgBnD,MAf6B,eAAzBlE,KAAKuG,MAAMrE,WACXoE,EAAUjG,KAAKL,KAAKgH,KAAK1D,OACzBgD,EAAUjG,KAAKL,KAAKgH,KAAK9B,gBACzBoB,EAAUjG,KAAK0G,EAASP,WAExBF,EAAUjG,KAAKL,KAAKgH,KAAKxD,QACzB8C,EAAUjG,KAAKL,KAAKgH,KAAK7B,eACzBmB,EAAUjG,KAAK0G,EAASN,UAE5BH,EAAUjG,KAAKL,KAAKiH,KAAK3D,MAAQ,GACjCtD,KAAKS,OAAO,eAAgB,CACxByG,WAAYZ,EAAUa,QACtBnD,OAAQoC,IAEZE,EAAUc,OAAO,EAAGd,EAAUzB,OAAS,GAChCyB,GA1PftG,KA6PY6G,eAAc,KAClB7G,KAAKqH,YACLrG,SAASsG,oBAAoB,YAAatH,KAAK0G,aAC/C1F,SAASsG,oBAAoB,YAAatH,KAAK0G,aAC/C1F,SAASsG,oBAAoB,WAAYtH,KAAK6G,gBAC9C7F,SAASsG,oBAAoB,UAAWtH,KAAK6G,iBACtC,GAnQf7G,KAuRY8D,iBAAoBI,IACxB,MAAMoC,EAAsBtG,KAAKuH,eAAerD,GAChDoC,EAAUjG,KAAK6D,EAAM1B,OAAO9B,KAAKc,OACjCxB,KAAKS,OAAO,eAAgB,CACxBuD,OAAQ,QACRkD,WAAYZ,IAEhBtG,KAAKwH,gBA9RbxH,KAiSYqF,gBAAmBnB,IACvB,MAAMoC,EAAsBtG,KAAKuH,eAAerD,GAChDlE,KAAKS,OAAO,eAAgB,CACxBuD,OAAQ,aACRkD,WAAYZ,IAEhBtG,KAAKwH,gBAtRLxH,KAAK+F,KAAOA,EACZ/F,KAAK0G,YAAL,IAAyB,GACzB1G,KAAKuG,MAAQkB,OAAOC,OAAO,GAAI1B,GAC/BhG,KAAKgH,KAAO,IAAIW,EAAK,CACjB9G,OAAQb,KAAK+F,KACb7D,UAAWlC,KAAKuG,MAAMrE,UACtBpB,KAAMd,KAAKuG,MAAMzF,OAErBd,KAAK4H,MAAQ,IAAIC,EAAM,CACnBhH,OAAQb,KAAKgH,KAAKjG,QAClBmB,UAAWlC,KAAKuG,MAAMrE,UACtB0B,IAAK5D,KAAKuG,MAAM3C,IAChBC,IAAK7D,KAAKuG,MAAM1C,MAEpB,MAAMiE,EAAe9H,KAAK+H,sBAAsB/H,KAAKuG,MAAMyB,SAC3DhI,KAAKiH,KAAO,IAAIgB,EAAS,CACrBpH,OAAQb,KAAKgH,KAAKjG,QAClBmB,UAAWlC,KAAKuG,MAAMrE,UACtBV,MAAOsG,EACP3F,YAAanC,KAAKuG,MAAMyB,QACxBlH,KAAM,OAIdI,OACI,GAAwB,WAApBlB,KAAKuG,MAAMzF,KAAmB,CAC9B,MAAMoH,EAAwBlI,KAAK+H,sBAAsB/H,KAAKuG,MAAM4B,WACpEnI,KAAKoI,MAAQ,IAAIH,EAAS,CACtBpH,OAAQb,KAAKgH,KAAKjG,QAClBmB,UAAWlC,KAAKuG,MAAMrE,UACtBV,MAAO0G,EACP/F,YAAanC,KAAKuG,MAAM4B,UACxBrH,KAAM,SAGVd,KAAKuG,MAAM7D,SACX1C,KAAKiH,KAAK7D,aACc,WAApBpD,KAAKuG,MAAMzF,WAAoC6E,IAAf3F,KAAKoI,OACrCpI,KAAKoI,MAAMhF,cAGnBpD,KAAKgH,KAAKxB,cAAcxF,KAAKiH,KAAKlG,QAASf,KAAKoI,OAAOrH,SACvDf,KAAKwH,eACLxH,KAAKqI,QAGTC,eAAe5H,GACX,IAAI6H,EAAW,EACf,QAAyB5C,IAArBjF,EAAK8H,YAGL,MAAM,IAAIC,MAAM,gCAEA,GAJhBF,EAAW7H,EAAK8H,YAIA,YAAhB9H,EAAKsD,OACLhE,KAAKiH,KAAKrE,eAAe2F,GACzBvI,KAAKiH,KAAKpE,aAAa7C,KAAKuG,MAAMyB,SAClChI,KAAKuG,MAAMmC,WAAW1I,KAAKuG,MAAMyB,SACjChI,KAAKgH,KAAKxB,cAAcxF,KAAKiH,KAAKlG,QAASf,KAAKoI,OAAOrH,aACpD,CAAA,GAAoB,cAAhBL,EAAKsD,aAAyC2B,IAAf3F,KAAKoI,MAM3C,MAAM,IAAIK,MAAM,uBALhBzI,KAAKoI,MAAMxF,eAAe2F,GAC1BvI,KAAKoI,MAAMvF,aAAa7C,KAAKuG,MAAM4B,WACnCnI,KAAKuG,MAAMoC,aAAa3I,KAAKuG,MAAM4B,WACnCnI,KAAKgH,KAAKxB,cAAcxF,KAAKiH,KAAKlG,QAASf,KAAKoI,MAAMrH,UAM9DsC,WAAW3C,GACPV,KAAK4I,YAAY,CACb5E,OAAQtD,EAAKsD,OACb6E,aAAcnI,EAAKmI,eAEvB7I,KAAKiH,KAAK5D,aACVrD,KAAKoI,OAAO/E,aAGhBD,WAAW1C,GACPV,KAAK4I,YAAY,CACb5E,OAAQtD,EAAKsD,OACb6E,aAAcnI,EAAKmI,eAEvB7I,KAAKiH,KAAK7D,aACVpD,KAAKoI,OAAOhF,aAGhB0F,gBAAgBpI,GACZV,KAAK4I,YAAY,CACb5E,OAAQtD,EAAKsD,OACb+E,YAAarI,EAAKqI,cAEtB/I,KAAKiH,KAAKlE,aACV/C,KAAKoI,OAAOrF,aACZ/C,KAAK4H,MAAM3C,cACXjF,KAAKgH,KAAKnB,aACV7F,KAAKgJ,SAGTC,WAAWvI,GACPV,KAAK4I,YAAY,CACb5E,OAAQtD,EAAKsD,OACb+E,YAAarI,EAAKqI,cAEtB/I,KAAKiH,KAAKlE,aACV/C,KAAKoI,OAAOrF,oBACL/C,KAAKoI,MACZpI,KAAK4H,MAAM3C,cACXjF,KAAKgH,KAAKnB,aACV7F,KAAKgJ,SAGTE,WAAWxI,GACPV,KAAK4I,YAAY,CACb5E,OAAQtD,EAAKsD,OACbwE,YAAa9H,EAAK8H,cAI1BW,aAAazI,GACTV,KAAK4I,YAAY,CACb5E,OAAQtD,EAAKsD,OACbwE,YAAa9H,EAAK8H,cAEtBxI,KAAKiH,KAAKlE,aACV/C,KAAKoI,OAAOrF,aACZ/C,KAAK4H,MAAM3C,cACXjF,KAAKgH,KAAKnB,aACV7F,KAAKgJ,SAGTJ,YAAYlI,GACR,MAAMsD,EAAStD,EAAKsD,OACdxC,EAAQsE,EAAKsD,iBAAiB1I,GACpCV,KAAKuG,MAAQ,IACNvG,KAAKuG,OACPvC,GAASxC,GAIVwH,SACJhJ,KAAKgH,KAAO,IAAIW,EAAK,CACjB9G,OAAQb,KAAK+F,KACb7D,UAAWlC,KAAKuG,MAAMrE,UACtBpB,KAAMd,KAAKuG,MAAMzF,OAErBd,KAAK4H,MAAQ,IAAIC,EAAM,CACnBhH,OAAQb,KAAKgH,KAAKjG,QAClBmB,UAAWlC,KAAKuG,MAAMrE,UACtB0B,IAAK5D,KAAKuG,MAAM3C,IAChBC,IAAK7D,KAAKuG,MAAM1C,MAEpB,MAAMiE,EAAe9H,KAAK+H,sBAAsB/H,KAAKuG,MAAMyB,SAC3DhI,KAAKiH,KAAO,IAAIgB,EAAS,CACrBpH,OAAQb,KAAKgH,KAAKjG,QAClBmB,UAAWlC,KAAKuG,MAAMrE,UACtBV,MAAOsG,EACP3F,YAAanC,KAAKuG,MAAMyB,QACxBlH,KAAM,OAEVd,KAAKkB,OAGDmH,QACJrI,KAAK+F,KAAKjD,iBAAiB,YAAa9C,KAAKoC,iBAC7CpC,KAAK+F,KAAKjD,iBAAiB,aAAc9C,KAAK8D,kBAC9C9D,KAAK+F,KAAKjD,iBAAiB,YAAa9C,KAAKqF,yCAGjB3E,GAC5B,IAAIc,EAOJ,OANAiG,OAAO4B,QAAQ3I,GACVC,SAAS2I,IACS,WAAXA,EAAI,KACJ9H,EAAQ8H,EAAI,OAGjB9H,EAGHuG,sBAAsBvG,GAC1B,OAAQA,EAAQxB,KAAKuG,MAAM3C,MAAQ5D,KAAKuG,MAAM1C,IAAM7D,KAAKuG,MAAM3C,qBAG3CM,GACpB,OAAIA,aAAiBqF,WACVrF,EAAMsF,QAAQ,GAElBtF,EA0DHmD,YACJrH,KAAKiH,KAAKrF,YACV5B,KAAKoI,OAAOxG,YACZ5B,KAAKwH,eAGDA,eAIAxH,KAAKoI,OAHO,KACLpI,KAAKuG,MAAMyB,SAAYhI,KAAKuG,MAAM1C,IAAwB,EAAlB7D,KAAKuG,MAAMlC,KAE5CoF,GACdzJ,KAAKoI,MAAM3E,OACJzD,KAAKoI,OACZpI,KAAKoI,MAAM1E,OAuBX6D,eAAerD,GACnB,MAAMgC,EAA0BJ,EAAKK,SAASjC,EAAM1B,OAAO9B,KAAKwD,OAC1DoC,EAA2B,GAUjC,MAT6B,eAAzBtG,KAAKuG,MAAMrE,WACXoE,EAAUjG,KAAKL,KAAKgH,KAAK1D,OACzBgD,EAAUjG,KAAKL,KAAKgH,KAAK9B,gBACzBoB,EAAUjG,KAAK6F,EAAIM,WAEnBF,EAAUjG,KAAKL,KAAKgH,KAAKxD,QACzB8C,EAAUjG,KAAKL,KAAKgH,KAAK7B,eACzBmB,EAAUjG,KAAK6F,EAAIO,UAEhBH,SC5TToD,cAKUC,EAAcC,GACtB5J,KAAK2J,MAAQA,EACb3J,KAAK4J,KAAOA,EACZ5J,KAAK4J,KAAK1J,UAAU,eAAgBF,KAAK2J,MAAME,aAAaC,KAAK9J,KAAK2J,QACtE3J,KAAK2J,MAAMzJ,UAAU,QAASF,KAAK4J,KAAKhB,YAAYkB,KAAK9J,KAAK4J,OAC9D5J,KAAK2J,MAAMzJ,UAAU,iBAAkBF,KAAK4J,KAAKtB,eAAewB,KAAK9J,KAAK4J,OAC1E5J,KAAK2J,MAAMzJ,UAAU,YAAaF,KAAK4J,KAAKd,gBAAgBgB,KAAK9J,KAAK4J,OACtE5J,KAAK2J,MAAMzJ,UAAU,OAAQF,KAAK4J,KAAKX,WAAWa,KAAK9J,KAAK4J,OAC5D5J,KAAK2J,MAAMzJ,UAAU,OAAQF,KAAK4J,KAAKV,WAAWY,KAAK9J,KAAK4J,OAC5D5J,KAAK2J,MAAMzJ,UAAU,MAAOF,KAAK4J,KAAKT,aAAaW,KAAK9J,KAAK4J,OAC7D5J,KAAK2J,MAAMzJ,UAAU,MAAOF,KAAK4J,KAAKT,aAAaW,KAAK9J,KAAK4J,OAC7D5J,KAAK2J,MAAMzJ,UAAU,aAAcF,KAAK4J,KAAKxG,WAAW0G,KAAK9J,KAAK4J,OAClE5J,KAAK2J,MAAMzJ,UAAU,aAAcF,KAAK4J,KAAKvG,WAAWyG,KAAK9J,KAAK4J,cCdpEG,UAAchK,cAGJiG,GACRC,QAJRjG,KA2TYgK,UAAaC,IAAmCA,EAAejK,KAAKuG,MAAM4B,YAC3EnI,KAAKuG,MAAMyB,QAAUhI,KAAKuG,MAAM4B,YAAc,GAvTjDnI,KAAKuG,MAAQkB,OAAOC,OAAO,GAAI1B,GAGnC6D,aAAanJ,GACT,IAAIuJ,EACAC,EACJ,GAAoB,YAAhBxJ,EAAKsD,OACLkG,EAAkB,UAClBD,EAAejK,KAAKmK,iBAAiBzJ,EAAMwJ,QACxC,GAAoB,UAAhBxJ,EAAKsD,OAAoB,CAChC,MAAMoG,EAAWpK,KAAKqK,gBAAgB3J,GACtCuJ,EAAevJ,EAAKwG,aAAa,IAAM,EACvCgD,EAAkBE,OACf,GAAoB,eAAhB1J,EAAKsD,OAAyB,CACrC,MAAAoG,SACIA,EADE5I,MAEFA,GACAxB,KAAKsK,qBAAqB5J,GAC9BuJ,EAAezI,EACf0I,EAAkBE,OAElBF,EAAkB,YAClBD,EAAejK,KAAKmK,iBAAiBzJ,EAAMwJ,GAE/CD,EAAe9F,OAAO8F,EAAajF,QAAQ,IAC3ChF,KAAKuG,MAAQ,IACNvG,KAAKuG,OACP2D,GAAkBD,GAEvBjK,KAAKS,OAAO,QAAS,CACjBuD,OAAQkG,EACR1B,YAAayB,IAEjB,IAAI1B,EAAWwB,EAAMQ,iBAAiB,CAClC/I,MAAOyI,EACPrG,IAAK5D,KAAKuG,MAAM3C,IAChBC,IAAK7D,KAAKuG,MAAM1C,MAEpB0E,EAAWwB,EAAMS,mBAAmBjC,GACpCvI,KAAKS,OAAO,iBAAkB,CAC1BuD,OAAQkG,EACR1B,YAAaD,IAIjB7F,WAAOlB,GACPxB,KAAKuG,MAAM7D,OAASlB,EAChBA,EACAxB,KAAKS,OAAO,aAAc,CACtBuD,OAAQ,SACR6E,aAAcrH,IAGlBxB,KAAKS,OAAO,aAAc,CACtBuD,OAAQ,SACR6E,aAAcrH,IAKtBU,cAAUV,GACVxB,KAAKuG,MAAMrE,UAAYV,EACvBxB,KAAKS,OAAO,YAAa,CACrBuD,OAAQ,YACR+E,YAAavH,IAIjBV,SAAKU,GACLxB,KAAKuG,MAAMzF,KAAOU,EAClBxB,KAAKS,OAAO,OAAQ,CAChBuD,OAAQ,OACR+E,YAAavH,IAEbxB,KAAKuG,MAAM3C,IAAM5D,KAAKuG,MAAM4B,YAC5BnI,KAAK0F,KAAO1F,KAAKuG,MAAM3C,KAEvB5D,KAAKuG,MAAM4B,UAAYnI,KAAKuG,MAAMyB,UAClChI,KAAK0F,KAAO1F,KAAKuG,MAAMyB,SAI3B3D,SAAK7C,GAIL,GAHqBiJ,EAGJjJ,EAHiBqC,EAGV7D,KAAKuG,MAAM1C,IAHYD,EAGP5D,KAAKuG,MAAM3C,MAFxC6G,EAAM5G,EAAMD,GAAO6G,EAAM,GAEqB,MAAM,IAAIhC,MAAM,yEAHxD,IAAIgC,EAAa5G,EAAaD,EAI/C5D,KAAKuG,MAAMlC,KAAO7C,EAClBxB,KAAKS,OAAO,OAAQ,CAChBuD,OAAQ,OACRwE,YAAahH,IAIjB6C,WACA,OAAOrE,KAAKuG,MAAMlC,KAGlBR,QAAIrC,GACJ,GAAIA,GAASxB,KAAKuG,MAAM3C,IACpB,MAAM,IAAI6E,MAAM,oDAEhBjH,EAAQxB,KAAKuG,MAAMyB,UACnBhI,KAAKyF,GAAKjE,EACVxB,KAAKS,OAAO,QAAS,CACjBuD,OAAQ,UACRwE,YAAahH,KAGrBxB,KAAKuG,MAAM1C,IAAMrC,EACjBxB,KAAKS,OAAO,MAAO,CACfuD,OAAQ,MACRwE,YAAahH,IAIjBqC,UACA,OAAO7D,KAAKuG,MAAM1C,IAGlBD,QAAIpC,GACJ,GAAIA,GAASxB,KAAKuG,MAAM1C,KAAOrC,GAASxB,KAAKuG,MAAMyB,QAC/C,MAAM,IAAIS,MAAM,oDAEI,WAApBzI,KAAKuG,MAAMzF,MAAqBU,EAAQxB,KAAKuG,MAAM4B,YACnDnI,KAAK0F,KAAOlE,EACZxB,KAAKS,OAAO,QAAS,CACjBuD,OAAQ,YACRwE,YAAahH,KAGrBxB,KAAKuG,MAAM3C,IAAMpC,EACjBxB,KAAKS,OAAO,MAAO,CACfuD,OAAQ,MACRwE,YAAahH,IAIjBoC,UACA,OAAO5D,KAAKuG,MAAM3C,IAGlB6B,OAAGjE,GACHxB,KAAKuG,MAAMyB,QAAUhI,KAAK0K,aAAalJ,GACvCxB,KAAKS,OAAO,QAAS,CACjBuD,OAAQ,UACRwE,YAAaxI,KAAKuG,MAAMyB,UAE5B,IAAIO,EAAWwB,EAAMQ,iBAAiB,CAClC/I,MAAOxB,KAAKuG,MAAMyB,QAClBpE,IAAK5D,KAAKuG,MAAM3C,IAChBC,IAAK7D,KAAKuG,MAAM1C,MAEpB0E,EAAWwB,EAAMS,mBAAmBjC,GACpCvI,KAAKS,OAAO,iBAAkB,CAC1BuD,OAAQ,UACRwE,YAAaD,IAIjBP,cACA,OAAOhI,KAAKuG,MAAMyB,QAGlBtC,SAAKlE,GACL,GAAwB,WAApBxB,KAAKuG,MAAMzF,KAAmB,OAClCd,KAAKuG,MAAM4B,UAAYhE,OAAOnE,KAAK2K,eAAenJ,GAC7CwD,QAAQ,IACbhF,KAAKS,OAAO,QAAS,CACjBuD,OAAQ,YACRwE,YAAaxI,KAAKuG,MAAM4B,YAE5B,IAAII,EAAWwB,EAAMQ,iBAAiB,CAClC/I,MAAOxB,KAAKuG,MAAM4B,UAClBvE,IAAK5D,KAAKuG,MAAM3C,IAChBC,IAAK7D,KAAKuG,MAAM1C,MAEpB0E,EAAWwB,EAAMS,mBAAmBjC,GACpCvI,KAAKS,OAAO,iBAAkB,CAC1BuD,OAAQ,YACRwE,YAAaD,IAIjBJ,gBACA,OAAOnI,KAAKuG,MAAM4B,oCAGY3G,GAC9B,IAAIoJ,EAAWpJ,EAGf,OAFAoJ,EAAWA,EAAW,EAAI,EAAIA,EAC9BA,EAAWA,EAAW,EAAI,EAAIA,EACvBA,2BAGoBpJ,MAC3BA,EAD4BoC,IAE5BA,EAF4BC,IAG5BA,IAEA,OAAQrC,EAAQoC,IAAQC,EAAMD,GAG1BiH,UAAUrJ,EAAe0I,EAAkB,WAC/C,IAAIU,EAAmBpJ,EAEvB,OADAoJ,GAAa5K,KAAKuG,MAAM1C,IAAM7D,KAAKuG,MAAM3C,IAClC5D,KAAKuG,MAAM3C,IAAM5D,KAAK8K,gBAAgBF,EAAUV,GAGnDG,gBAAgB3J,GACpB,MAAMuJ,EAAejK,KAAK+K,yBAAyBrK,GACnD,IAAIwJ,EAMJ,OAJIA,EADoB,WAApBlK,KAAKuG,MAAMzF,MAGOd,KAAKgK,UAAUC,GAFf,UAE2C,YAE1DC,EAGHI,qBAAqB5J,GACzB,IACIwJ,EADAD,EAAejK,KAAK+K,yBAAyBrK,GAQjD,OALIwJ,EADoB,WAApBlK,KAAKuG,MAAMzF,MAGOd,KAAKgK,UAAUC,GAFf,UAE2C,YAEjEA,EAAmC,cAApBC,EAAkClK,KAAK2K,eAAeV,GAAgBjK,KAAK0K,aAAaT,GAChG,CACHG,SAAUF,EACV1I,MAAOyI,GAIPa,gBAAgBtJ,EAAe0I,GACnC,IAAIU,EAAmBpJ,EACvB,QAAwBmE,IAApB3F,KAAKuG,MAAMlC,KAAoB,MAAM,IAAIoE,MAAM,+BACzB,MAApBuC,EAAuBJ,EAAW5K,KAAKuG,MAAMlC,KAMnD,GAJIuG,EADAI,EAAe,GAAK,GACThL,KAAKuG,MAAMlC,KAAO4G,KAAKC,KAAKF,GAE5BhL,KAAKuG,MAAMlC,KAAO4G,KAAKE,MAAMH,GAEpB,YAApBd,EAA+B,CAE3Bc,KADsBhL,KAAKuG,MAAM1C,IAAM7D,KAAKuG,MAAM3C,KAAO5D,KAAKuG,MAAMlC,OAEpEuG,EAAW5K,KAAKuG,MAAM3C,IAAM,EACtB5D,KAAKuG,MAAM1C,IAAMoH,KAAKG,IAAIpL,KAAKuG,MAAM3C,KACrC5D,KAAKuG,MAAM1C,KAGzB,MAAMwH,EAA6BrL,KAAKuG,MAAMlC,KAAKiH,WAC9CC,MAAM,KACNC,MACL,IAAIC,EAAW,EAKf,YAJe9F,IAAX0F,IACAI,EAAWzL,KAAKuG,MAAMlC,KAAKiH,WACtBI,SAAS,KAAQL,EAAOxG,OAAU,GAEpCV,OAAOyG,EAAS5F,QAAQyG,IAG3Bf,aAAa1C,GACjB,OAAIA,EAAUhI,KAAKuG,MAAM1C,IACd7D,KAAKuG,MAAM1C,IAElBmE,EAAUhI,KAAKuG,MAAM3C,IACd5D,KAAKuG,MAAM3C,IAEE,WAApB5D,KAAKuG,MAAMzF,MAAqBkH,GAAWhI,KAAKuG,MAAM4B,UAC/CnI,KAAKuG,MAAM4B,UAAYnI,KAAKuG,MAAMlC,KAEtC2D,EAGH2C,eAAexC,GACnB,OAAIA,EAAYnI,KAAKuG,MAAM3C,IAChB5D,KAAKuG,MAAM3C,IAElBuE,GAAanI,KAAKuG,MAAMyB,QACjBhI,KAAKuG,MAAMyB,QAAUhI,KAAKuG,MAAMlC,KAEpC8D,EAGHgC,iBAAiBzJ,EAAkBwJ,GACvC,QAAwBvE,IAApBjF,EAAKwG,WACL,MAAM,IAAIuB,MAAM,sCAEGkD,MAAhBC,EAAgBD,EAAkBE,EACrCC,EAAgBC,EAAaC,GAAiBtL,EAAKwG,WAEvD,IAAI+E,GAAeF,GADLJ,EAAmBC,GACQE,EAAiBE,GACpDH,EACNI,EAAclC,EAAMS,mBAAmByB,GACvC,MAAMhC,EAAejK,KAAK6K,UAAUoB,EAAa/B,GACjD,MAA2B,YAApBA,EAAgClK,KAAK0K,aAAaT,GAAgBjK,KAAK2K,eAAeV,GAGzFc,yBAAyBrK,GAC7B,QAAwBiF,IAApBjF,EAAKwG,WACL,MAAM,IAAIuB,MAAM,sCAEpB,MAAOoD,EAAeC,EAAgBH,GAAoBjL,EAAKwG,WAC/D,IAAIgF,GAAuBP,EAAmBG,GAAkBD,EAEhE,OADAK,EAAsBnC,EAAMS,mBAAmB0B,GACxClM,KAAK6K,UAAUqB,UCzTxBC,cASUpG,EAAmBqG,GAC3BpM,KAAK+F,KAAOA,EACZ/F,KAAK2J,MAAQ,IAAII,EAAMqC,GACvBpM,KAAK4J,KAAO,IAAI9D,EAAK9F,KAAK+F,KAAMqG,GAChCpM,KAAK4J,KAAK1I,OACVlB,KAAKqM,UAAY,IAAI3C,EAAU1J,KAAK2J,MAAO3J,KAAK4J,MAGpDvG,aAEI,OADArD,KAAK2J,MAAMjH,QAAS,GACb,EAGXU,aAEI,OADApD,KAAK2J,MAAMjH,QAAS,GACb,EAGXoG,gBAAgBtH,GAEZ,OADAxB,KAAK2J,MAAMzH,UAAYV,GAChB,EAGXyH,WAAWzH,GAEP,OADAxB,KAAK2J,MAAM7I,KAAOU,GACX,EAGX0H,WAAW1H,GAEP,OADAxB,KAAK2J,MAAMtF,KAAO7C,GACX,EAGX8K,SAAS9K,GAEL,OADAxB,KAAK2J,MAAMlE,GAAKjE,GACT,EAGX+K,WAAW/K,GAEP,OADAxB,KAAK2J,MAAMjE,KAAOlE,GACX,EAGXgL,UAAUhL,GAEN,OADAxB,KAAK2J,MAAM9F,IAAMrC,GACV,EAGXiL,UAAUjL,GAEN,OADAxB,KAAK2J,MAAM/F,IAAMpC,GACV,EAGXkL,SACI,OAAO1M,KAAK2J,MAAM9F,IAGtB8I,SACI,OAAO3M,KAAK2J,MAAM/F,IAGtBgJ,aACI,OAAO5M,KAAK2J,MAAM3B,QAGtB6E,eACI,OAAO7M,KAAK2J,MAAMxB,UAGtB2E,UACI,OAAO9M,KAAK2J,MAAMtF,gBClFf0I,GACP,MAAMC,EAAU,GACVC,EAAU,CACZ/L,KAAM,SAAU8E,GACZ,MAAMoG,EAAWW,EAAEG,OAAO,CACtBxK,QAAQ,EACRmB,IAAK,IACLD,IAAK,EACLS,KAAM,EACNvD,KAAM,SACNkH,QAAS,IACTG,UAAW,EACXjG,UAAW,aACXwG,WAAY,aAEZC,aAAc,cAEf3C,GAEH,OAAOhG,KAAKmN,MAAK,WACb,MAAMC,EAAML,EAAE/M,MACd,GAAIoM,EAAS/H,KAAO+H,EAASvI,IAAMuI,EAASxI,IAAK,MAAM,IAAI6E,MAAM,yDACzB,GAApC2D,EAAS/H,MAAQ,EAAG,MAAM,IAAIoE,MAAM,+BACjB2D,GAAnBA,EAASpE,QAAUoE,EAASvI,IAAK,MAAM,IAAI4E,MAAM,mDACd,GAAnC2D,EAASjE,UAAYiE,EAASxI,IAAK,MAAM,IAAI6E,MAAM,kDAC1CuE,EAAL3M,KAAK,IAAI8L,EAAOiB,EAAI,GAAIhB,QAGxC/I,WAAY,WACR,IAAIgK,EACJL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGjBD,EAAOhK,cAEXD,WAAY,WACR,IAAIiK,EACJL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGjBD,EAAOjK,cAEX0F,gBAAiB,SAAUtH,GACvB,IAAI6L,EACJL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGjBD,EAAOvE,gBAAgBtH,IAE3ByH,WAAY,SAAUzH,GAClB,IAAI6L,EACJL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGjBD,EAAOpE,WAAWzH,IAEtB0H,WAAY,SAAU1H,GAClB,IAAI6L,EAMJ,GALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGbnJ,OAAOoJ,MAAM/L,GAAQ,MAAM,IAAIiH,MAAM,2BAClCS,EAAAA,WAAW1H,IAEtB8K,SAAU,SAAU9K,GAChB,IAAI6L,EAMJ,GALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGbnJ,OAAOoJ,MAAM/L,GAAQ,MAAM,IAAIiH,MAAM,8BACzBjH,EAAT8K,SAAS9K,IAEpB+K,WAAY,SAAU/K,GAClB,IAAI6L,EAMJ,GALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGbnJ,OAAOoJ,MAAM/L,GAAQ,MAAM,IAAIiH,MAAM,gCAClC8D,EAAAA,WAAW/K,IAEtBgL,UAAW,SAAUhL,GACjB,IAAI6L,EAMJ,GALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGbnJ,OAAOoJ,MAAM/L,GAAQ,MAAM,IAAIiH,MAAM,gCACzC4E,EAAOb,UAAUhL,IAErBkL,OAAQ,WACJ,IAAIW,EAMJ,OALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGVD,EAAOX,UAElBC,OAAQ,WACJ,IAAIU,EAMJ,OALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGVD,EAAOV,UAElBC,WAAY,WACR,IAAIS,EAMJ,OALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGVD,EAAOT,cAElBC,aAAc,WACV,IAAIQ,EAMJ,OALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGVD,EAAOR,gBAElBC,QAAS,WACL,IAAIO,EAMJ,OALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGVD,EAAOP,WAElBL,UAAW,SAAUjL,GACjB,IAAI6L,EAMJ,GALAL,EAAQrM,SAAS2M,IACTA,EAAEvH,OAAS/F,KAAK,KAChBqN,EAASC,MAGbnJ,OAAOoJ,MAAM/L,GAAQ,MAAM,IAAIiH,MAAM,gCACzC4E,EAAOZ,UAAUjL,KAKzBuL,EAAES,GAAGrB,OAAS,SAAUsB,GACpB,OAAIR,EAAQQ,GACDR,EAAQQ,GAAQC,MAAM1N,KAAM2N,MAAMC,UAAUzG,MAAM0G,KAAKC,UAAW,IAEvD,iBAAXL,GAAwBA,GAGnCV,EAAEgB,MAAM,kBAAAN,EAAA,oCACR,MAHWR,EAAQ/L,KAAKwM,MAAM1N,KAAM8N,aAK3CE,YC7CDC,oBAvGgBlN,EAAsBqL,GArBtCpM,KAoEIkO,wBAA2B7L,IACvBA,EAAE2B,OAAOmK,QAAUnO,KAAKqN,QAAQlB,OAAO,cAAgBnM,KAAKqN,QAAQlB,OAAO,eArEnFnM,KAwEIoO,0BAA6B/L,IACzBA,EAAE2B,OAAOmK,QAAUnO,KAAKqN,QAAQlB,OAAO,kBAAmB,YAAcnM,KAAKqN,QAAQlB,OAAO,kBAAmB,eAzEvHnM,KA4EIqO,uBAA0BhM,IAClBA,EAAE2B,OAAOmK,SACTnO,KAAKqN,QAAQlB,OAAO,aAAc,UAClCnM,KAAKsO,YAAYzN,SACZ0N,YAAY,iCAEjBvO,KAAKqN,QAAQlB,OAAO,aAAc,UAClCnM,KAAKsO,YAAYzN,SACZ2N,SAAS,iCApF1BxO,KAwFIyO,sBAAyBpM,IACrB,IACIrC,KAAKqN,QAAQlB,OAAO,aAAcuC,WAAWrM,EAAE2B,OAAOxC,QACtD,MAAM6C,EAAOrE,KAAKqN,QAAQlB,OAAO,WACjCnM,KAAK2O,UAAUC,KAAK,OAAQlN,OAAO2C,IACnCrE,KAAKsO,YAAYM,KAAK,OAAQlN,OAAO2C,IACvC,MAAO0J,GACL1L,EAAE2B,OAAOxC,MAAQxB,KAAKqN,QAAQlB,OAAO,aA/FjDnM,KAmGI6O,oBAAuBxM,IACnBrC,KAAKqN,QAAQlB,OAAO,WAAYuC,WAAWrM,EAAE2B,OAAOxC,SApG5DxB,KAuGI8O,sBAAyBzM,IACrBrC,KAAKqN,QAAQlB,OAAO,aAAcuC,WAAWrM,EAAE2B,OAAOxC,SAxG9DxB,KA2GI+O,qBAAwB1M,IACpB,IACIrC,KAAKqN,QAAQlB,OAAO,YAAauC,WAAWrM,EAAE2B,OAAOxC,QACvD,MAAOuM,GACL1L,EAAE2B,OAAOxC,MAAQxB,KAAKqN,QAAQlB,OAAO,YA/GjDnM,KAmHIgP,qBAAwB3M,IACpB,IACIrC,KAAKqN,QAAQlB,OAAO,YAAauC,WAAWrM,EAAE2B,OAAOxC,QACvD,MAAOuM,GACL1L,EAAE2B,OAAOxC,MAAQxB,KAAKqN,QAAQlB,OAAO,YAjGzCnM,KAAKe,QAAUgM,EAAEhM,GACjBf,KAAKkB,KAAKkL,GAGdlL,KAAKkL,GACDpM,KAAKiP,cAAgBlC,EAAE/M,KAAKe,QAAQmO,KAAK,4CACzClP,KAAKmP,gBAAkBpC,EAAE/M,KAAKe,QAAQmO,KAAK,8CAC3ClP,KAAKoP,aAAerC,EAAE/M,KAAKe,QAAQmO,KAAK,2CACxClP,KAAKqP,WAAatC,EAAE/M,KAAKe,QAAQmO,KAAK,0CACtClP,KAAK2O,SAAW5B,EAAE/M,KAAKe,QAAQmO,KAAK,wCACpClP,KAAKsO,WAAavB,EAAE/M,KAAKe,QAAQmO,KAAK,0CACtClP,KAAKsP,UAAYvC,EAAE/M,KAAKe,QAAQmO,KAAK,yCACrClP,KAAKuP,UAAYxC,EAAE/M,KAAKe,QAAQmO,KAAK,yCACrC,MAAMlJ,EAAUyB,OAAOC,OAAO0E,EAAU,CACpC1D,WAAalH,IACTxB,KAAK2O,UAAUlE,IAAIjJ,IAEvBmH,aAAenH,IACXxB,KAAKsO,YAAY7D,IAAIjJ,MAG7BxB,KAAKqN,OAASN,EAAE/M,KAAKe,QAAQmO,KAAK,YAC7B/C,OAAOnG,GACZhG,KAAKqI,QAGTA,QACIrI,KAAKiP,eAAeO,GAAG,QAASxP,KAAKkO,yBACrClO,KAAKmP,iBAAiBK,GAAG,QAASxP,KAAKoO,2BACvCpO,KAAKoP,cAAcI,GAAG,QAASxP,KAAKqO,wBAC/BrO,KAAKoP,cAAcK,GAAG,aACvBzP,KAAKsO,YAAYzN,SACZ2N,SAAS,+BAElBxO,KAAKqP,YAAYG,GAAG,SAAUxP,KAAKyO,uBACnCzO,KAAKqP,YAAY5E,IAAI/I,OAAO1B,KAAKqN,QAAQlB,OAAO,aAChDnM,KAAK2O,UAAUa,GAAG,SAAUxP,KAAK6O,qBACjC7O,KAAK2O,UAAUlE,IAAI/I,OAAO1B,KAAKqN,QAAQlB,OAAO,gBAC9CnM,KAAKsO,YAAYkB,GAAG,SAAUxP,KAAK8O,uBACnC9O,KAAKsO,YAAY7D,IAAI/I,OAAO1B,KAAKqN,QAAQlB,OAAO,kBAChDnM,KAAKsP,WAAWE,GAAG,SAAUxP,KAAK+O,sBAClC/O,KAAKsP,WAAW7E,IAAI/I,OAAO1B,KAAKqN,QAAQlB,OAAO,YAC/CnM,KAAKuP,WAAWC,GAAG,SAAUxP,KAAKgP,sBAClChP,KAAKuP,WAAW9E,IAAI/I,OAAO1B,KAAKqN,QAAQlB,OAAO,cC/DvDY,GAAE,WACE,MAAMX,EAAoB,CACtB,CACI1J,QAAQ,EACRR,UAAW,aACX2B,IAAK,IACLD,IAAK,EACLS,KAAM,EACNvD,KAAM,SACNkH,QAAS,IACTG,UAAW,EACXO,WAAY,aAEZC,aAAc,cAGlB,CACIjG,QAAQ,EACRR,UAAW,WACX2B,IAAK,GACLD,IAAK,EACLS,KAAM,EACNvD,KAAM,SACNkH,QAAS,GACTG,UAAW,GACXO,WAAY,aAEZC,aAAc,cAGlB,CACIjG,QAAQ,EACRR,UAAW,aACX2B,IAAK,IACLD,KAAK,IACLS,KAAM,GACNvD,KAAM,SACNkH,QAAS,IACTG,WAAW,EACXO,WAAY,aAEZC,aAAc,eAItBoE,EAAE,oBACGI,MADL,CACWuC,EAAO3O,KAEV,IAAI4O,EAAe5O,EAASqL,EAASsD","sources":["src/slider/Observer.ts","src/slider/subView/HeadBubble.ts","src/slider/subView/ViewHead.ts","src/slider/subView/Scale.ts","src/slider/subView/Line.ts","src/slider/View.ts","src/slider/Presenter.ts","src/slider/Model.ts","src/slider/Slider.ts","src/slider/jquery.slider.js","src/blocks/slider-template/slider-template.ts","src/index/index.ts"],"sourcesContent":["import {ObserverItem} from './types/types';\r\n\r\ntype ObserverStore<T> = {\r\n    [K in keyof T]: ObserverItem<T[K]>[];\r\n};\r\n\r\nabstract class Observer<T extends Record<string, unknown>> {\r\n    private readonly observers: ObserverStore<T>;\r\n\r\n    protected constructor() {\r\n        this.observers = {} as ObserverStore<T>;\r\n    }\r\n\r\n    subscribe<K extends keyof T>(\r\n        eventType: K,\r\n        observer: ObserverItem<T[K]>\r\n    ): void {\r\n        if (!this.observers[eventType]) {\r\n            this.observers[eventType] = [observer];\r\n        } else {\r\n            this.observers[eventType].push(observer);\r\n        }\r\n    }\r\n\r\n    unsubscribe<K extends keyof T>(\r\n        eventType: K,\r\n        observer: ObserverItem<T[K]>\r\n    ): void {\r\n        if (this.observers.eventType) {\r\n            this.observers[eventType] = this.observers[eventType].filter(\r\n                (item) => item !== observer\r\n            );\r\n        }\r\n    }\r\n\r\n    protected notify<K extends keyof T>(eventType: K, data: T[K]): void {\r\n        this.observers[eventType]?.forEach((observer) => {\r\n            observer(data);\r\n        });\r\n    }\r\n}\r\n\r\nexport {Observer};\r\n","import {HeadType} from '../types/types';\r\n\r\nclass HeadBubble {\r\n    element: HTMLElement;\r\n\r\n    parent: HTMLElement;\r\n\r\n    type: HeadType\r\n\r\n    constructor(parent: HTMLElement, type: HeadType) {\r\n        this.parent = parent;\r\n        this.type = type;\r\n        this.element = document.createElement('span');\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.element.classList.add('slider__head-bubble');\r\n        this.element.setAttribute('data-type', 'bubble');\r\n        if (this.type === 'to') {\r\n            this.element.setAttribute('data-valueTo', 'true');\r\n        } else {\r\n            this.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        this.parent.append(this.element);\r\n    }\r\n\r\n    update(value: number): void {\r\n        this.element.textContent = String(value);\r\n    }\r\n\r\n    onActive(): void {\r\n        this.element.classList.add('slider__head-bubble_isGrabbing');\r\n    }\r\n\r\n    offActive(): void {\r\n        this.element.classList.remove('slider__head-bubble_isGrabbing');\r\n    }\r\n\r\n    show(): void {\r\n        this.element.classList.add('slider__head-bubble_active');\r\n    }\r\n\r\n    hide(): void {\r\n        this.element.classList.remove('slider__head-bubble_active');\r\n    }\r\n}\r\n\r\nexport default HeadBubble;\r\n","import HeadBubble from './HeadBubble';\r\nimport {HeadType, ViewHeadCreate} from '../types/types';\r\n\r\nclass ViewHead {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    bubble: HeadBubble;\r\n\r\n    type: HeadType;\r\n\r\n    constructor({\r\n        parent,\r\n        direction,\r\n        value,\r\n        bubbleValue,\r\n        type\r\n    }: ViewHeadCreate) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.type = type;\r\n        this.bubble = new HeadBubble(this.element, this.type);\r\n        this.updatePosition(value);\r\n        this.updateBubble(bubbleValue);\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        this.element.classList.add('slider__head');\r\n        if (this.type === 'to') {\r\n            this.element.setAttribute('data-valueTo', 'true');\r\n        } else {\r\n            this.element.setAttribute('data-valueFrom', 'true');\r\n        }\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__head')\r\n            : this.element.classList.add('slider__head', 'slider__head_direction_vertical');\r\n        this.parent.append(this.element);\r\n        this.element.addEventListener('mousedown', this.handleHeadStart);\r\n        this.element.addEventListener('touchstart', this.handleHeadStart);\r\n    }\r\n\r\n    handleHeadStart = (e: MouseEvent | TouchEvent): void => {\r\n        this.onActive();\r\n        const headEvent = new CustomEvent('headStart', {\r\n            detail: {\r\n                data: e\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    onActive(): void {\r\n        this.element.classList.add('slider__head_active');\r\n        this.bubble.onActive();\r\n    }\r\n\r\n    offActive(): void {\r\n        this.element.classList.remove('slider__head_active');\r\n        this.bubble.offActive();\r\n    }\r\n\r\n    removeHead(): boolean {\r\n        this.element.remove();\r\n        return true;\r\n    }\r\n\r\n    updatePosition(newPos: number): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.style.left = `${newPos * 100}%`;\r\n        } else {\r\n            this.element.style.top = `${newPos * 100}%`;\r\n        }\r\n    }\r\n\r\n    updateBubble(value: number): void {\r\n        if (this.bubble) {\r\n            this.bubble.update(value);\r\n        }\r\n    }\r\n\r\n    showBubble(): void {\r\n        this.bubble.show();\r\n    }\r\n\r\n    hideBubble(): void {\r\n        this.bubble.hide();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    high(): void {\r\n        this.element.classList.add('slider__head_z_high');\r\n    }\r\n\r\n    down(): void {\r\n        this.element.classList.remove('slider__head_z_high');\r\n    }\r\n}\r\n\r\nexport default ViewHead;\r\n","import {ScaleCreate} from '../types/types';\r\n\r\nclass Scale {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    constructor({\r\n        parent,\r\n        direction,\r\n        min,\r\n        max\r\n    }: ScaleCreate) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.element = document.createElement('div');\r\n        this.init(min, max);\r\n    }\r\n\r\n    init(min: number, max: number): void {\r\n        this.direction === 'horizontal'\r\n            ? this.element.classList.add('slider__scale')\r\n            : this.element.classList.add('slider__scale', 'slider__scale_direction_vertical');\r\n        this.parent.append(this.element);\r\n        const step = (max - min) / 4;\r\n        for (let i = 0; i <= 100; i += 25) {\r\n            const dashValue = min + (i / 25) * step;\r\n            const dash = document.createElement('div');\r\n            dash.classList.add('slider__dash');\r\n            const scaleNumber = document.createElement('div');\r\n            scaleNumber.classList.add('slider__scale-number');\r\n            scaleNumber.dataset.value = String(dashValue);\r\n            scaleNumber.addEventListener('click', this.handleScaleClick);\r\n            if (this.direction === 'horizontal') {\r\n                dash.style.left = `${i}%`;\r\n                scaleNumber.style.left = `${i}%`;\r\n                dash.append(scaleNumber);\r\n                this.element.append(dash);\r\n            } else {\r\n                dash.style.top = `${i}%`;\r\n                dash.classList.add('slider__dash_direction_vertical');\r\n                scaleNumber.style.top = `${i}%`;\r\n                scaleNumber.classList.add('slider__scale-number_direction_vertical');\r\n                dash.append(scaleNumber);\r\n                this.element.append(dash);\r\n            }\r\n            const numbers = this.element.querySelectorAll('.slider__scale-number');\r\n            const number = numbers[numbers.length - 1];\r\n            if (i === 0) {\r\n                number.innerHTML = String(min);\r\n            } else {\r\n                number.innerHTML = Number.isInteger(dashValue)\r\n                    ? String(dashValue)\r\n                    : dashValue.toFixed(2);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleScaleClick = (e: MouseEvent | TouchEvent): void => {\r\n        const node = e.target;\r\n        if (!(node instanceof HTMLElement)) return;\r\n        const headEvent = new CustomEvent('scaleClick', {\r\n            detail: {\r\n                event: e,\r\n                value: Number(node.dataset.value)\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    removeScale(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get leftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get topCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Scale;\r\n","import {LineCreate} from '../types/types';\r\n\r\nclass Line {\r\n    parent: HTMLElement;\r\n\r\n    direction: string;\r\n\r\n    element: HTMLElement;\r\n\r\n    progressBar: HTMLElement;\r\n\r\n    type: string;\r\n\r\n    constructor({\r\n        parent,\r\n        direction,\r\n        type\r\n    }: LineCreate) {\r\n        this.parent = parent;\r\n        this.direction = direction;\r\n        this.type = type;\r\n        this.element = document.createElement('div');\r\n        this.progressBar = document.createElement('span');\r\n        this.init();\r\n    }\r\n\r\n    init(): void {\r\n        if (this.direction === 'horizontal') {\r\n            this.element.classList.add('slider__line');\r\n            this.progressBar.classList.add('slider__line-progress');\r\n        } else {\r\n            this.element.classList.add('slider__line', 'slider__line_direction_vertical');\r\n            this.progressBar.classList.add('slider__line-progress', 'slider__line-progress_direction_vertical');\r\n        }\r\n        this.element.append(this.progressBar);\r\n        this.parent.append(this.element);\r\n        this.element.addEventListener('headStart', this.handleHeadStart);\r\n        this.element.addEventListener('scaleClick', this.handleScaleClick);\r\n        this.element.addEventListener('click', this.handleLineClick);\r\n    }\r\n\r\n    handleHeadStart = (e: CustomEvent): void => {\r\n        const headEvent = new CustomEvent('headStart', {\r\n            detail: {\r\n                data: e.detail\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    handleScaleClick = (e: CustomEvent): void => {\r\n        const headEvent = new CustomEvent('scaleClick', {\r\n            detail: {\r\n                data: e.detail\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    handleLineClick = (e: MouseEvent | TouchEvent): void => {\r\n        if (e.target !== this.element) {\r\n            return;\r\n        }\r\n        const headEvent = new CustomEvent('lineClick', {\r\n            detail: {\r\n                data: {\r\n                    event: e\r\n                }\r\n            }\r\n        });\r\n        this.parent.dispatchEvent(headEvent);\r\n    };\r\n\r\n    set Type(type: string) {\r\n        this.type = type;\r\n    }\r\n\r\n    progressValue(to: HTMLElement, from: HTMLElement | undefined): void {\r\n        if (this.direction === 'horizontal') {\r\n            if (this.type === 'single') {\r\n                this.progressBar.style.width = to.style.left;\r\n            } else if (from !== undefined) {\r\n                this.progressBar.style.width = `${parseInt(to.style.left, 10) - parseInt(from.style.left, 10)}%`;\r\n                this.progressBar.style.left = from.style.left;\r\n            }\r\n        } else if (this.type === 'single') {\r\n            this.progressBar.style.height = to.style.top;\r\n        } else if (from !== undefined) {\r\n            this.progressBar.style.height = `${parseInt(to.style.top, 10) - parseInt(from.style.top, 10)}%`;\r\n            this.progressBar.style.top = from.style.top;\r\n        }\r\n    }\r\n\r\n    removeLine(): void {\r\n        this.element.remove();\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.getBoundingClientRect().width;\r\n    }\r\n\r\n    get leftCoordinate(): number {\r\n        return this.element.getBoundingClientRect().left;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.getBoundingClientRect().height;\r\n    }\r\n\r\n    get topCoordinate(): number {\r\n        return this.element.getBoundingClientRect().top;\r\n    }\r\n}\r\n\r\nexport default Line;\r\n","import {Observer} from './Observer';\r\nimport ViewHead from './subView/ViewHead';\r\nimport Scale from './subView/Scale';\r\nimport Line from './subView/Line';\r\nimport {\r\n    State, TargetType, ViewEvents\r\n} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass View extends Observer<ViewEvents> {\r\n    private readonly elem: HTMLElement;\r\n\r\n    private state: State;\r\n\r\n    private head: ViewHead;\r\n\r\n    private scale: Scale;\r\n\r\n    private line: Line;\r\n\r\n    private head2?: ViewHead;\r\n\r\n    private handleSwipe: (event: (MouseEvent | TouchEvent)) => Array<number>;\r\n\r\n    constructor(elem: HTMLElement, options: State) {\r\n        super();\r\n        this.elem = elem;\r\n        this.handleSwipe = () => [];\r\n        this.state = Object.assign({}, options);\r\n        this.line = new Line({\r\n            parent: this.elem,\r\n            direction: this.state.direction,\r\n            type: this.state.type\r\n        });\r\n        this.scale = new Scale({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            value: headStartPos,\r\n            bubbleValue: this.state.valueTo,\r\n            type: 'to'\r\n        });\r\n    }\r\n\r\n    init(): void {\r\n        if (this.state.type === 'double') {\r\n            const head2StartPos: number = this.calcHeadStartPosition(this.state.valueFrom);\r\n            this.head2 = new ViewHead({\r\n                parent: this.line.element,\r\n                direction: this.state.direction,\r\n                value: head2StartPos,\r\n                bubbleValue: this.state.valueFrom,\r\n                type: 'from'\r\n            });\r\n        }\r\n        if (this.state.bubble) {\r\n            this.head.showBubble();\r\n            if (this.state.type === 'double' && this.head2 !== undefined) {\r\n                this.head2.showBubble();\r\n            }\r\n        }\r\n        this.line.progressValue(this.head.element, this.head2?.element);\r\n        this.changeZIndex();\r\n        this.setup();\r\n    }\r\n\r\n    changePosition(data: NotifyData): void {\r\n        let position = 0;\r\n        if (data.valueNumber !== undefined) {\r\n            position = data.valueNumber;\r\n        } else {\r\n            throw new Error('Новое значение не определено');\r\n        }\r\n        if (data.target === 'valueTo') {\r\n            this.head.updatePosition(position);\r\n            this.head.updateBubble(this.state.valueTo);\r\n            this.state.onChangeTo(this.state.valueTo);\r\n            this.line.progressValue(this.head.element, this.head2?.element);\r\n        } else if (data.target === 'valueFrom' && this.head2 !== undefined) {\r\n            this.head2.updatePosition(position);\r\n            this.head2.updateBubble(this.state.valueFrom);\r\n            this.state.onChangeFrom(this.state.valueFrom);\r\n            this.line.progressValue(this.head.element, this.head2.element);\r\n        } else {\r\n            throw new Error('Head2 не существует');\r\n        }\r\n    }\r\n\r\n    hideBubble(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueBoolean: data.valueBoolean\r\n        });\r\n        this.head.hideBubble();\r\n        this.head2?.hideBubble();\r\n    }\r\n\r\n    showBubble(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueBoolean: data.valueBoolean\r\n        });\r\n        this.head.showBubble();\r\n        this.head2?.showBubble();\r\n    }\r\n\r\n    changeDirection(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueString: data.valueString\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    changeType(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueString: data.valueString\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        delete this.head2;\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    changeStep(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueNumber: data.valueNumber\r\n        });\r\n    }\r\n\r\n    changeMaxMin(data: NotifyData): void {\r\n        this.updateState({\r\n            target: data.target,\r\n            valueNumber: data.valueNumber\r\n        });\r\n        this.head.removeHead();\r\n        this.head2?.removeHead();\r\n        this.scale.removeScale();\r\n        this.line.removeLine();\r\n        this.reInit();\r\n    }\r\n\r\n    updateState(data: NotifyData): void {\r\n        const target = data.target;\r\n        const value = View.getValueFromData(data);\r\n        this.state = {\r\n            ...this.state,\r\n            [target]: value\r\n        };\r\n    }\r\n\r\n    private reInit(): void {\r\n        this.line = new Line({\r\n            parent: this.elem,\r\n            direction: this.state.direction,\r\n            type: this.state.type\r\n        });\r\n        this.scale = new Scale({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        const headStartPos = this.calcHeadStartPosition(this.state.valueTo);\r\n        this.head = new ViewHead({\r\n            parent: this.line.element,\r\n            direction: this.state.direction,\r\n            value: headStartPos,\r\n            bubbleValue: this.state.valueTo,\r\n            type: 'to'\r\n        });\r\n        this.init();\r\n    }\r\n\r\n    private setup(): void {\r\n        this.elem.addEventListener('headStart', this.handleHeadStart);\r\n        this.elem.addEventListener('scaleClick', this.handleScaleClick);\r\n        this.elem.addEventListener('lineClick', this.handleLineClick);\r\n    }\r\n\r\n    private static getValueFromData(data: NotifyData) {\r\n        let value;\r\n        Object.entries(data)\r\n            .forEach((key) => {\r\n                if (key[0] !== 'target') {\r\n                    value = key[1];\r\n                }\r\n            });\r\n        return value;\r\n    }\r\n\r\n    private calcHeadStartPosition(value: number): number {\r\n        return (value - this.state.min) / (this.state.max - this.state.min);\r\n    }\r\n\r\n    private static getEvent(event: MouseEvent | TouchEvent): Touch | MouseEvent {\r\n        if (event instanceof TouchEvent) {\r\n            return event.touches[0];\r\n        }\r\n        return event;\r\n    }\r\n\r\n    private handleHeadStart = (e: CustomEvent): Array<number> => {\r\n        const evt: MouseEvent | Touch = View.getEvent(e.detail.data.data);\r\n        const target = evt.target;\r\n        if (!(target instanceof HTMLElement)) return [];\r\n        const updatedHead: TargetType = target.hasAttribute('data-valueFrom') ? 'valueFrom' : 'valueTo';\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(target.getBoundingClientRect().left);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(target.getBoundingClientRect().top);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        this.handleSwipe = (event: MouseEvent | TouchEvent): Array<number> => {\r\n            return this.swipeAction(event, dataArray, updatedHead);\r\n        };\r\n        document.addEventListener('touchmove', this.handleSwipe, {passive: false});\r\n        document.addEventListener('mousemove', this.handleSwipe);\r\n        document.addEventListener('touchend', this.handleSwipeEnd);\r\n        document.addEventListener('mouseup', this.handleSwipeEnd);\r\n        return dataArray;\r\n    };\r\n\r\n    private swipeAction = (event: MouseEvent | TouchEvent, dataArray: Array<number>,\r\n        updatedHead: TargetType):\r\n        Array<number> => {\r\n        event.preventDefault();\r\n        const evtSwipe: MouseEvent | Touch = View.getEvent(event);\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.width);\r\n            dataArray.push(this.line.leftCoordinate);\r\n            dataArray.push(evtSwipe.clientX);\r\n        } else {\r\n            dataArray.push(this.line.height);\r\n            dataArray.push(this.line.topCoordinate);\r\n            dataArray.push(evtSwipe.clientY);\r\n        }\r\n        dataArray.push(this.head.width / 2);\r\n        this.notify('calcPosition', {\r\n            valueArray: dataArray.slice(),\r\n            target: updatedHead\r\n        });\r\n        dataArray.splice(2, dataArray.length - 2);\r\n        return dataArray;\r\n    };\r\n\r\n    private handleSwipeEnd = (): boolean => {\r\n        this.onEndWork();\r\n        document.removeEventListener('touchmove', this.handleSwipe);\r\n        document.removeEventListener('mousemove', this.handleSwipe);\r\n        document.removeEventListener('touchend', this.handleSwipeEnd);\r\n        document.removeEventListener('mouseup', this.handleSwipeEnd);\r\n        return true;\r\n    };\r\n\r\n    private onEndWork(): void {\r\n        this.head.offActive();\r\n        this.head2?.offActive();\r\n        this.changeZIndex();\r\n    }\r\n\r\n    private changeZIndex() {\r\n        const isInCorner = (): boolean => {\r\n            return this.state.valueTo >= (this.state.max - this.state.step * 2);\r\n        };\r\n        if (this.head2 && isInCorner()) {\r\n            this.head2.high();\r\n        } else if (this.head2) {\r\n            this.head2.down();\r\n        }\r\n    }\r\n\r\n    private handleScaleClick = (event: CustomEvent): void => {\r\n        const dataArray: number[] = this.scaleClickData(event);\r\n        dataArray.push(event.detail.data.value);\r\n        this.notify('calcPosition', {\r\n            target: 'value',\r\n            valueArray: dataArray\r\n        });\r\n        this.changeZIndex();\r\n    };\r\n\r\n    private handleLineClick = (event: CustomEvent): void => {\r\n        const dataArray: number[] = this.scaleClickData(event);\r\n        this.notify('calcPosition', {\r\n            target: 'valueClick',\r\n            valueArray: dataArray\r\n        });\r\n        this.changeZIndex();\r\n    };\r\n\r\n    private scaleClickData(event: CustomEvent): Array<number> {\r\n        const evt: MouseEvent | Touch = View.getEvent(event.detail.data.event);\r\n        const dataArray: Array<number> = [];\r\n        if (this.state.direction === 'horizontal') {\r\n            dataArray.push(this.line.width);\r\n            dataArray.push(this.line.leftCoordinate);\r\n            dataArray.push(evt.clientX);\r\n        } else {\r\n            dataArray.push(this.line.height);\r\n            dataArray.push(this.line.topCoordinate);\r\n            dataArray.push(evt.clientY);\r\n        }\r\n        return dataArray;\r\n    }\r\n}\r\n\r\nexport {View};\r\n","import {Model} from './Model';\r\nimport {View} from './View';\r\n\r\nclass Presenter {\r\n    private readonly model: Model;\r\n\r\n    private readonly view: View;\r\n\r\n    constructor(model: Model, view: View) {\r\n        this.model = model;\r\n        this.view = view;\r\n        this.view.subscribe('calcPosition', this.model.calcPosition.bind(this.model));\r\n        this.model.subscribe('state', this.view.updateState.bind(this.view));\r\n        this.model.subscribe('changePosition', this.view.changePosition.bind(this.view));\r\n        this.model.subscribe('direction', this.view.changeDirection.bind(this.view));\r\n        this.model.subscribe('type', this.view.changeType.bind(this.view));\r\n        this.model.subscribe('step', this.view.changeStep.bind(this.view));\r\n        this.model.subscribe('max', this.view.changeMaxMin.bind(this.view));\r\n        this.model.subscribe('min', this.view.changeMaxMin.bind(this.view));\r\n        this.model.subscribe('showBubble', this.view.showBubble.bind(this.view));\r\n        this.model.subscribe('hideBubble', this.view.hideBubble.bind(this.view));\r\n    }\r\n}\r\n\r\nexport {Presenter};\r\n","import {Observer} from './Observer';\r\nimport {\r\n    GetRelativeType, State, TargetType, TypeOfSlider, DirectionType, ModelEvents\r\n} from './types/types';\r\nimport {NotifyData} from './types/types';\r\n\r\nclass Model extends Observer<ModelEvents> {\r\n    private state: State;\r\n\r\n    constructor(options: State) {\r\n        super();\r\n        this.state = Object.assign({}, options);\r\n    }\r\n\r\n    calcPosition(data: NotifyData): void {\r\n        let updatedValue: number;\r\n        let updatedProperty: TargetType;\r\n        if (data.target === 'valueTo') {\r\n            updatedProperty = 'valueTo';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        } else if (data.target === 'value') {\r\n            const property = this.calcValueHelper(data);\r\n            updatedValue = data.valueArray?.[3] || 0;\r\n            updatedProperty = property;\r\n        } else if (data.target === 'valueClick') {\r\n            const {\r\n                property,\r\n                value\r\n            } = this.calcValueHelperClick(data);\r\n            updatedValue = value;\r\n            updatedProperty = property;\r\n        } else {\r\n            updatedProperty = 'valueFrom';\r\n            updatedValue = this.calcUpdatedValue(data, updatedProperty);\r\n        }\r\n        updatedValue = Number(updatedValue.toFixed(2));\r\n        this.state = {\r\n            ...this.state,\r\n            [updatedProperty]: updatedValue\r\n        };\r\n        this.notify('state', {\r\n            target: updatedProperty,\r\n            valueNumber: updatedValue\r\n        });\r\n        let position = Model.getValueRelative({\r\n            value: updatedValue,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify('changePosition', {\r\n            target: updatedProperty,\r\n            valueNumber: position\r\n        });\r\n    }\r\n\r\n    set bubble(value: boolean) {\r\n        this.state.bubble = value;\r\n        if (value) {\r\n            this.notify('showBubble', {\r\n                target: 'bubble',\r\n                valueBoolean: value\r\n            });\r\n        } else {\r\n            this.notify('hideBubble', {\r\n                target: 'bubble',\r\n                valueBoolean: value\r\n            });\r\n        }\r\n    }\r\n\r\n    set direction(value: DirectionType) {\r\n        this.state.direction = value;\r\n        this.notify('direction', {\r\n            target: 'direction',\r\n            valueString: value\r\n        });\r\n    }\r\n\r\n    set type(value: TypeOfSlider) {\r\n        this.state.type = value;\r\n        this.notify('type', {\r\n            target: 'type',\r\n            valueString: value\r\n        });\r\n        if (this.state.min > this.state.valueFrom) {\r\n            this.from = this.state.min;\r\n        }\r\n        if (this.state.valueFrom > this.state.valueTo) {\r\n            this.from = this.state.valueTo;\r\n        }\r\n    }\r\n\r\n    set step(value: number) {\r\n        const stepIsValid = (val: number, max: number, min: number): boolean => {\r\n            return val < max - min && val > 0;\r\n        };\r\n        if (!stepIsValid(value, this.state.max, this.state.min)) throw new Error('Шаг не может быть больше разницы максимума и минимума или меньше нуля');\r\n        this.state.step = value;\r\n        this.notify('step', {\r\n            target: 'step',\r\n            valueNumber: value\r\n        });\r\n    }\r\n\r\n    get step(): number {\r\n        return this.state.step;\r\n    }\r\n\r\n    set max(value: number) {\r\n        if (value <= this.state.min) {\r\n            throw new Error('Максимум не может быть меньше или равен минимуму');\r\n        }\r\n        if (value < this.state.valueTo) {\r\n            this.to = value;\r\n            this.notify('state', {\r\n                target: 'valueTo',\r\n                valueNumber: value\r\n            });\r\n        }\r\n        this.state.max = value;\r\n        this.notify('max', {\r\n            target: 'max',\r\n            valueNumber: value\r\n        });\r\n    }\r\n\r\n    get max(): number {\r\n        return this.state.max;\r\n    }\r\n\r\n    set min(value: number) {\r\n        if (value >= this.state.max || value >= this.state.valueTo) {\r\n            throw new Error('Минимум не может быть больше или равен максимуму');\r\n        }\r\n        if (this.state.type === 'double' && value > this.state.valueFrom) {\r\n            this.from = value;\r\n            this.notify('state', {\r\n                target: 'valueFrom',\r\n                valueNumber: value\r\n            });\r\n        }\r\n        this.state.min = value;\r\n        this.notify('min', {\r\n            target: 'min',\r\n            valueNumber: value\r\n        });\r\n    }\r\n\r\n    get min(): number {\r\n        return this.state.min;\r\n    }\r\n\r\n    set to(value: number) {\r\n        this.state.valueTo = this.validValueTo(value);\r\n        this.notify('state', {\r\n            target: 'valueTo',\r\n            valueNumber: this.state.valueTo\r\n        });\r\n        let position = Model.getValueRelative({\r\n            value: this.state.valueTo,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify('changePosition', {\r\n            target: 'valueTo',\r\n            valueNumber: position\r\n        });\r\n    }\r\n\r\n    get valueTo(): number {\r\n        return this.state.valueTo;\r\n    }\r\n\r\n    set from(value: number) {\r\n        if (this.state.type === 'single') return;\r\n        this.state.valueFrom = Number(this.validValueFrom(value)\r\n            .toFixed(2));\r\n        this.notify('state', {\r\n            target: 'valueFrom',\r\n            valueNumber: this.state.valueFrom\r\n        });\r\n        let position = Model.getValueRelative({\r\n            value: this.state.valueFrom,\r\n            min: this.state.min,\r\n            max: this.state.max\r\n        });\r\n        position = Model.moreThan0LessThan1(position);\r\n        this.notify('changePosition', {\r\n            target: 'valueFrom',\r\n            valueNumber: position\r\n        });\r\n    }\r\n\r\n    get valueFrom(): number {\r\n        return this.state.valueFrom;\r\n    }\r\n\r\n    private static moreThan0LessThan1(value: number): number {\r\n        let newValue = value;\r\n        newValue = newValue > 1 ? 1 : newValue;\r\n        newValue = newValue < 0 ? 0 : newValue;\r\n        return newValue;\r\n    }\r\n\r\n    private static getValueRelative({\r\n        value,\r\n        min,\r\n        max\r\n    }: GetRelativeType): number {\r\n        return (value - min) / (max - min);\r\n    }\r\n\r\n    private calcValue(value: number, updatedProperty = 'valueTo'): number {\r\n        let newValue: number = value;\r\n        newValue *= (this.state.max - this.state.min);\r\n        return this.state.min + this.calcValueByStep(newValue, updatedProperty);\r\n    }\r\n\r\n    private calcValueHelper(data: NotifyData) {\r\n        const updatedValue = this.calcUpdatedValueRelative(data);\r\n        let updatedProperty: TargetType;\r\n        if (this.state.type === 'single') {\r\n            updatedProperty = 'valueTo';\r\n        } else {\r\n            updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n        }\r\n        return updatedProperty;\r\n    }\r\n\r\n    private calcValueHelperClick(data: NotifyData) {\r\n        let updatedValue = this.calcUpdatedValueRelative(data);\r\n        let updatedProperty: TargetType;\r\n        if (this.state.type === 'single') {\r\n            updatedProperty = 'valueTo';\r\n        } else {\r\n            updatedProperty = this.isValueTo(updatedValue) ? 'valueTo' : 'valueFrom';\r\n        }\r\n        updatedValue = updatedProperty === 'valueFrom' ? this.validValueFrom(updatedValue) : this.validValueTo(updatedValue);\r\n        return {\r\n            property: updatedProperty,\r\n            value: updatedValue\r\n        };\r\n    }\r\n\r\n    private calcValueByStep(value: number, updatedProperty: string): number {\r\n        let newValue: number = value;\r\n        if (this.state.step === undefined) throw new Error('Значение step не определено');\r\n        const stepsInValue: number = newValue / this.state.step;\r\n        if (stepsInValue % 1 >= 0.5) {\r\n            newValue = this.state.step * Math.ceil(stepsInValue);\r\n        } else {\r\n            newValue = this.state.step * Math.floor(stepsInValue);\r\n        }\r\n        if (updatedProperty === 'valueTo') {\r\n            const maxSteps: number = (this.state.max - this.state.min) / this.state.step;\r\n            if (stepsInValue === maxSteps) {\r\n                newValue = this.state.min < 0\r\n                    ? this.state.max + Math.abs(this.state.min)\r\n                    : this.state.max;\r\n            }\r\n        }\r\n        const popRes: string | undefined = this.state.step.toString()\r\n            .split('.')\r\n            .pop();\r\n        let accuracy = 0;\r\n        if (popRes !== undefined) {\r\n            accuracy = this.state.step.toString()\r\n                .includes('.') ? (popRes.length) : 0;\r\n        }\r\n        return Number(newValue.toFixed(accuracy));\r\n    }\r\n\r\n    private validValueTo(valueTo: number): number {\r\n        if (valueTo > this.state.max) {\r\n            return this.state.max;\r\n        }\r\n        if (valueTo < this.state.min) {\r\n            return this.state.min;\r\n        }\r\n        if (this.state.type === 'double' && valueTo <= this.state.valueFrom) {\r\n            return this.state.valueFrom + this.state.step;\r\n        }\r\n        return valueTo;\r\n    }\r\n\r\n    private validValueFrom(valueFrom: number): number {\r\n        if (valueFrom < this.state.min) {\r\n            return this.state.min;\r\n        }\r\n        if (valueFrom >= this.state.valueTo) {\r\n            return this.state.valueTo - this.state.step;\r\n        }\r\n        return valueFrom;\r\n    }\r\n\r\n    private calcUpdatedValue(data: NotifyData, updatedProperty: string): number {\r\n        if (data.valueArray === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const [headCoordinate, clientCoordinate, lineParameter,\r\n            lineCoordinate, swipeClient, halfHeadWidth] = data.valueArray;\r\n        const shift = clientCoordinate - headCoordinate;\r\n        let newPosition = (swipeClient - shift - lineCoordinate + halfHeadWidth)\r\n            / lineParameter;\r\n        newPosition = Model.moreThan0LessThan1(newPosition);\r\n        const updatedValue = this.calcValue(newPosition, updatedProperty);\r\n        return updatedProperty === 'valueTo' ? this.validValueTo(updatedValue) : this.validValueFrom(updatedValue);\r\n    }\r\n\r\n    private calcUpdatedValueRelative(data: NotifyData): number {\r\n        if (data.valueArray === undefined) {\r\n            throw new Error('Ожидался массив значений для Model');\r\n        }\r\n        const [lineParameter, lineCoordinate, clientCoordinate] = data.valueArray;\r\n        let newPositionRelative = (clientCoordinate - lineCoordinate) / lineParameter;\r\n        newPositionRelative = Model.moreThan0LessThan1(newPositionRelative);\r\n        return this.calcValue(newPositionRelative);\r\n    }\r\n\r\n    private isValueTo = (updatedValue: number): boolean => (updatedValue - this.state.valueFrom)\r\n        / (this.state.valueTo - this.state.valueFrom) >= 0.5;\r\n}\r\n\r\nexport {Model};\r\n","import {View} from './View';\r\nimport {Presenter} from './Presenter';\r\nimport {Model} from './Model';\r\nimport {DirectionType, State, TypeOfSlider} from './types/types';\r\n\r\nclass Slider {\r\n    private readonly view: View;\r\n\r\n    readonly elem: HTMLElement;\r\n\r\n    private readonly presenter: Presenter;\r\n\r\n    private readonly model: Model;\r\n\r\n    constructor(elem: HTMLElement, settings: State) {\r\n        this.elem = elem;\r\n        this.model = new Model(settings);\r\n        this.view = new View(this.elem, settings);\r\n        this.view.init();\r\n        this.presenter = new Presenter(this.model, this.view);\r\n    }\r\n\r\n    hideBubble(): boolean {\r\n        this.model.bubble = false;\r\n        return true;\r\n    }\r\n\r\n    showBubble(): boolean {\r\n        this.model.bubble = true;\r\n        return true;\r\n    }\r\n\r\n    changeDirection(value: DirectionType): boolean {\r\n        this.model.direction = value;\r\n        return true;\r\n    }\r\n\r\n    changeType(value: TypeOfSlider): boolean {\r\n        this.model.type = value;\r\n        return true;\r\n    }\r\n\r\n    changeStep(value: number): boolean {\r\n        this.model.step = value;\r\n        return true;\r\n    }\r\n\r\n    changeTo(value: number): boolean {\r\n        this.model.to = value;\r\n        return true;\r\n    }\r\n\r\n    changeFrom(value: number): boolean {\r\n        this.model.from = value;\r\n        return true;\r\n    }\r\n\r\n    changeMax(value: number): boolean {\r\n        this.model.max = value;\r\n        return true;\r\n    }\r\n\r\n    changeMin(value: number): boolean {\r\n        this.model.min = value;\r\n        return true;\r\n    }\r\n\r\n    getMax(): number {\r\n        return this.model.max;\r\n    }\r\n\r\n    getMin(): number {\r\n        return this.model.min;\r\n    }\r\n\r\n    getValueTo(): number {\r\n        return this.model.valueTo;\r\n    }\r\n\r\n    getValueFrom(): number {\r\n        return this.model.valueFrom;\r\n    }\r\n\r\n    getStep(): number {\r\n        return this.model.step;\r\n    }\r\n}\r\n\r\nexport {Slider};\r\n","import {Slider} from './Slider';\r\n\r\n(function ($) {\r\n    const sliders = [];\r\n    const methods = {\r\n        init: function (options) {\r\n            const settings = $.extend({\r\n                bubble: true,\r\n                max: 100,\r\n                min: 0,\r\n                step: 1,\r\n                type: 'single',\r\n                valueTo: 100,\r\n                valueFrom: 5,\r\n                direction: 'horizontal',\r\n                onChangeTo: function () {\r\n                },\r\n                onChangeFrom: function () {\r\n                }\r\n            }, options);\r\n\r\n            return this.each(function () {\r\n                const ths = $(this);\r\n                if (settings.step > settings.max - settings.min) throw new Error('Шаг не может быть больше разницы максимума и минимума');\r\n                if (settings.step <= 0) throw new Error('Шаг должен быть больше нуля');\r\n                if (settings.valueTo > settings.max) throw new Error('Текущее значение не может быть больше максимума');\r\n                if (settings.valueFrom < settings.min) throw new Error('Текущее значение не может быть меньше минимума');\r\n                sliders.push(new Slider(ths[0], settings));\r\n            });\r\n        },\r\n        hideBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.hideBubble();\r\n        },\r\n        showBubble: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.showBubble();\r\n        },\r\n        changeDirection: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeDirection(value);\r\n        },\r\n        changeType: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            slider.changeType(value);\r\n        },\r\n        changeStep: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('step должно быть числом');\r\n            slider.changeStep(value);\r\n        },\r\n        changeTo: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueTo должно быть числом');\r\n            slider.changeTo(value);\r\n        },\r\n        changeFrom: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeFrom(value);\r\n        },\r\n        changeMax: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMax(value);\r\n        },\r\n        getMax: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMax();\r\n        },\r\n        getMin: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getMin();\r\n        },\r\n        getValueTo: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueTo();\r\n        },\r\n        getValueFrom: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getValueFrom();\r\n        },\r\n        getStep: function () {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            return slider.getStep();\r\n        },\r\n        changeMin: function (value) {\r\n            let slider;\r\n            sliders.forEach((x) => {\r\n                if (x.elem === this[0]) {\r\n                    slider = x;\r\n                }\r\n            });\r\n            if (Number.isNaN(value)) throw new Error('valueFrom должно быть числом');\r\n            slider.changeMin(value);\r\n        }\r\n\r\n    };\r\n    // eslint-disable-next-line no-param-reassign\r\n    $.fn.Slider = function (method) {\r\n        if (methods[method]) {\r\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n        if (typeof method === 'object' || !method) {\r\n            return methods.init.apply(this, arguments);\r\n        }\r\n        $.error('Метод с именем ' + method + ' не существует для jQuery.slider');\r\n        return null;\r\n    };\r\n}(jQuery));\r\n","import './slider-template.scss';\r\nimport '../../slider/jquery.slider.js';\r\nimport {State} from '../../slider/types/types';\r\nimport {rootLogger} from 'ts-jest';\r\n\r\nclass SliderTemplate {\r\n    private readonly element: JQuery;\r\n\r\n    private $bubbleButton: JQuery | undefined;\r\n\r\n    private $verticalButton: JQuery | undefined;\r\n\r\n    private $rangeButton: JQuery | undefined;\r\n\r\n    private $stepInput: JQuery | undefined;\r\n\r\n    private $toInput: JQuery | undefined;\r\n\r\n    private $fromInput: JQuery | undefined;\r\n\r\n    private $maxInput: JQuery | undefined;\r\n\r\n    private $minInput: JQuery | undefined;\r\n\r\n    private slider: JQuery | undefined;\r\n\r\n    constructor(element: HTMLElement, settings: State) {\r\n        this.element = $(element);\r\n        this.init(settings);\r\n    }\r\n\r\n    init(settings: State): void {\r\n        this.$bubbleButton = $(this.element.find('.js-slider-template__inner-input-bubble'));\r\n        this.$verticalButton = $(this.element.find('.js-slider-template__inner-input-vertical'));\r\n        this.$rangeButton = $(this.element.find('.js-slider-template__inner-input-range'));\r\n        this.$stepInput = $(this.element.find('.js-slider-template__inner-input-step'));\r\n        this.$toInput = $(this.element.find('.js-slider-template__inner-input-to'));\r\n        this.$fromInput = $(this.element.find('.js-slider-template__inner-input-from'));\r\n        this.$maxInput = $(this.element.find('.js-slider-template__inner-input-max'));\r\n        this.$minInput = $(this.element.find('.js-slider-template__inner-input-min'));\r\n        const options = Object.assign(settings, {\r\n            onChangeTo: (value: number) => {\r\n                this.$toInput?.val(value);\r\n            },\r\n            onChangeFrom: (value: number) => {\r\n                this.$fromInput?.val(value);\r\n            }\r\n        });\r\n        this.slider = $(this.element.find('.slider'))\r\n            .Slider(options);\r\n        this.setup();\r\n    }\r\n\r\n    setup(): void {\r\n        this.$bubbleButton?.on('click', this.handleBubbleButtonClick);\r\n        this.$verticalButton?.on('click', this.handleVerticalButtonClick);\r\n        this.$rangeButton?.on('click', this.handleRangeButtonClick);\r\n        if (!this.$rangeButton?.is(':checked')) {\r\n            this.$fromInput?.parent()\r\n                .addClass('slider-template__label_hide');\r\n        }\r\n        this.$stepInput?.on('change', this.handleStepInputChange);\r\n        this.$stepInput?.val(String(this.slider?.Slider('getStep')));\r\n        this.$toInput?.on('change', this.handleToInputChange);\r\n        this.$toInput?.val(String(this.slider?.Slider('getValueTo')));\r\n        this.$fromInput?.on('change', this.handleFromInputChange);\r\n        this.$fromInput?.val(String(this.slider?.Slider('getValueFrom')));\r\n        this.$maxInput?.on('change', this.handleMaxInputChange);\r\n        this.$maxInput?.val(String(this.slider?.Slider('getMax')));\r\n        this.$minInput?.on('change', this.handleMinInputChange);\r\n        this.$minInput?.val(String(this.slider?.Slider('getMin')));\r\n    }\r\n\r\n    handleBubbleButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider?.Slider('showBubble') : this.slider?.Slider('hideBubble');\r\n    };\r\n\r\n    handleVerticalButtonClick = (e: JQuery.ClickEvent): void => {\r\n        e.target.checked ? this.slider?.Slider('changeDirection', 'vertical') : this.slider?.Slider('changeDirection', 'horizontal');\r\n    };\r\n\r\n    handleRangeButtonClick = (e: JQuery.ClickEvent): void => {\r\n        if (e.target.checked) {\r\n            this.slider?.Slider('changeType', 'double');\r\n            this.$fromInput?.parent()\r\n                .removeClass('slider-template__label_hide');\r\n        } else {\r\n            this.slider?.Slider('changeType', 'single');\r\n            this.$fromInput?.parent()\r\n                .addClass('slider-template__label_hide');\r\n        }\r\n    };\r\n\r\n    handleStepInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeStep', parseFloat(e.target.value));\r\n            const step = this.slider?.Slider('getStep');\r\n            this.$toInput?.attr('step', String(step));\r\n            this.$fromInput?.attr('step', String(step));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getStep');\r\n        }\r\n    };\r\n\r\n    handleToInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider?.Slider('changeTo', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleFromInputChange = (e: JQuery.ChangeEvent): void => {\r\n        this.slider?.Slider('changeFrom', parseFloat(e.target.value));\r\n    };\r\n\r\n    handleMaxInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeMax', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getMax');\r\n        }\r\n    };\r\n\r\n    handleMinInputChange = (e: JQuery.ChangeEvent): void => {\r\n        try {\r\n            this.slider?.Slider('changeMin', parseFloat(e.target.value));\r\n        } catch (error) {\r\n            e.target.value = this.slider?.Slider('getMin');\r\n        }\r\n    };\r\n}\r\n\r\nexport default SliderTemplate;\r\n","import './index.scss';\r\nimport '../blocks/slider-block/slider-block.scss';\r\nimport '../slider/jquery.slider';\r\nimport '../blocks/slider-template/slider-template';\r\nimport SliderTemplate from '../blocks/slider-template/slider-template';\r\nimport {State} from '../slider/types/types';\r\n\r\n$(function () {\r\n    const settings: State[] = [\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 100,\r\n            min: 0,\r\n            step: 1,\r\n            type: 'double',\r\n            valueTo: 100,\r\n            valueFrom: 0,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: false,\r\n            direction: 'vertical',\r\n            max: 90,\r\n            min: 5,\r\n            step: 2,\r\n            type: 'single',\r\n            valueTo: 50,\r\n            valueFrom: 15,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        },\r\n        {\r\n            bubble: true,\r\n            direction: 'horizontal',\r\n            max: 1000,\r\n            min: -100,\r\n            step: 30,\r\n            type: 'single',\r\n            valueTo: 780,\r\n            valueFrom: -5,\r\n            onChangeTo: function () {\r\n            },\r\n            onChangeFrom: function () {\r\n            }\r\n        }\r\n    ];\r\n    $('.slider-template')\r\n        .each((index, element) => {\r\n            // eslint-disable-next-line no-new\r\n            new SliderTemplate(element, settings[index]);\r\n        });\r\n});\r\n"],"names":["Observer","this","observers","subscribe","eventType","observer","push","unsubscribe","filter","item","notify","data","forEach","$7f7f88587dcc82e7$export$2e2bcd8739ae039","parent","type","element","document","createElement","init","classList","add","setAttribute","append","update","value","textContent","String","onActive","offActive","remove","show","hide","$443d33087eac4543$export$2e2bcd8739ae039","constructor","direction","bubbleValue","handleHeadStart","e","headEvent","CustomEvent","detail","dispatchEvent","bubble","HeadBubble","updatePosition","updateBubble","addEventListener","removeHead","newPos","style","left","top","showBubble","hideBubble","width","getBoundingClientRect","height","high","down","$0107047da07a407d$export$2e2bcd8739ae039","min","max","handleScaleClick","node","target","HTMLElement","event","Number","dataset","step","i","dashValue","dash","scaleNumber","numbers","querySelectorAll","number","length","innerHTML","isInteger","toFixed","removeScale","leftCoordinate","topCoordinate","$790a1a2e6b71ddca$export$2e2bcd8739ae039","handleLineClick","progressBar","Type","progressValue","to","from","undefined","parseInt","removeLine","View","elem","options","super","evt","getEvent","updatedHead","hasAttribute","dataArray","state","clientX","clientY","handleSwipe","swipeAction","passive","handleSwipeEnd","preventDefault","evtSwipe","line","head","valueArray","slice","splice","onEndWork","removeEventListener","scaleClickData","changeZIndex","Object","assign","Line","scale","Scale","headStartPos","calcHeadStartPosition","valueTo","ViewHead","head2StartPos","valueFrom","head2","setup","changePosition","position","valueNumber","Error","onChangeTo","onChangeFrom","updateState","valueBoolean","changeDirection","valueString","reInit","changeType","changeStep","changeMaxMin","getValueFromData","entries","key","TouchEvent","touches","isInCorner","Presenter","model","view","calcPosition","bind","Model","isValueTo","updatedValue","updatedProperty","calcUpdatedValue","property","calcValueHelper","calcValueHelperClick","getValueRelative","moreThan0LessThan1","val","validValueTo","validValueFrom","newValue","calcValue","calcValueByStep","calcUpdatedValueRelative","stepsInValue","Math","ceil","floor","abs","popRes","toString","split","pop","accuracy","includes","clientCoordinate","headCoordinate","lineParameter","lineCoordinate","swipeClient","halfHeadWidth","newPosition","newPositionRelative","Slider","settings","presenter","changeTo","changeFrom","changeMax","changeMin","getMax","getMin","getValueTo","getValueFrom","getStep","$","sliders","methods","extend","each","ths","slider","x","isNaN","fn","method","apply","Array","prototype","call","arguments","error","jQuery","$ac628bb2660317a7$export$2e2bcd8739ae039","handleBubbleButtonClick","checked","handleVerticalButtonClick","handleRangeButtonClick","$fromInput","removeClass","addClass","handleStepInputChange","parseFloat","$toInput","attr","handleToInputChange","handleFromInputChange","handleMaxInputChange","handleMinInputChange","$bubbleButton","find","$verticalButton","$rangeButton","$stepInput","$maxInput","$minInput","on","is","index","SliderTemplate"],"version":3,"file":"index.6df39543.js.map"}